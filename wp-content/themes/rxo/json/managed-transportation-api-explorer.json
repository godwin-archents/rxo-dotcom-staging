{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "A guide to RXO's REST APIs",
    "description": "\n# Introduction \nWelcome to RXO's open ManagedTrans API explorer! Here, you have the ability to discover the possibilities that RXO has to offer through our suite of open APIs\n\nOur APIs are built on modern REST principles, and will enable you to drive success for your organization by directly integrating information from RXO's transportation ecosystem to your own applications. \n- **Key features are:** \n * On-demand access to real-time market rates, across multiple modes of transportation. \n * Ability to convert rate quotes to live orders.\n * Ability to retrieve order events, to understand the status of active orders. \n *Access to order related documents, such as BOL's and POD's.\n\nIn this page, you'll find the information regarding all of our available APIs, their operations, along with complete details on parameters, requests and response formats.\n\nAre you looking for an API capability that we don't yet offer? Please reach out to us at MTapionboarding@rxo.com and let us know what you're looking for. We are continuously working to offer new integration capabilities for our customers and partners."
  },
  "servers": [
    {
      "url": "https://api-uat-rxoconnect.rxo.com",
      "description": "**Test Environment** \n\nMessage Limit- 100 KB, Rate Limit - 1 call per second, Quota Limit - 2500 calls per day."
    },
    {
      "url": "https://api-rxoconnect.rxo.com",
      "description": "**Production Environment** \n\nMessage Limit- 100 KB, Rate Limit - 5 calls per second, Quota Limit - Unlimited."
    }
  ],
  "security": [
    {
      "OAuth": []
    },
    {
      "api_key": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "RXO Logistics uses OAuth 2.0 token mechanism to securely access API endpoints using client credentials grant type. \n\nUser must get Client Id, Client Secret, Scope and API Key prior to generate bearer token either by requesting to apionboarding@rxo.com or submitting a support query  <a href=\"https://apisolutions.rxo.com/transportation/#contact-us\">Here</a>.\n\nThe diagram below illustrates the supported authorization flow.\n\n<img src=\"https://static-content-dev.rxo.com/Authentication%20Diagram%202.PNG\" alt=\"Authorization Flow Diagram\">"
    },
    {
      "name": "Orders",
      "description": "RXO's Orders API allows partners to manage their orders."
    },
    {
      "name": "Events",
      "description": "RXO's Events API provides order and shipment status for shipments."
    },
    {
      "name": "Shipments",
      "description": "RXO's Shipments API allows partner to retrieve shipments data."
    }
  ],
  "paths": {
    "/oAuthAPI/rest/v1/token": {
      "post": {
        "description": "Generate token allows you to generate a bearer token. In order to generate the token, you will need to provide an API key in the request header parameter as well as Client ID, Client Secret, Scope and Grant Type in the payload.\n\n Once the token is generated, you will be able to use that token to access any of RXO's open API endpoints. The generated token will expire in 2 hours. Once expired, you will need to refresh the token in order to continue to access the API.",
        "operationId": "Generate Token",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by RXO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "[JSON]Generate Token Request.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tokenrequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-rxoconnect.rxo.com\/oAuthAPI\/rest\/v1\/token\/' \\\n\n--header 'x-api-key: XXXXXXXXXXXXXXXX' \\\n\n--header 'Content-Type: application\/json' \\\n\n--data-raw '{\n\n\"client_id\": \"xpo-tran-boomi-test-app\",\n\n\"client_secret\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n\n\"scope\": \"xpo-rates-api\",\n\n\"grant_type\": \"client_credentials\"\n\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n\n  .build();\n\nMediaType mediaType = MediaType.parse(\"application\/json\");\n\nRequestBody body = RequestBody.create(mediaType, \"{\\r\\n\\\"client_id\\\": \\\"xpo-tran-boomi-test-app\\\",\\r\\n\\\"client_secret\\\": \\\"XXXXXXXXXXXXXXXXXXXXXXX\\\",\\r\\n\\\"scope\\\": \\\"xpo-rates-api\\\",\\r\\n\\\"grant_type\\\": \\\"client_credentials\\\"\\r\\n}\");\n\nRequest request = new Request.Builder()\n\n  .url(\"https:\/\/api-uat-rxoconnect.rxo.com\/oAuthAPI\/rest\/v1\/token\/\")\n\n  .method(\"POST\", body)\n\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXX\")\n\n  .addHeader(\"Content-Type\", \"application\/json\")\n\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\n\nvar options = {\n\n  'method': 'POST',\n\n  'url': 'https:\/\/api-uat-rxoconnect.rxo.com\/oAuthAPI\/rest\/v1\/token\/',\n\n  'headers': {\n\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXX',\n\n    'Content-Type': 'application\/json'\n\n  },\n\n  body: JSON.stringify({\"client_id\":\"xpo-tran-boomi-test-app\",\"client_secret\":\"XXXXXXXXXXXXXXXXXXXX\",\"scope\":\"xpo-rates-api\",\"grant_type\":\"client_credentials\"})\n\n\n\n};\n\nrequest(options, function (error, response) { \n\n  if (error) throw new Error(error);\n\n  console.log(response.body);\n\n});\n\n"
          },
          {
            "lang": "C#(RestSharp)",
            "source": "var client = new RestClient(\"https:\/\/api-uat-rxoconnect.rxo.com\/oAuthAPI\/rest\/v1\/token\/\");\n\nclient.Timeout = -1;\n\nvar request = new RestRequest(Method.POST);\n\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXX\");\n\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\n\nrequest.AddParameter(\"application\/json\", \"{\\r\\n\\\"client_id\\\": \\\"xpo-tran-boomi-test-app\\\",\\r\\n\\\"client_secret\\\": \\\"XXXXXXXXXXXXXXXXXXXXXX\\\",\\r\\n\\\"scope\\\": \\\"xpo-rates-api\\\",\\r\\n\\\"grant_type\\\": \\\"client_credentials\\\"\\r\\n}\",  ParameterType.RequestBody);\n\nIRestResponse response = client.Execute(request);\n\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/successtoken"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact RXO representative."
          }
        }
      }
    },
    "/orderAPI/rest/v1/Order": {
      "post": {
        "description": "Create Order allows you to submit a new order, without including a spot quote ID. Create Order is best suited for use by customers who have contract rates on file with RXO.\n\n To use the Create Order API, you will need to provide a valid API key and token in the header parameter, and the order details in the request payload.",
        "operationId": "Create Order",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by RXO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-rxoconnect.rxo.com\/orderAPI\/rest\/v1\/Order' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'Content-Type: application\/json' \\\r\n--data-raw '{\r\n    \"orderDate\": \"2020-10-12T12:08:09.31\",\r\n    \"transportationMode\": \"SEA\",\r\n    \"applicationSource\": \"2\",\r\n    \"orderNumber\": \"HouseBill676897\",\r\n    \"orderNotes\": [\r\n        {\r\n            \"type\": \"GoodsDescription\",\r\n            \"value\": \"test description\"\r\n        }\r\n    ],\r\n    \"orderReferenceNumbers\": [\r\n        {\r\n            \"type\": \"CREATEDBY\",\r\n            \"value\": \"FASANGMKE\"\r\n        }\r\n    ],\r\n    \"additionalServices\": [\r\n        {\r\n            \"name\": \"ServiceLevel\",\r\n            \"code\": \"5\"\r\n        },\r\n        {\r\n            \"name\": \"InsuranceType\",\r\n            \"code\": \"test\"\r\n        }\r\n    ],\r\n    \"stops\": [\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 1,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-02-20T08:00:00\",\r\n            \"sequenceNo\": 1,\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"HITPRODEN\",\r\n                    \"type\": \"Shipper\",\r\n                    \"value\": \"ABC Corporation\"\r\n                },\r\n                {\r\n                    \"type\": \"ShipperReference\",\r\n                    \"value\": \"TestShipperReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 3,\r\n            \"sequenceNo\": 3,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Consignee\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                },\r\n                {\r\n                    \"type\": \"ConsigneeReference\",\r\n                    \"value\": \"TestConsigneeReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                },\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"sequenceNo\": 2,\r\n            \"type\": 2,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"requestedDeliveryDate\": \"2020-02-27T15:00:00\",\r\n    \"items\": [\r\n        {\r\n            \"itemCode\": \"100-1900\",\r\n            \"itemNumber\": \"100056006\",\r\n            \"itemDescription\": \"CONCRETE BUCKET 1\\\/2 YD\",\r\n            \"units\": 10,\r\n            \"unitTypeCode\": \"EACH\",\r\n            \"packageUnits\": 2,\r\n            \"packageTypeCode\": \"BAG\",\r\n            \"weight\": 330,\r\n            \"weightUomCode\": \"LB\",\r\n            \"height\": 99.998999999999995225152815692126750946044921875,\r\n            \"heightUomCode\": \"IN\",\r\n            \"length\": 99.998999999999995225152815692126750946044921875,\r\n            \"lengthUomCode\": \"IN\",\r\n            \"width\": 150,\r\n            \"widthUomCode\": \"IN\",\r\n            \"declaredValue\": 2285.88999999999987267074175179004669189453125,\r\n            \"declaredValueCurrencyCode\": \"USD\",\r\n            \"volume\": 868.0385999999999739884515292942523956298828125,\r\n            \"volumeUomCode\": \"CUFT\",\r\n            \"itemPrice\": 20.5,\r\n            \"itemPriceCurrencyCode\": \"USD\",\r\n            \"isTemperatureControlled\": false,\r\n            \"isHazmat\": false,\r\n            \"hazardousItemInfo\": {\r\n                \"unnumber\": 0,\r\n                \"packingGroup\": 0,\r\n                \"receptacleSize\": 0,\r\n                \"hazardousClass\": null,\r\n                \"numberofReceptacles\": 0,\r\n                \"unitofMeasure\": null,\r\n                \"containerType\": null,\r\n                \"hazardousDescription\": null,\r\n                \"hazardousPhoneNumber\": null,\r\n                \"shippingName\": null\r\n            },\r\n            \"htscode\": null,\r\n            \"sku\": \"Sku00001\",\r\n            \"purchaseOrderNumber\": null,\r\n            \"itemReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"1001\",\r\n                    \"type\": \"CommodityCode\"\r\n                },\r\n                {\r\n                    \"value\": \"c60\",\r\n                    \"type\": \"FreightClass\"\r\n                },\r\n                {\r\n                    \"value\": \"60\",\r\n                    \"type\": \"POQuantity\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"partnerIdentifierCode\": \"10-1-MCGEEHIF\"\r\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nMediaType mediaType = MediaType.parse(\"application\/json\");\r\nRequestBody body = RequestBody.create(mediaType, \"{\r\n    \"orderDate\": \"2020-10-12T12:08:09.31\",\r\n    \"transportationMode\": \"SEA\",\r\n    \"applicationSource\": \"2\",\r\n    \"orderNumber\": \"HouseBill676897\",\r\n    \"orderNotes\": [\r\n        {\r\n            \"type\": \"GoodsDescription\",\r\n            \"value\": \"test description\"\r\n        }\r\n    ],\r\n    \"orderReferenceNumbers\": [\r\n        {\r\n            \"type\": \"CREATEDBY\",\r\n            \"value\": \"FASANGMKE\"\r\n        }\r\n    ],\r\n    \"additionalServices\": [\r\n        {\r\n            \"name\": \"ServiceLevel\",\r\n            \"code\": \"5\"\r\n        },\r\n        {\r\n            \"name\": \"InsuranceType\",\r\n            \"code\": \"test\"\r\n        }\r\n    ],\r\n    \"stops\": [\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 1,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-02-20T08:00:00\",\r\n            \"sequenceNo\": 1,\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"HITPRODEN\",\r\n                    \"type\": \"Shipper\",\r\n                    \"value\": \"ABC Corporation\"\r\n                },\r\n                {\r\n                    \"type\": \"ShipperReference\",\r\n                    \"value\": \"TestShipperReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 3,\r\n            \"sequenceNo\": 3,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Consignee\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                },\r\n                {\r\n                    \"type\": \"ConsigneeReference\",\r\n                    \"value\": \"TestConsigneeReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                },\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"sequenceNo\": 2,\r\n            \"type\": 2,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"requestedDeliveryDate\": \"2020-02-27T15:00:00\",\r\n    \"items\": [\r\n        {\r\n            \"itemCode\": \"100-1900\",\r\n            \"itemNumber\": \"100056006\",\r\n            \"itemDescription\": \"CONCRETE BUCKET 1\\\/2 YD\",\r\n            \"units\": 10,\r\n            \"unitTypeCode\": \"EACH\",\r\n            \"packageUnits\": 2,\r\n            \"packageTypeCode\": \"BAG\",\r\n            \"weight\": 330,\r\n            \"weightUomCode\": \"LB\",\r\n            \"height\": 99.998999999999995225152815692126750946044921875,\r\n            \"heightUomCode\": \"IN\",\r\n            \"length\": 99.998999999999995225152815692126750946044921875,\r\n            \"lengthUomCode\": \"IN\",\r\n            \"width\": 150,\r\n            \"widthUomCode\": \"IN\",\r\n            \"declaredValue\": 2285.88999999999987267074175179004669189453125,\r\n            \"declaredValueCurrencyCode\": \"USD\",\r\n            \"volume\": 868.0385999999999739884515292942523956298828125,\r\n            \"volumeUomCode\": \"CUFT\",\r\n            \"itemPrice\": 20.5,\r\n            \"itemPriceCurrencyCode\": \"USD\",\r\n            \"isTemperatureControlled\": false,\r\n            \"isHazmat\": false,\r\n            \"hazardousItemInfo\": {\r\n                \"unnumber\": 0,\r\n                \"packingGroup\": 0,\r\n                \"receptacleSize\": 0,\r\n                \"hazardousClass\": null,\r\n                \"numberofReceptacles\": 0,\r\n                \"unitofMeasure\": null,\r\n                \"containerType\": null,\r\n                \"hazardousDescription\": null,\r\n                \"hazardousPhoneNumber\": null,\r\n                \"shippingName\": null\r\n            },\r\n            \"htscode\": null,\r\n            \"sku\": \"Sku00001\",\r\n            \"purchaseOrderNumber\": null,\r\n            \"itemReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"1001\",\r\n                    \"type\": \"CommodityCode\"\r\n                },\r\n                {\r\n                    \"value\": \"c60\",\r\n                    \"type\": \"FreightClass\"\r\n                },\r\n                {\r\n                    \"value\": \"60\",\r\n                    \"type\": \"POQuantity\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"partnerIdentifierCode\": \"10-1-MCGEEHIF\"\r\n}\");\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-rxoconnect.rxo.com\/orderAPI\/rest\/v1\/Order\")\r\n  .method(\"POST\", body)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"Content-Type\", \"application\/json\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'POST',\r\n  'url': 'https:\/\/api-uat-rxoconnect.rxo.com\/orderAPI\/rest\/v1\/Order',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'Content-Type': 'application\/json'\r\n  },\r\n  body: JSON.stringify({\r\n    \"orderDate\": \"2020-10-12T12:08:09.31\",\r\n    \"transportationMode\": \"SEA\",\r\n    \"applicationSource\": \"2\",\r\n    \"orderNumber\": \"HouseBill676897\",\r\n    \"orderNotes\": [\r\n        {\r\n            \"type\": \"GoodsDescription\",\r\n            \"value\": \"test description\"\r\n        }\r\n    ],\r\n    \"orderReferenceNumbers\": [\r\n        {\r\n            \"type\": \"CREATEDBY\",\r\n            \"value\": \"FASANGMKE\"\r\n        }\r\n    ],\r\n    \"additionalServices\": [\r\n        {\r\n            \"name\": \"ServiceLevel\",\r\n            \"code\": \"5\"\r\n        },\r\n        {\r\n            \"name\": \"InsuranceType\",\r\n            \"code\": \"test\"\r\n        }\r\n    ],\r\n    \"stops\": [\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 1,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-02-20T08:00:00\",\r\n            \"sequenceNo\": 1,\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"HITPRODEN\",\r\n                    \"type\": \"Shipper\",\r\n                    \"value\": \"ABC Corporation\"\r\n                },\r\n                {\r\n                    \"type\": \"ShipperReference\",\r\n                    \"value\": \"TestShipperReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 3,\r\n            \"sequenceNo\": 3,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Consignee\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                },\r\n                {\r\n                    \"type\": \"ConsigneeReference\",\r\n                    \"value\": \"TestConsigneeReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                },\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"sequenceNo\": 2,\r\n            \"type\": 2,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"requestedDeliveryDate\": \"2020-02-27T15:00:00\",\r\n    \"items\": [\r\n        {\r\n            \"itemCode\": \"100-1900\",\r\n            \"itemNumber\": \"100056006\",\r\n            \"itemDescription\": \"CONCRETE BUCKET 1\\\/2 YD\",\r\n            \"units\": 10,\r\n            \"unitTypeCode\": \"EACH\",\r\n            \"packageUnits\": 2,\r\n            \"packageTypeCode\": \"BAG\",\r\n            \"weight\": 330,\r\n            \"weightUomCode\": \"LB\",\r\n            \"height\": 99.998999999999995225152815692126750946044921875,\r\n            \"heightUomCode\": \"IN\",\r\n            \"length\": 99.998999999999995225152815692126750946044921875,\r\n            \"lengthUomCode\": \"IN\",\r\n            \"width\": 150,\r\n            \"widthUomCode\": \"IN\",\r\n            \"declaredValue\": 2285.88999999999987267074175179004669189453125,\r\n            \"declaredValueCurrencyCode\": \"USD\",\r\n            \"volume\": 868.0385999999999739884515292942523956298828125,\r\n            \"volumeUomCode\": \"CUFT\",\r\n            \"itemPrice\": 20.5,\r\n            \"itemPriceCurrencyCode\": \"USD\",\r\n            \"isTemperatureControlled\": false,\r\n            \"isHazmat\": false,\r\n            \"hazardousItemInfo\": {\r\n                \"unnumber\": 0,\r\n                \"packingGroup\": 0,\r\n                \"receptacleSize\": 0,\r\n                \"hazardousClass\": null,\r\n                \"numberofReceptacles\": 0,\r\n                \"unitofMeasure\": null,\r\n                \"containerType\": null,\r\n                \"hazardousDescription\": null,\r\n                \"hazardousPhoneNumber\": null,\r\n                \"shippingName\": null\r\n            },\r\n            \"htscode\": null,\r\n            \"sku\": \"Sku00001\",\r\n            \"purchaseOrderNumber\": null,\r\n            \"itemReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"1001\",\r\n                    \"type\": \"CommodityCode\"\r\n                },\r\n                {\r\n                    \"value\": \"c60\",\r\n                    \"type\": \"FreightClass\"\r\n                },\r\n                {\r\n                    \"value\": \"60\",\r\n                    \"type\": \"POQuantity\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"partnerIdentifierCode\": \"10-1-MCGEEHIF\"\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-rxoconnect.rxo.com\/orderAPI\/rest\/v1\/Order\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.POST);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\r\nrequest.AddParameter(\"application\/json\", \"{\r\n    \"orderDate\": \"2020-10-12T12:08:09.31\",\r\n    \"transportationMode\": \"SEA\",\r\n    \"applicationSource\": \"2\",\r\n    \"orderNumber\": \"HouseBill676897\",\r\n    \"orderNotes\": [\r\n        {\r\n            \"type\": \"GoodsDescription\",\r\n            \"value\": \"test description\"\r\n        }\r\n    ],\r\n    \"orderReferenceNumbers\": [\r\n        {\r\n            \"type\": \"CREATEDBY\",\r\n            \"value\": \"FASANGMKE\"\r\n        }\r\n    ],\r\n    \"additionalServices\": [\r\n        {\r\n            \"name\": \"ServiceLevel\",\r\n            \"code\": \"5\"\r\n        },\r\n        {\r\n            \"name\": \"InsuranceType\",\r\n            \"code\": \"test\"\r\n        }\r\n    ],\r\n    \"stops\": [\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 1,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-02-20T08:00:00\",\r\n            \"sequenceNo\": 1,\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"HITPRODEN\",\r\n                    \"type\": \"Shipper\",\r\n                    \"value\": \"ABC Corporation\"\r\n                },\r\n                {\r\n                    \"type\": \"ShipperReference\",\r\n                    \"value\": \"TestShipperReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 3,\r\n            \"sequenceNo\": 3,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Consignee\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                },\r\n                {\r\n                    \"type\": \"ConsigneeReference\",\r\n                    \"value\": \"TestConsigneeReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                },\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"sequenceNo\": 2,\r\n            \"type\": 2,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"requestedDeliveryDate\": \"2020-02-27T15:00:00\",\r\n    \"items\": [\r\n        {\r\n            \"itemCode\": \"100-1900\",\r\n            \"itemNumber\": \"100056006\",\r\n            \"itemDescription\": \"CONCRETE BUCKET 1\\\/2 YD\",\r\n            \"units\": 10,\r\n            \"unitTypeCode\": \"EACH\",\r\n            \"packageUnits\": 2,\r\n            \"packageTypeCode\": \"BAG\",\r\n            \"weight\": 330,\r\n            \"weightUomCode\": \"LB\",\r\n            \"height\": 99.998999999999995225152815692126750946044921875,\r\n            \"heightUomCode\": \"IN\",\r\n            \"length\": 99.998999999999995225152815692126750946044921875,\r\n            \"lengthUomCode\": \"IN\",\r\n            \"width\": 150,\r\n            \"widthUomCode\": \"IN\",\r\n            \"declaredValue\": 2285.88999999999987267074175179004669189453125,\r\n            \"declaredValueCurrencyCode\": \"USD\",\r\n            \"volume\": 868.0385999999999739884515292942523956298828125,\r\n            \"volumeUomCode\": \"CUFT\",\r\n            \"itemPrice\": 20.5,\r\n            \"itemPriceCurrencyCode\": \"USD\",\r\n            \"isTemperatureControlled\": false,\r\n            \"isHazmat\": false,\r\n            \"hazardousItemInfo\": {\r\n                \"unnumber\": 0,\r\n                \"packingGroup\": 0,\r\n                \"receptacleSize\": 0,\r\n                \"hazardousClass\": null,\r\n                \"numberofReceptacles\": 0,\r\n                \"unitofMeasure\": null,\r\n                \"containerType\": null,\r\n                \"hazardousDescription\": null,\r\n                \"hazardousPhoneNumber\": null,\r\n                \"shippingName\": null\r\n            },\r\n            \"htscode\": null,\r\n            \"sku\": \"Sku00001\",\r\n            \"purchaseOrderNumber\": null,\r\n            \"itemReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"1001\",\r\n                    \"type\": \"CommodityCode\"\r\n                },\r\n                {\r\n                    \"value\": \"c60\",\r\n                    \"type\": \"FreightClass\"\r\n                },\r\n                {\r\n                    \"value\": \"60\",\r\n                    \"type\": \"POQuantity\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"partnerIdentifierCode\": \"10-1-MCGEEHIF\"\r\n}\",  ParameterType.RequestBody);\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/convertquoteresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact RXO representative."
          }
        }
      },
      "delete": {
        "description": "​Cancel Order allows you to submit a request for cancelation of a previously created order, by using the shipment or order ID.",
        "operationId": "Cancel Order",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by RXO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order's Id to cancel order.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNumber",
            "in": "query",
            "description": "Order Number to cancel order.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipmentId",
            "in": "query",
            "description": "Shipment's Id to cancel order.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partnerIdentifierCode",
            "in": "query",
            "description": "Unique Partner Code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request DELETE 'https:\/\/api-uat-rxoconnect.rxo.com\/orderAPI\/rest\/v1\/Order?orderId=1120450&partnerIdentifierCode=2-1-TESTCHN2' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-rxoconnect.rxo.com\/orderAPI\/rest\/v1\/Order?orderId=1120450&partnerIdentifierCode=2-1-TESTCHN2\")\r\n  .method(\"DELETE\", null)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'DELETE',\r\n  'url': 'https:\/\/api-uat-rxoconnect.rxo.com\/orderAPI\/rest\/v1\/Order?orderId=1120450&partnerIdentifierCode=2-1-TESTCHN2',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXXXXX'\r\n  }\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-rxoconnect.rxo.com\/orderAPI\/rest\/v1\/Order?orderId=1120450&partnerIdentifierCode=2-1-TESTCHN2\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.DELETE);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact RXO representative."
          }
        }
      }
    },
    "/eventAPI/rest/v1/OrderStatus": {
      "get": {
        "description": "​The Events API allows ​you to ​retrieve order or shipment status details by providing OrderId/ShipmentId along with partner code. ​Additionally, you can also retrieve specific event updates by passing an eventName, or filter events by passing a specific to and from date range.\n\n User must provide valid API Key and token as header parameter to get order/shipment event status details",
        "operationId": "Order/Shipment Status",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by RXO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order's Id to get Order status.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerNumber",
            "in": "query",
            "description": "Container Number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipmentId",
            "in": "query",
            "description": "Shipment's Id to get Shipment status.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bolNumber",
            "in": "query",
            "description": "bolNumber to get Shipment status.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proNumber",
            "in": "query",
            "description": "proNumber to get Shipment status.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "description": "From Date to filter status results.",
            "type": "string",
            "schema": {
              "type": "date-time",
              "format": "mm/dd/yyyy (04/01/2020) or yyyy-mm-dd  (2020-04-01) or dd-month-yyyy (01-Apr-2020)"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To Date to filter status results.",
            "required": false,
            "type": "string",
            "schema": {
              "type": "date-time",
              "format": "mm/dd/yyyy (04/01/2020) or yyyy-mm-dd  (2020-04-01) or dd-month-yyyy (01-Apr-2020)"
            }
          },
          {
            "name": "eventName",
            "description": "Event name to filter status results.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PICKUP_APPOINTMENT",
                "DELIVERY_APPOINTMENT",
                "ARRIVED_AT_PICKUP",
                "COMPLETED_LOADING",
                "DEPARTED_FROM_PICKUP",
                "IN_TRANSIT",
                "ARRIVED_AT_DELIVERY",
                "COMPLETED_UNLOADING",
                "DEPARTED_FROM_DELIVERY",
                "SHIPMENT_ACKNOWLEDGED",
                "ATTEMPTED_DELIVERY",
                "SHIPMENT_DELAYED",
                "DELIVERY_PROBLEM",
                "SHIPMENT_CANCELLED"
              ]
            }
          },
          {
            "name": "partnerIdentifierCode",
            "in": "query",
            "description": "Unique Partner Code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET 'https:\/\/api-uat-rxoconnect.rxo.com\/eventAPI\/rest\/v1\/OrderStatus?shipmentId=1672007&partnerIdentifierCode=2-1-TESTCHN2' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-rxoconnect.rxo.com\/eventAPI\/rest\/v1\/OrderStatus?shipmentId=1672007&partnerIdentifierCode=2-1-TESTCHN2\")\r\n  .method(\"GET\", null)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'GET',\r\n  'url': 'https:\/\/api-uat-rxoconnect.rxo.com\/eventAPI\/rest\/v1\/OrderStatus?shipmentId=1672007&partnerIdentifierCode=2-1-TESTCHN2',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXXXXX'\r\n  }\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-rxoconnect.rxo.com\/eventAPI\/rest\/v1\/OrderStatus?shipmentId=1672007&partnerIdentifierCode=2-1-TESTCHN2\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact RXO representative."
          }
        }
      }
    },
    "/shipmentAPI/rest/v1/shipmentSearch": {
      "post": {
        "description": "This endpoint allows customer partner to search for shipments. \n\n You will need to provide a valid API key and token in the header parameter and shipment request details in the request payload.",
        "operationId": "Shipment Search",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by RXO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shipmentSearchRequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentSearch/' \\\n--header 'x-api-key: XXXXXXXXXXXXXXXXX' \\\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXX' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{  \n  \"shipmentStatus\": \"Delivered\",\n  \"estimateTimeArrival\": {\n    \"fromDate\": \"2021-03-07T00:00:00+00:00\",\n    \"toDate\": \"2021-03-09T00:00:00+00:00\"\n  },\n  \"partnerIdentifierCode\": \"10-1-MOHAWKNYC\",\n  \"pageNumber\": 1,\n  \"pageSize\": 10\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{  \\r\\n  \\\"shipmentStatus\\\": \\\"Delivered\\\",\\r\\n  \\\"estimateTimeArrival\\\": {\\r\\n    \\\"fromDate\\\": \\\"2021-03-07T00:00:00+00:00\\\",\\r\\n    \\\"toDate\\\": \\\"2021-03-09T00:00:00+00:00\\\"\\r\\n  },\\r\\n  \\\"partnerIdentifierCode\\\": \\\"10-1-MOHAWKNYC\\\",\\r\\n  \\\"pageNumber\\\": 1,\\r\\n  \\\"pageSize\\\": 10\\r\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentSearch/\")\n  .method(\"POST\", body)\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXX\")\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXX\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .build();\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentSearch/',\n  'headers': {\n    'x-api-key': 'XXXXXXXXXXXXXXXXX',\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXX',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"shipmentStatus\": \"Delivered\",\n    \"estimateTimeArrival\": {\n      \"fromDate\": \"2021-03-07T00:00:00+00:00\",\n      \"toDate\": \"2021-03-09T00:00:00+00:00\"\n    },\n    \"partnerIdentifierCode\": \"10-1-MOHAWKNYC\",\n    \"pageNumber\": 1,\n    \"pageSize\": 10\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentSearch/\");\nclient.Timeout = -1;\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXX\");\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXX\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddParameter(\"application/json\", \"{  \\r\\n  \\\"shipmentStatus\\\": \\\"Delivered\\\",\\r\\n  \\\"estimateTimeArrival\\\": {\\r\\n    \\\"fromDate\\\": \\\"2021-03-07T00:00:00+00:00\\\",\\r\\n    \\\"toDate\\\": \\\"2021-03-09T00:00:00+00:00\\\"\\r\\n  },\\r\\n  \\\"partnerIdentifierCode\\\": \\\"10-1-MOHAWKNYC\\\",\\r\\n  \\\"pageNumber\\\": 1,\\r\\n  \\\"pageSize\\\": 10\\r\\n}\",  ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shipmentSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact RXO representative."
          }
        }
      }
    },
    "/shipmentAPI/rest/v1/shipmentDetails": {
      "get": {
        "description": "This endpoint allows allows partner to retrieve complete details of shipments except events using partnerIdentifierCode and either of shipmentnumber/masterbillnumber/globaltracking/housebillnumber. \n\n User must provide valid API Key and token as header parameter.",
        "operationId": "Shipment Details",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by RXO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "name": "partnerIdentifierCode",
            "in": "query",
            "description": "Partner identifier code used for uniquely identify the partner.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentNumber",
            "in": "query",
            "description": "This field represents the unique shipment number generated from TMS",
            "required": false,
            "type": "string"
          },
          {
            "name": "masterBillNumber",
            "in": "query",
            "description": "Master Bill Number",
            "required": false,
            "type": "string"
          },
          {
            "name": "globalTrackingNumber",
            "in": "query",
            "description": "RXO global Tracking number",
            "required": false,
            "type": "string"
          },
          {
            "name": "houseBillNumber",
            "in": "query",
            "description": "House Bill Number",
            "required": false,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET 'https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentDetails?partnerIdentifierCode=10-1-TESTCHN2&shipmentNumber=&masterBillNumber&globalTrackingNumber=RXOTESTNOTXXXX&houseBillNumber' \\\n--header 'x-api-key: XXXXXXXXXXXXXX' \\\n--header 'xpoauthorization: XXXXXXXXXXXXXX' \\"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nRequest request = new Request.Builder()\n  .url(\"https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentDetails?partnerIdentifierCode=10-1-TESTCHN2&shipmentNumber=&masterBillNumber&globalTrackingNumber=RXOTESTNOTXXXX&houseBillNumber\")\n  .method(\"GET\", null)\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXX\")\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXX\")\n  .build();\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentDetails?partnerIdentifierCode=10-1-TESTCHN2&shipmentNumber=&masterBillNumber&globalTrackingNumber=RXOTESTNOTXXXX&houseBillNumber',\n  'headers': {\n    'x-api-key': 'XXXXXXXXXXXXXX',\n    'xpoauthorization': 'XXXXXXXXXXXXXX',\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentDetails?partnerIdentifierCode=10-1-TESTCHN2&shipmentNumber=&masterBillNumber&globalTrackingNumber=RXOTESTNOTXXXX&houseBillNumber\");\nclient.Timeout = -1;\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXX\");\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXX\");\nIRestResponse response = client.Execute(request);\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shipmentDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact RXO representative."
          }
        }
      }
    },
    "/shipmentAPI/rest/v1/shipmentBooking": {
      "post": {
        "description": "This endpoint allows customer partner to send the booking information. \n\n You will need to provide a valid API key and token in the header parameter and shipment request details in the request payload.",
        "operationId": "Shipment Booking",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by RXO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shipmentBookingRequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentBooking/' \\\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXX' \\\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXX' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n   \"masterBillNumber\":\"898TestMaster\",\n   \"partnerIdentifierCode\":\"10-1-TESTCHN2\",\n   \"shipment\":[\n      {\n         \"houseBillNumber\":\"HB23042021906\",\n         \"transportationMode\":\"Sea\",\n         \"goodsDescription\":\"Test Description\",\n         \"totalQuantity\":14,\n         \"quantityUomCode\":\"PLT\",\n         \"totalWeight\":13,\n         \"chargeableWeight\":10,\n         \"weightUomCode\":\"KG\",\n         \"originCode\":\"CNSHG\",\n         \"originETD\":\"2021-05-19T19:22:00.942Z\",\n         \"destinationCode\":\"USLGB\",\n         \"destinationETA\":\"2021-05-20T19:22:00.942Z\",\n         \"incoTermsCode\":\"FOB\",\n         \"additionalTerms\":\"Additionalterms\",\n         \"locations\":[\n            {\n               \"locationType\":\"Shipper\",\n               \"locationCode\":\"RXOC-CHB\",\n               \"locationName\":\"RXO Customs Clearance Solutions, LLC\",\n               \"addressLine1\":\"290 GERZEVSKE LN\",\n               \"cityName\":\"CAROL STREAM\",\n               \"stateCode\":\"IL\",\n               \"zipCode\":\"60188\",\n               \"countryCode\":\"US\",\n               \"countryName\":\"United States\"\n            },\n            {\n               \"locationType\":\"Delivery\",\n               \"locationCode\":\"RXO-SZX\",\n               \"locationName\":\"RXO GLOBAL FORWARDING SHANGHAI LIMITED SHENZHEN\",\n               \"addressLine1\":\"Room E-F, 24 Floor, Tower B, Hong Long\",\n               \"addressLine2\":\"Century Plaza, 4002 East Shennan Road, Luohu\",\n               \"cityName\":\"Shenzhen\",\n               \"zipCode\":\"518002\",\n               \"countryCode\":\"CN\",\n               \"countryName\":\"China\"\n            },\n            {\n               \"locationType\":\"Consignee\",\n               \"locationCode\":\"WUHMATWUH1\",\n               \"locationName\":\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\",\n               \"addressLine1\":\"SILVERLAKE ROAD AND HENGSHAN ROAD\",\n               \"addressLine2\":\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\",\n               \"cityName\":\"WUHU\",\n               \"countryCode\":\"CN\",\n               \"countryName\":\"China\"\n            },\n            {\n               \"locationType\":\"Intermediate\",\n               \"locationCode\":\"WUHMATWUH1\",\n               \"locationName\":\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\",\n               \"addressLine1\":\"SILVERLAKE ROAD AND HENGSHAN ROAD\",\n               \"addressLine2\":\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\",\n               \"cityName\":\"WUHU\",\n               \"countryCode\":\"US\",\n               \"countryName\":\"China\"\n            },\n            {\n               \"locationType\":\"Intermediate\",\n               \"locationCode\":\"MOHAWKNYC\",\n               \"locationName\":\"Mohawk Group Inc\",\n               \"addressLine1\":\"37 E 18TH ST\",\n               \"cityName\":\"NEW YORK\",\n               \"stateCode\":\"NY\",\n               \"zipCode\":\"10003\",\n               \"countryCode\":\"US\",\n               \"countryName\":\"United States\"\n            },\n            {\n               \"locationType\":\"Intermediate\",\n               \"locationCode\":\"GEODISPAF\",\n               \"locationName\":\"GEODIS\",\n               \"addressLine1\":\"1101 Whitaker Rd\",\n               \"cityName\":\"Plainfield\",\n               \"stateCode\":\"IN\",\n               \"zipCode\":\"46168\",\n               \"countryCode\":\"US\",\n               \"countryName\":\"United States\"\n            },\n            {\n               \"locationType\":\"Delivery\",\n               \"locationCode\":\"MOHAWKNYC\",\n               \"locationName\":\"Mohawk Group Inc\",\n               \"addressLine1\":\"37 E 18TH ST\",\n               \"cityName\":\"NEW YORK\",\n               \"stateCode\":\"NY\",\n               \"zipCode\":\"10003\",\n               \"countryCode\":\"US\",\n               \"countryName\":\"United States\"\n            }\n         ]\n      }\n   ],\n   \"notes\":[\n      {\n         \"type\":\"Special Instructions\",\n         \"value\":\"Special Instructions\"\n      }\n   ],\n   \"packingLineDetails\":[\n      {\n         \"productNumber\":\"1\",\n         \"packageQuantity\":750,\n         \"packageTypeCode\":\"CTN\",\n         \"packageDescription\":\"DEHUMIDIFIER\",\n         \"height\":10,\n         \"length\":10,\n         \"width\":10,\n         \"hlwUomCode\":\"IN\",\n         \"weight\":15000,\n         \"weightUomCode\":\"KG\",\n         \"volume\":70.670,\n         \"volumeUomCode\":\"M3\",\n         \"nmfc\":\"tetNMFC\",\n         \"unNumber\":\"testUNNumber\",\n         \"containerNumber\":\"TEST3165730\",\n         \"packingLineReferenceNumbers\":[\n            {\n               \"code\":\"Item Number\",\n               \"value\":\"TESTNUM000001\"\n            },\n            {\n               \"code\":\"Inner Qty\",\n               \"value\":\"750.00\"\n            },\n            {\n               \"code\":\"Inner Qty UOM\",\n               \"value\":\"PCE\"\n            },\n            {\n               \"code\":\"PO Number\",\n               \"value\":\"TEST000001\"\n            }\n         ]\n      }\n   ],\n   \"containers\":[\n      {\n         \"containerNumber\":\"TEST3165730\",\n         \"sealNumber\":\"2643754\",\n         \"goodsWeight\":15978.64,\n         \"grossWeight\":15978.640,\n         \"tareWeight\":0,\n         \"weightUomCode\":\"KG\",\n         \"export\":{\n            \"emptyRequiredBy\":\"2021-05-19T09:17:33.504Z\",\n            \"emptyReleasedFromCY\":\"2021-05-19T09:17:33.504Z\",\n            \"estimatedPickup\":\"2021-05-19T09:17:33.504Z\",\n            \"actualPickUp\":\"2021-05-19T09:17:33.504Z\",\n            \"fclWharfGateIn\":\"2021-05-19T09:17:33.504Z\",\n            \"fclVesselLoaded\":\"2021-05-19T09:17:33.504Z\"\n         },\n         \"import\":{\n            \"estimatedFullDelivery\":\"2021-05-19T09:17:33.504Z\"\n         },\n         \"containerType\":{\n            \"code\":\"40HC\",\n            \"description\":\"Forty foot high cube\",\n            \"isoCode\":\"45G0\"\n         },\n         \"containerReferenceNumbers\":[\n            {\n               \"type\":\"ET\",\n               \"value\":\"Reference3\"\n            }\n         ]\n      }\n   ],\n   \"transportLegs\":[\n      {\n         \"legOrder\":1,\n         \"transportationMode\":\"Road\",\n         \"legType\":\"Other\",\n         \"portOfLoadingCode\":\"CNWUH\",\n         \"portOfLoadingName\":\"Wuhu\",\n         \"portOfDischarge\":\"CNSGH\",\n         \"portOfDischargeName\":\"Shanghai\",\n         \"estimatedTimeOfArrival\":\"2021-04-13T09:00\",\n         \"estimatedTimeOfDeparture\":\"2021-04-12T09:00\",\n         \"actualTimeOfArrival\":\"2021-04-13T09:00\",\n         \"actualTimeOfDeparture\":\"2021-04-12T09:00\",\n         \"carrier\":{\n            \"carrierCode\":\"LEOVINEPV2\",\n            \"carrierName\":\"LEON VINCENT OVERSEAS\"\n         },\n         \"tripLegReferenceNumbers\":[\n            {\n               \"type\":\"Test\",\n               \"value\":\"Test referencez\"\n            }\n         ]\n      },\n      {\n         \"legOrder\":2,\n         \"transportationMode\":\"Sea\",\n         \"legType\":\"Main\",\n         \"vesselName\":\"MSC JOSSELINE\",\n         \"portOfLoading\":\"CNSGH\",\n         \"portOfLoadingName\":\"Shanghai\",\n         \"portOfDischarge\":\"USLGB\",\n         \"portOfDischargeName\":\"Long Beach\",\n         \"estimatedTimeOfArrival\":\"2021-04-19T09:00\",\n         \"estimatedTimeOfDeparture\":\"2021-04-13T09:00\",\n         \"actualTimeOfArrival\":\"2021-04-19T09:00\",\n         \"actualTimeOfDeparture\":\"2021-04-13T09:00\"\n      },\n      {\n         \"legOrder\":3,\n         \"transportationMode\":\"Road\",\n         \"legType\":\"Other\",\n         \"portOfLoading\":\"USLGB\",\n         \"portOfLoadingName\":\"Long Beach\",\n         \"portOfDischarge\":\"USPAF\",\n         \"portOfDischargeName\":\"Plainfield\",\n         \"estimatedTimeOfArrival\":\"2021-04-22T09:00\",\n         \"estimatedTimeOfDeparture\":\"2021-04-20T09:00\",\n         \"actualTimeOfArrival\":\"2021-04-22T09:00\",\n         \"actualTimeOfDeparture\":\"2021-04-20T09:00\"\n      }\n   ],\n   \"shipmentReferenceNumbers\":[\n      {\n         \"type\":\"TT\",\n         \"value\":\"testing\"\n      }\n   ]\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\r\\n   \\\"masterBillNumber\\\":\\\"898TestMaster\\\",\\r\\n   \\\"partnerIdentifierCode\\\":\\\"10-1-MOHAWKNYC\\\",\\r\\n   \\\"shipment\\\":[\\r\\n      {\\r\\n         \\\"houseBillNumber\\\":\\\"HB23042021906\\\",\\r\\n         \\\"transportationMode\\\":\\\"Sea\\\",\\r\\n         \\\"goodsDescription\\\":\\\"Test Description\\\",\\r\\n         \\\"totalQuantity\\\":14,\\r\\n         \\\"quantityUomCode\\\":\\\"PLT\\\",\\r\\n         \\\"totalWeight\\\":13,\\r\\n         \\\"chargeableWeight\\\":10,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"originCode\\\":\\\"CNSHG\\\",\\r\\n         \\\"originETD\\\":\\\"2021-05-19T19:22:00.942Z\\\",\\r\\n         \\\"destinationCode\\\":\\\"USLGB\\\",\\r\\n         \\\"destinationETA\\\":\\\"2021-05-20T19:22:00.942Z\\\",\\r\\n         \\\"incoTermsCode\\\":\\\"FOB\\\",\\r\\n         \\\"additionalTerms\\\":\\\"Additionalterms\\\",\\r\\n         \\\"locations\\\":[\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Shipper\\\",\\r\\n               \\\"locationCode\\\":\\\"RXOC-CHB\\\",\\r\\n               \\\"locationName\\\":\\\"RXO Customs Clearance Solutions, LLC\\\",\\r\\n               \\\"addressLine1\\\":\\\"290 GERZEVSKE LN\\\",\\r\\n               \\\"cityName\\\":\\\"CAROL STREAM\\\",\\r\\n               \\\"stateCode\\\":\\\"IL\\\",\\r\\n               \\\"zipCode\\\":\\\"60188\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Delivery\\\",\\r\\n               \\\"locationCode\\\":\\\"RXO-SZX\\\",\\r\\n               \\\"locationName\\\":\\\"RXO GLOBAL FORWARDING SHANGHAI LIMITED SHENZHEN\\\",\\r\\n               \\\"addressLine1\\\":\\\"Room E-F, 24 Floor, Tower B, Hong Long\\\",\\r\\n               \\\"addressLine2\\\":\\\"Century Plaza, 4002 East Shennan Road, Luohu\\\",\\r\\n               \\\"cityName\\\":\\\"Shenzhen\\\",\\r\\n               \\\"zipCode\\\":\\\"518002\\\",\\r\\n               \\\"countryCode\\\":\\\"CN\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Consignee\\\",\\r\\n               \\\"locationCode\\\":\\\"WUHMATWUH1\\\",\\r\\n               \\\"locationName\\\":\\\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\\\",\\r\\n               \\\"addressLine1\\\":\\\"SILVERLAKE ROAD AND HENGSHAN ROAD\\\",\\r\\n               \\\"addressLine2\\\":\\\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\\\",\\r\\n               \\\"cityName\\\":\\\"WUHU\\\",\\r\\n               \\\"countryCode\\\":\\\"CN\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"WUHMATWUH1\\\",\\r\\n               \\\"locationName\\\":\\\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\\\",\\r\\n               \\\"addressLine1\\\":\\\"SILVERLAKE ROAD AND HENGSHAN ROAD\\\",\\r\\n               \\\"addressLine2\\\":\\\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\\\",\\r\\n               \\\"cityName\\\":\\\"WUHU\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"MOHAWKNYC\\\",\\r\\n               \\\"locationName\\\":\\\"Mohawk Group Inc\\\",\\r\\n               \\\"addressLine1\\\":\\\"37 E 18TH ST\\\",\\r\\n               \\\"cityName\\\":\\\"NEW YORK\\\",\\r\\n               \\\"stateCode\\\":\\\"NY\\\",\\r\\n               \\\"zipCode\\\":\\\"10003\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"GEODISPAF\\\",\\r\\n               \\\"locationName\\\":\\\"GEODIS\\\",\\r\\n               \\\"addressLine1\\\":\\\"1101 Whitaker Rd\\\",\\r\\n               \\\"cityName\\\":\\\"Plainfield\\\",\\r\\n               \\\"stateCode\\\":\\\"IN\\\",\\r\\n               \\\"zipCode\\\":\\\"46168\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Delivery\\\",\\r\\n               \\\"locationCode\\\":\\\"MOHAWKNYC\\\",\\r\\n               \\\"locationName\\\":\\\"Mohawk Group Inc\\\",\\r\\n               \\\"addressLine1\\\":\\\"37 E 18TH ST\\\",\\r\\n               \\\"cityName\\\":\\\"NEW YORK\\\",\\r\\n               \\\"stateCode\\\":\\\"NY\\\",\\r\\n               \\\"zipCode\\\":\\\"10003\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"notes\\\":[\\r\\n      {\\r\\n         \\\"type\\\":\\\"Special Instructions\\\",\\r\\n         \\\"value\\\":\\\"Special Instructions\\\"\\r\\n      }\\r\\n   ],\\r\\n   \\\"packingLineDetails\\\":[\\r\\n      {\\r\\n         \\\"productNumber\\\":\\\"1\\\",\\r\\n         \\\"packageQuantity\\\":750,\\r\\n         \\\"packageTypeCode\\\":\\\"CTN\\\",\\r\\n         \\\"packageDescription\\\":\\\"DEHUMIDIFIER\\\",\\r\\n         \\\"height\\\":10,\\r\\n         \\\"length\\\":10,\\r\\n         \\\"width\\\":10,\\r\\n         \\\"hlwUomCode\\\":\\\"IN\\\",\\r\\n         \\\"weight\\\":15000,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"volume\\\":70.670,\\r\\n         \\\"volumeUomCode\\\":\\\"M3\\\",\\r\\n         \\\"nmfc\\\":\\\"tetNMFC\\\",\\r\\n         \\\"unNumber\\\":\\\"testUNNumber\\\",\\r\\n         \\\"containerNumber\\\":\\\"TEST3165730\\\",\\r\\n         \\\"packingLineReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"code\\\":\\\"Item Number\\\",\\r\\n               \\\"value\\\":\\\"TESTNUM000001\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"Inner Qty\\\",\\r\\n               \\\"value\\\":\\\"750.00\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"Inner Qty UOM\\\",\\r\\n               \\\"value\\\":\\\"PCE\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"PO Number\\\",\\r\\n               \\\"value\\\":\\\"TEST000001\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"containers\\\":[\\r\\n      {\\r\\n         \\\"containerNumber\\\":\\\"TEST3165730\\\",\\r\\n         \\\"sealNumber\\\":\\\"2643754\\\",\\r\\n         \\\"goodsWeight\\\":15978.64,\\r\\n         \\\"grossWeight\\\":15978.640,\\r\\n         \\\"tareWeight\\\":0,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"export\\\":{\\r\\n            \\\"emptyRequiredBy\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"emptyReleasedFromCY\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"estimatedPickup\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"actualPickUp\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"fclWharfGateIn\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"fclVesselLoaded\\\":\\\"2021-05-19T09:17:33.504Z\\\"\\r\\n         },\\r\\n         \\\"import\\\":{\\r\\n            \\\"estimatedFullDelivery\\\":\\\"2021-05-19T09:17:33.504Z\\\"\\r\\n         },\\r\\n         \\\"containerType\\\":{\\r\\n            \\\"code\\\":\\\"40HC\\\",\\r\\n            \\\"description\\\":\\\"Forty foot high cube\\\",\\r\\n            \\\"isoCode\\\":\\\"45G0\\\"\\r\\n         },\\r\\n         \\\"containerReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"type\\\":\\\"ET\\\",\\r\\n               \\\"value\\\":\\\"Reference3\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"transportLegs\\\":[\\r\\n      {\\r\\n         \\\"legOrder\\\":1,\\r\\n         \\\"transportationMode\\\":\\\"Road\\\",\\r\\n         \\\"legType\\\":\\\"Other\\\",\\r\\n         \\\"portOfLoadingCode\\\":\\\"CNWUH\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Wuhu\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"CNSGH\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Shanghai\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-12T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-12T09:00\\\",\\r\\n         \\\"carrier\\\":{\\r\\n            \\\"carrierCode\\\":\\\"LEOVINEPV2\\\",\\r\\n            \\\"carrierName\\\":\\\"LEON VINCENT OVERSEAS\\\"\\r\\n         },\\r\\n         \\\"tripLegReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"type\\\":\\\"Test\\\",\\r\\n               \\\"value\\\":\\\"Test referencez\\\"\\r\\n            }\\r\\n         ]\\r\\n      },\\r\\n      {\\r\\n         \\\"legOrder\\\":2,\\r\\n         \\\"transportationMode\\\":\\\"Sea\\\",\\r\\n         \\\"legType\\\":\\\"Main\\\",\\r\\n         \\\"vesselName\\\":\\\"MSC JOSSELINE\\\",\\r\\n         \\\"portOfLoading\\\":\\\"CNSGH\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Shanghai\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"USLGB\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Long Beach\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-19T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-19T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-13T09:00\\\"\\r\\n      },\\r\\n      {\\r\\n         \\\"legOrder\\\":3,\\r\\n         \\\"transportationMode\\\":\\\"Road\\\",\\r\\n         \\\"legType\\\":\\\"Other\\\",\\r\\n         \\\"portOfLoading\\\":\\\"USLGB\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Long Beach\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"USPAF\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Plainfield\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-22T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-20T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-22T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-20T09:00\\\"\\r\\n      }\\r\\n   ],\\r\\n   \\\"shipmentReferenceNumbers\\\":[\\r\\n      {\\r\\n         \\\"type\\\":\\\"TT\\\",\\r\\n         \\\"value\\\":\\\"testing\\\"\\r\\n      }\\r\\n   ]\\r\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentBooking/\")\n  .method(\"POST\", body)\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXX\")\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXX\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .build();\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var https = require('follow-redirects').https;\nvar fs = require('fs');\nvar options = {\n  'method': 'POST',\n  'hostname': 'api-uat-rxoconnect.rxo.com',\n  'path': '/shipmentAPI/rest/v1/shipmentBooking/',\n  'headers': {\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXX',\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXX',\n    'Content-Type': 'application/json'\n  },\n  'maxRedirects': 20\n};\nvar req = https.request(options, function (res) {\n  var chunks = [];\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n  res.on(\"end\", function (chunk) {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n  res.on(\"error\", function (error) {\n    console.error(error);\n  });\n});\nvar postData = JSON.stringify({\n  \"masterBillNumber\": \"898TestMaster\",\n  \"partnerIdentifierCode\": \"10-1-MOHAWKNYC\",\n  \"shipment\": [\n    {\n      \"houseBillNumber\": \"HB23042021906\",\n      \"transportationMode\": \"Sea\",\n      \"goodsDescription\": \"Test Description\",\n      \"totalQuantity\": 14,\n      \"quantityUomCode\": \"PLT\",\n      \"totalWeight\": 13,\n      \"chargeableWeight\": 10,\n      \"weightUomCode\": \"KG\",\n      \"originCode\": \"CNSHG\",\n      \"originETD\": \"2021-05-19T19:22:00.942Z\",\n      \"destinationCode\": \"USLGB\",\n      \"destinationETA\": \"2021-05-20T19:22:00.942Z\",\n      \"incoTermsCode\": \"FOB\",\n      \"additionalTerms\": \"Additionalterms\",\n      \"locations\": [\n        {\n          \"locationType\": \"Shipper\",\n          \"locationCode\": \"RXOC-CHB\",\n          \"locationName\": \"RXO Customs Clearance Solutions, LLC\",\n          \"addressLine1\": \"290 GERZEVSKE LN\",\n          \"cityName\": \"CAROL STREAM\",\n          \"stateCode\": \"IL\",\n          \"zipCode\": \"60188\",\n          \"countryCode\": \"US\",\n          \"countryName\": \"United States\"\n        },\n        {\n          \"locationType\": \"Delivery\",\n          \"locationCode\": \"RXO-SZX\",\n          \"locationName\": \"RXO GLOBAL FORWARDING SHANGHAI LIMITED SHENZHEN\",\n          \"addressLine1\": \"Room E-F, 24 Floor, Tower B, Hong Long\",\n          \"addressLine2\": \"Century Plaza, 4002 East Shennan Road, Luohu\",\n          \"cityName\": \"Shenzhen\",\n          \"zipCode\": \"518002\",\n          \"countryCode\": \"CN\",\n          \"countryName\": \"China\"\n        },\n        {\n          \"locationType\": \"Consignee\",\n          \"locationCode\": \"WUHMATWUH1\",\n          \"locationName\": \"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\",\n          \"addressLine1\": \"SILVERLAKE ROAD AND HENGSHAN ROAD\",\n          \"addressLine2\": \"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\",\n          \"cityName\": \"WUHU\",\n          \"countryCode\": \"CN\",\n          \"countryName\": \"China\"\n        },\n        {\n          \"locationType\": \"Intermediate\",\n          \"locationCode\": \"WUHMATWUH1\",\n          \"locationName\": \"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\",\n          \"addressLine1\": \"SILVERLAKE ROAD AND HENGSHAN ROAD\",\n          \"addressLine2\": \"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\",\n          \"cityName\": \"WUHU\",\n          \"countryCode\": \"US\",\n          \"countryName\": \"China\"\n        },\n        {\n          \"locationType\": \"Intermediate\",\n          \"locationCode\": \"MOHAWKNYC\",\n          \"locationName\": \"Mohawk Group Inc\",\n          \"addressLine1\": \"37 E 18TH ST\",\n          \"cityName\": \"NEW YORK\",\n          \"stateCode\": \"NY\",\n          \"zipCode\": \"10003\",\n          \"countryCode\": \"US\",\n          \"countryName\": \"United States\"\n        },\n        {\n          \"locationType\": \"Intermediate\",\n          \"locationCode\": \"GEODISPAF\",\n          \"locationName\": \"GEODIS\",\n          \"addressLine1\": \"1101 Whitaker Rd\",\n          \"cityName\": \"Plainfield\",\n          \"stateCode\": \"IN\",\n          \"zipCode\": \"46168\",\n          \"countryCode\": \"US\",\n          \"countryName\": \"United States\"\n        },\n        {\n          \"locationType\": \"Delivery\",\n          \"locationCode\": \"MOHAWKNYC\",\n          \"locationName\": \"Mohawk Group Inc\",\n          \"addressLine1\": \"37 E 18TH ST\",\n          \"cityName\": \"NEW YORK\",\n          \"stateCode\": \"NY\",\n          \"zipCode\": \"10003\",\n          \"countryCode\": \"US\",\n          \"countryName\": \"United States\"\n        }\n      ]\n    }\n  ],\n  \"notes\": [\n    {\n      \"type\": \"Special Instructions\",\n      \"value\": \"Special Instructions\"\n    }\n  ],\n  \"packingLineDetails\": [\n    {\n      \"productNumber\": \"1\",\n      \"packageQuantity\": 750,\n      \"packageTypeCode\": \"CTN\",\n      \"packageDescription\": \"DEHUMIDIFIER\",\n      \"height\": 10,\n      \"length\": 10,\n      \"width\": 10,\n      \"hlwUomCode\": \"IN\",\n      \"weight\": 15000,\n      \"weightUomCode\": \"KG\",\n      \"volume\": 70.67,\n      \"volumeUomCode\": \"M3\",\n      \"nmfc\": \"tetNMFC\",\n      \"unNumber\": \"testUNNumber\",\n      \"containerNumber\": \"TEST3165730\",\n      \"packingLineReferenceNumbers\": [\n        {\n          \"code\": \"Item Number\",\n          \"value\": \"TESTNUM000001\"\n        },\n        {\n          \"code\": \"Inner Qty\",\n          \"value\": \"750.00\"\n        },\n        {\n          \"code\": \"Inner Qty UOM\",\n          \"value\": \"PCE\"\n        },\n        {\n          \"code\": \"PO Number\",\n          \"value\": \"TEST000001\"\n        }\n      ]\n    }\n  ],\n  \"containers\": [\n    {\n      \"containerNumber\": \"TEST3165730\",\n      \"sealNumber\": \"2643754\",\n      \"goodsWeight\": 15978.64,\n      \"grossWeight\": 15978.64,\n      \"tareWeight\": 0,\n      \"weightUomCode\": \"KG\",\n      \"export\": {\n        \"emptyRequiredBy\": \"2021-05-19T09:17:33.504Z\",\n        \"emptyReleasedFromCY\": \"2021-05-19T09:17:33.504Z\",\n        \"estimatedPickup\": \"2021-05-19T09:17:33.504Z\",\n        \"actualPickUp\": \"2021-05-19T09:17:33.504Z\",\n        \"fclWharfGateIn\": \"2021-05-19T09:17:33.504Z\",\n        \"fclVesselLoaded\": \"2021-05-19T09:17:33.504Z\"\n      },\n      \"import\": {\n        \"estimatedFullDelivery\": \"2021-05-19T09:17:33.504Z\"\n      },\n      \"containerType\": {\n        \"code\": \"40HC\",\n        \"description\": \"Forty foot high cube\",\n        \"isoCode\": \"45G0\"\n      },\n      \"containerReferenceNumbers\": [\n        {\n          \"type\": \"ET\",\n          \"value\": \"Reference3\"\n        }\n      ]\n    }\n  ],\n  \"transportLegs\": [\n    {\n      \"legOrder\": 1,\n      \"transportationMode\": \"Road\",\n      \"legType\": \"Other\",\n      \"portOfLoadingCode\": \"CNWUH\",\n      \"portOfLoadingName\": \"Wuhu\",\n      \"portOfDischarge\": \"CNSGH\",\n      \"portOfDischargeName\": \"Shanghai\",\n      \"estimatedTimeOfArrival\": \"2021-04-13T09:00\",\n      \"estimatedTimeOfDeparture\": \"2021-04-12T09:00\",\n      \"actualTimeOfArrival\": \"2021-04-13T09:00\",\n      \"actualTimeOfDeparture\": \"2021-04-12T09:00\",\n      \"carrier\": {\n        \"carrierCode\": \"LEOVINEPV2\",\n        \"carrierName\": \"LEON VINCENT OVERSEAS\"\n      },\n      \"tripLegReferenceNumbers\": [\n        {\n          \"type\": \"Test\",\n          \"value\": \"Test referencez\"\n        }\n      ]\n    },\n    {\n      \"legOrder\": 2,\n      \"transportationMode\": \"Sea\",\n      \"legType\": \"Main\",\n      \"vesselName\": \"MSC JOSSELINE\",\n      \"portOfLoading\": \"CNSGH\",\n      \"portOfLoadingName\": \"Shanghai\",\n      \"portOfDischarge\": \"USLGB\",\n      \"portOfDischargeName\": \"Long Beach\",\n      \"estimatedTimeOfArrival\": \"2021-04-19T09:00\",\n      \"estimatedTimeOfDeparture\": \"2021-04-13T09:00\",\n      \"actualTimeOfArrival\": \"2021-04-19T09:00\",\n      \"actualTimeOfDeparture\": \"2021-04-13T09:00\"\n    },\n    {\n      \"legOrder\": 3,\n      \"transportationMode\": \"Road\",\n      \"legType\": \"Other\",\n      \"portOfLoading\": \"USLGB\",\n      \"portOfLoadingName\": \"Long Beach\",\n      \"portOfDischarge\": \"USPAF\",\n      \"portOfDischargeName\": \"Plainfield\",\n      \"estimatedTimeOfArrival\": \"2021-04-22T09:00\",\n      \"estimatedTimeOfDeparture\": \"2021-04-20T09:00\",\n      \"actualTimeOfArrival\": \"2021-04-22T09:00\",\n      \"actualTimeOfDeparture\": \"2021-04-20T09:00\"\n    }\n  ],\n  \"shipmentReferenceNumbers\": [\n    {\n      \"type\": \"TT\",\n      \"value\": \"testing\"\n    }\n  ]\n});\nreq.write(postData);\nreq.end();"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https://api-uat-rxoconnect.rxo.com/shipmentAPI/rest/v1/shipmentBooking/\");\nclient.Timeout = -1;\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXX\");\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXX\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddParameter(\"application/json\", \"{\\r\\n   \\\"masterBillNumber\\\":\\\"898TestMaster\\\",\\r\\n   \\\"partnerIdentifierCode\\\":\\\"10-1-MOHAWKNYC\\\",\\r\\n   \\\"shipment\\\":[\\r\\n      {\\r\\n         \\\"houseBillNumber\\\":\\\"HB23042021906\\\",\\r\\n         \\\"transportationMode\\\":\\\"Sea\\\",\\r\\n         \\\"goodsDescription\\\":\\\"Test Description\\\",\\r\\n         \\\"totalQuantity\\\":14,\\r\\n         \\\"quantityUomCode\\\":\\\"PLT\\\",\\r\\n         \\\"totalWeight\\\":13,\\r\\n         \\\"chargeableWeight\\\":10,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"originCode\\\":\\\"CNSHG\\\",\\r\\n         \\\"originETD\\\":\\\"2021-05-19T19:22:00.942Z\\\",\\r\\n         \\\"destinationCode\\\":\\\"USLGB\\\",\\r\\n         \\\"destinationETA\\\":\\\"2021-05-20T19:22:00.942Z\\\",\\r\\n         \\\"incoTermsCode\\\":\\\"FOB\\\",\\r\\n         \\\"additionalTerms\\\":\\\"Additionalterms\\\",\\r\\n         \\\"locations\\\":[\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Shipper\\\",\\r\\n               \\\"locationCode\\\":\\\"RXOC-CHB\\\",\\r\\n               \\\"locationName\\\":\\\"RXO Customs Clearance Solutions, LLC\\\",\\r\\n               \\\"addressLine1\\\":\\\"290 GERZEVSKE LN\\\",\\r\\n               \\\"cityName\\\":\\\"CAROL STREAM\\\",\\r\\n               \\\"stateCode\\\":\\\"IL\\\",\\r\\n               \\\"zipCode\\\":\\\"60188\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Delivery\\\",\\r\\n               \\\"locationCode\\\":\\\"RXO-SZX\\\",\\r\\n               \\\"locationName\\\":\\\"RXO GLOBAL FORWARDING SHANGHAI LIMITED SHENZHEN\\\",\\r\\n               \\\"addressLine1\\\":\\\"Room E-F, 24 Floor, Tower B, Hong Long\\\",\\r\\n               \\\"addressLine2\\\":\\\"Century Plaza, 4002 East Shennan Road, Luohu\\\",\\r\\n               \\\"cityName\\\":\\\"Shenzhen\\\",\\r\\n               \\\"zipCode\\\":\\\"518002\\\",\\r\\n               \\\"countryCode\\\":\\\"CN\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Consignee\\\",\\r\\n               \\\"locationCode\\\":\\\"WUHMATWUH1\\\",\\r\\n               \\\"locationName\\\":\\\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\\\",\\r\\n               \\\"addressLine1\\\":\\\"SILVERLAKE ROAD AND HENGSHAN ROAD\\\",\\r\\n               \\\"addressLine2\\\":\\\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\\\",\\r\\n               \\\"cityName\\\":\\\"WUHU\\\",\\r\\n               \\\"countryCode\\\":\\\"CN\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"WUHMATWUH1\\\",\\r\\n               \\\"locationName\\\":\\\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\\\",\\r\\n               \\\"addressLine1\\\":\\\"SILVERLAKE ROAD AND HENGSHAN ROAD\\\",\\r\\n               \\\"addressLine2\\\":\\\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\\\",\\r\\n               \\\"cityName\\\":\\\"WUHU\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"MOHAWKNYC\\\",\\r\\n               \\\"locationName\\\":\\\"Mohawk Group Inc\\\",\\r\\n               \\\"addressLine1\\\":\\\"37 E 18TH ST\\\",\\r\\n               \\\"cityName\\\":\\\"NEW YORK\\\",\\r\\n               \\\"stateCode\\\":\\\"NY\\\",\\r\\n               \\\"zipCode\\\":\\\"10003\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"GEODISPAF\\\",\\r\\n               \\\"locationName\\\":\\\"GEODIS\\\",\\r\\n               \\\"addressLine1\\\":\\\"1101 Whitaker Rd\\\",\\r\\n               \\\"cityName\\\":\\\"Plainfield\\\",\\r\\n               \\\"stateCode\\\":\\\"IN\\\",\\r\\n               \\\"zipCode\\\":\\\"46168\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Delivery\\\",\\r\\n               \\\"locationCode\\\":\\\"MOHAWKNYC\\\",\\r\\n               \\\"locationName\\\":\\\"Mohawk Group Inc\\\",\\r\\n               \\\"addressLine1\\\":\\\"37 E 18TH ST\\\",\\r\\n               \\\"cityName\\\":\\\"NEW YORK\\\",\\r\\n               \\\"stateCode\\\":\\\"NY\\\",\\r\\n               \\\"zipCode\\\":\\\"10003\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"notes\\\":[\\r\\n      {\\r\\n         \\\"type\\\":\\\"Special Instructions\\\",\\r\\n         \\\"value\\\":\\\"Special Instructions\\\"\\r\\n      }\\r\\n   ],\\r\\n   \\\"packingLineDetails\\\":[\\r\\n      {\\r\\n         \\\"productNumber\\\":\\\"1\\\",\\r\\n         \\\"packageQuantity\\\":750,\\r\\n         \\\"packageTypeCode\\\":\\\"CTN\\\",\\r\\n         \\\"packageDescription\\\":\\\"DEHUMIDIFIER\\\",\\r\\n         \\\"height\\\":10,\\r\\n         \\\"length\\\":10,\\r\\n         \\\"width\\\":10,\\r\\n         \\\"hlwUomCode\\\":\\\"IN\\\",\\r\\n         \\\"weight\\\":15000,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"volume\\\":70.670,\\r\\n         \\\"volumeUomCode\\\":\\\"M3\\\",\\r\\n         \\\"nmfc\\\":\\\"tetNMFC\\\",\\r\\n         \\\"unNumber\\\":\\\"testUNNumber\\\",\\r\\n         \\\"containerNumber\\\":\\\"TEST3165730\\\",\\r\\n         \\\"packingLineReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"code\\\":\\\"Item Number\\\",\\r\\n               \\\"value\\\":\\\"TESTNUM000001\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"Inner Qty\\\",\\r\\n               \\\"value\\\":\\\"750.00\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"Inner Qty UOM\\\",\\r\\n               \\\"value\\\":\\\"PCE\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"PO Number\\\",\\r\\n               \\\"value\\\":\\\"TEST000001\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"containers\\\":[\\r\\n      {\\r\\n         \\\"containerNumber\\\":\\\"TEST3165730\\\",\\r\\n         \\\"sealNumber\\\":\\\"2643754\\\",\\r\\n         \\\"goodsWeight\\\":15978.64,\\r\\n         \\\"grossWeight\\\":15978.640,\\r\\n         \\\"tareWeight\\\":0,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"export\\\":{\\r\\n            \\\"emptyRequiredBy\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"emptyReleasedFromCY\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"estimatedPickup\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"actualPickUp\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"fclWharfGateIn\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"fclVesselLoaded\\\":\\\"2021-05-19T09:17:33.504Z\\\"\\r\\n         },\\r\\n         \\\"import\\\":{\\r\\n            \\\"estimatedFullDelivery\\\":\\\"2021-05-19T09:17:33.504Z\\\"\\r\\n         },\\r\\n         \\\"containerType\\\":{\\r\\n            \\\"code\\\":\\\"40HC\\\",\\r\\n            \\\"description\\\":\\\"Forty foot high cube\\\",\\r\\n            \\\"isoCode\\\":\\\"45G0\\\"\\r\\n         },\\r\\n         \\\"containerReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"type\\\":\\\"ET\\\",\\r\\n               \\\"value\\\":\\\"Reference3\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"transportLegs\\\":[\\r\\n      {\\r\\n         \\\"legOrder\\\":1,\\r\\n         \\\"transportationMode\\\":\\\"Road\\\",\\r\\n         \\\"legType\\\":\\\"Other\\\",\\r\\n         \\\"portOfLoadingCode\\\":\\\"CNWUH\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Wuhu\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"CNSGH\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Shanghai\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-12T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-12T09:00\\\",\\r\\n         \\\"carrier\\\":{\\r\\n            \\\"carrierCode\\\":\\\"LEOVINEPV2\\\",\\r\\n            \\\"carrierName\\\":\\\"LEON VINCENT OVERSEAS\\\"\\r\\n         },\\r\\n         \\\"tripLegReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"type\\\":\\\"Test\\\",\\r\\n               \\\"value\\\":\\\"Test referencez\\\"\\r\\n            }\\r\\n         ]\\r\\n      },\\r\\n      {\\r\\n         \\\"legOrder\\\":2,\\r\\n         \\\"transportationMode\\\":\\\"Sea\\\",\\r\\n         \\\"legType\\\":\\\"Main\\\",\\r\\n         \\\"vesselName\\\":\\\"MSC JOSSELINE\\\",\\r\\n         \\\"portOfLoading\\\":\\\"CNSGH\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Shanghai\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"USLGB\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Long Beach\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-19T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-19T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-13T09:00\\\"\\r\\n      },\\r\\n      {\\r\\n         \\\"legOrder\\\":3,\\r\\n         \\\"transportationMode\\\":\\\"Road\\\",\\r\\n         \\\"legType\\\":\\\"Other\\\",\\r\\n         \\\"portOfLoading\\\":\\\"USLGB\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Long Beach\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"USPAF\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Plainfield\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-22T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-20T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-22T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-20T09:00\\\"\\r\\n      }\\r\\n   ],\\r\\n   \\\"shipmentReferenceNumbers\\\":[\\r\\n      {\\r\\n         \\\"type\\\":\\\"TT\\\",\\r\\n         \\\"value\\\":\\\"testing\\\"\\r\\n      }\\r\\n   ]\\r\\n}\",  ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shipmentBookingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact RXO representative."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "tokenrequest": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "description": "Client Id as provided by RXO."
          },
          "client_secret": {
            "type": "string",
            "description": "Client Secret as provided by RXO."
          },
          "scope": {
            "type": "string",
            "description": "Scope as provided by RXO to access requested API."
          },
          "grant_type": {
            "type": "string",
            "description": "Grant Type, typical value is client_credentials."
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "scope",
          "grant_type"
        ],
        "example": {
          "client_id": "xpo-tran-boomi-test-app",
          "client_secret": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
          "scope": "xpo-rates-api",
          "grant_type": "client_credentials"
        }
      },
      "Order": {
        "type": "object",
        "discriminator": {
          "propertyName": "",
          "mapping": {
            "TL": "#/components/schemas/equipmentRequired",
            "LTL": "#/components/schemas/equipmentNotRequired",
            "AIR": "#/components/schemas/Order",
            "SEA": "#/components/schemas/Order",
            "ROA": "#/components/schemas/Order",
            "RAI": "#/components/schemas/Order",
            "MT": "#/components/schemas/shipUnitsRequired"
          }
        },
        "properties": {
          "": {
            "type": "string",
            "description": "Choose Template"
          },
          "orderDate ": {
            "type": "string",
            "description": "Date which the order is placed,If order date is not provided, system will add the current date."
          },
          "transportationMode": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Mode of Transportation, accepted values are string of array as TL, LTL, AIR, SEA, ROA, RAI.\n\n Note: For LTL mode please provide Pickup/Delivery time within normal business hours (8am – 5pm). An order request outside of those bounds could lead to either a non-pickup, or an inability to deliver.",
            "enum": [
              "TL",
              "LTL",
              "AIR",
              "SEA",
              "ROA",
              "RAI"
            ]
          },
          "applicationSource": {
            "type": "string",
            "description": "Application source is an enum, which indicates this order created by which source like API, rxoconnect, EDI etc.",
            "enum": [
              "GPAPI",
              "rxoconnect",
              "EDI"
            ]
          },
          "orderNumber ": {
            "type": "string",
            "description": "Order's number to uniquely identify order."
          },
          "shipmentId": {
            "type": "string",
            "description": "Shipment Id."
          },
          "orderType": {
            "type": "string",
            "description": "Order's Type"
          },
          "orderNotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Note's type.",
                  "enum": [
                    "GENERAL",
                    "ORDER_DESCRIPTION"
                  ]
                },
                "value": {
                  "type": "string",
                  "description": "Note's value."
                }
              }
            },
            "description": "Notes for this order as array values."
          },
          "orderReferenceNumbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Custom reference code.",
                  "enum": [
                    "AN",
                    "AO",
                    "BM",
                    "CG",
                    "MB",
                    "OI",
                    "OR",
                    "PO",
                    "PS",
                    "PU",
                    "QL",
                    "SI",
                    "SN",
                    "ZZ",
                    "11",
                    "19",
                    "2I",
                    "6O",
                    "6Y",
                    "CN",
                    "CO",
                    "CR",
                    "DJ",
                    "DN",
                    "DO",
                    "DP",
                    "EH",
                    "EMM",
                    "EQ",
                    "IA",
                    "IL",
                    "KK",
                    "KR",
                    "MI",
                    "MO",
                    "OQ",
                    "P8",
                    "PRT",
                    "QN",
                    "QY",
                    "RB",
                    "RE",
                    "RN",
                    "SC",
                    "SO",
                    "SQ",
                    "TH",
                    "TN",
                    "VD",
                    "VR",
                    "RSN",
                    "8",
                    "23",
                    "4B",
                    "51",
                    "6A",
                    "6M",
                    "6P",
                    "71",
                    "A0",
                    "A6",
                    "A8",
                    "ACI",
                    "AG",
                    "AQ",
                    "AT",
                    "BC",
                    "BL",
                    "BN",
                    "BV",
                    "CB",
                    "CF",
                    "CH",
                    "CP",
                    "CT",
                    "DAN",
                    "DG",
                    "DI",
                    "DK",
                    "DM",
                    "DU",
                    "GD",
                    "GM",
                    "IK",
                    "K6",
                    "LI",
                    "LM",
                    "LO",
                    "MH",
                    "NS",
                    "OC",
                    "ON",
                    "OP",
                    "OU",
                    "OW",
                    "PI",
                    "PL",
                    "PP",
                    "PUA",
                    "Q1",
                    "QJ",
                    "RI",
                    "RZ",
                    "S5",
                    "TDT",
                    "TF",
                    "TO",
                    "TP",
                    "TS",
                    "UP",
                    "VA",
                    "VE",
                    "ZG",
                    "ZM",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "0A",
                    "0B",
                    "0D",
                    "0E",
                    "0F",
                    "0G",
                    "0H",
                    "0I",
                    "0J",
                    "0K",
                    "0L",
                    "0M",
                    "0N",
                    "0P",
                    "10",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "1A",
                    "1B",
                    "1C",
                    "1D",
                    "1E",
                    "1F",
                    "1G",
                    "1H",
                    "1I",
                    "1J",
                    "1K",
                    "1L",
                    "1M",
                    "1N",
                    "1O",
                    "1P",
                    "1Q",
                    "1R",
                    "1S",
                    "1T",
                    "1U",
                    "1V",
                    "1W",
                    "1X",
                    "1Y",
                    "1Z",
                    "20",
                    "21",
                    "22",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "2A",
                    "2B",
                    "2C",
                    "2D",
                    "2E",
                    "2F",
                    "2G",
                    "2H",
                    "2J",
                    "2K",
                    "2L",
                    "2M",
                    "2N",
                    "2O",
                    "2P",
                    "2Q",
                    "2R",
                    "2S",
                    "2T",
                    "2U",
                    "2V",
                    "2W",
                    "2X",
                    "2Y",
                    "2Z",
                    "30",
                    "31",
                    "32",
                    "33",
                    "34",
                    "35",
                    "36",
                    "37",
                    "38",
                    "39",
                    "3A",
                    "3B",
                    "3C",
                    "3D",
                    "3E",
                    "3F",
                    "3G",
                    "3H",
                    "3I",
                    "3J",
                    "3K",
                    "3L",
                    "3M",
                    "3N",
                    "3O",
                    "3P",
                    "3Q",
                    "3R",
                    "3S",
                    "3T",
                    "3U",
                    "3V",
                    "3W",
                    "3X",
                    "3Y",
                    "3Z",
                    "40",
                    "41",
                    "42",
                    "43",
                    "44",
                    "45",
                    "46",
                    "47",
                    "48",
                    "49",
                    "4A",
                    "4C",
                    "4D",
                    "4E",
                    "4F",
                    "4G",
                    "4H",
                    "4I",
                    "4J",
                    "4K",
                    "4L",
                    "4M",
                    "4N",
                    "4O",
                    "4P",
                    "4Q",
                    "4R",
                    "4S",
                    "4T",
                    "4U",
                    "4V",
                    "4W",
                    "4X",
                    "4Y",
                    "4Z",
                    "50",
                    "52",
                    "53",
                    "54",
                    "55",
                    "56",
                    "57",
                    "58",
                    "59",
                    "5A",
                    "5B",
                    "5C",
                    "5D",
                    "5E",
                    "5F",
                    "5G",
                    "5H",
                    "5I",
                    "5J",
                    "5K",
                    "5L",
                    "5M",
                    "5N",
                    "5O",
                    "5P",
                    "5Q",
                    "5R",
                    "5S",
                    "5T",
                    "5U",
                    "5V",
                    "5W",
                    "5X",
                    "5Y",
                    "5Z",
                    "60",
                    "61",
                    "63",
                    "64",
                    "65",
                    "66",
                    "67",
                    "68",
                    "69",
                    "6B",
                    "6C",
                    "6D",
                    "6E",
                    "6F",
                    "6G",
                    "6H",
                    "6I",
                    "6J",
                    "6K",
                    "6L",
                    "6N",
                    "6Q",
                    "6R",
                    "6S",
                    "6T",
                    "6U",
                    "6V",
                    "6W",
                    "6X",
                    "6Z",
                    "70",
                    "72",
                    "73",
                    "74",
                    "75",
                    "76",
                    "77",
                    "78",
                    "79",
                    "7A",
                    "7B",
                    "7C",
                    "7D",
                    "7E",
                    "7F",
                    "7G",
                    "7H",
                    "7I",
                    "7J",
                    "7K",
                    "7L",
                    "7M",
                    "7N",
                    "7O",
                    "7P",
                    "7Q",
                    "7R",
                    "7S",
                    "7T",
                    "7U",
                    "7W",
                    "7X",
                    "7Y",
                    "7Z",
                    "80",
                    "81",
                    "82",
                    "83",
                    "84",
                    "85",
                    "86",
                    "87",
                    "88",
                    "89",
                    "8A",
                    "8B",
                    "8C",
                    "8D",
                    "8E",
                    "8F",
                    "8G",
                    "8H",
                    "8I",
                    "8J",
                    "8K",
                    "8L",
                    "8M",
                    "8N",
                    "8O",
                    "8P",
                    "8Q",
                    "8R",
                    "8S",
                    "8U",
                    "8V",
                    "8W",
                    "8X",
                    "8Y",
                    "8Z",
                    "90",
                    "91",
                    "92",
                    "93",
                    "94",
                    "95",
                    "96",
                    "97",
                    "98",
                    "99",
                    "9A",
                    "9B",
                    "9C",
                    "9D",
                    "9E",
                    "9F",
                    "9G",
                    "9H",
                    "9I",
                    "9J",
                    "9K",
                    "9L",
                    "9M",
                    "9N",
                    "9P",
                    "9Q",
                    "9R",
                    "9S",
                    "9T",
                    "9U",
                    "9V",
                    "9W",
                    "9X",
                    "9Y",
                    "9Z",
                    "A1",
                    "A2",
                    "A3",
                    "A4",
                    "A5",
                    "A7",
                    "A9",
                    "AA",
                    "AAA",
                    "AAB",
                    "AAC",
                    "AAD",
                    "AAE",
                    "AAF",
                    "AAG",
                    "AAH",
                    "AAI",
                    "AAJ",
                    "AAK",
                    "AAL",
                    "AAM",
                    "AAN",
                    "AAO",
                    "AAP",
                    "AAQ",
                    "AAR",
                    "AAS",
                    "AAT",
                    "AAU",
                    "AAV",
                    "AAW",
                    "AAX",
                    "AAY",
                    "AAZ",
                    "AB",
                    "ABA",
                    "ABB",
                    "ABC",
                    "ABD",
                    "ABE",
                    "ABF",
                    "ABG",
                    "ABH",
                    "ABJ",
                    "ABK",
                    "ABL",
                    "ABM",
                    "ABN",
                    "ABO",
                    "ABP",
                    "ABQ",
                    "ABR",
                    "ABS",
                    "ABT",
                    "ABU",
                    "ABV",
                    "ABY",
                    "AC",
                    "ACA",
                    "ACB",
                    "ACC",
                    "ACD",
                    "ACE",
                    "ACF",
                    "ACG",
                    "ACH",
                    "ACJ",
                    "ACK",
                    "ACR",
                    "ACS",
                    "ACT",
                    "AD",
                    "ADA",
                    "ADB",
                    "ADC",
                    "ADD",
                    "ADE",
                    "ADF",
                    "ADG",
                    "ADH",
                    "ADI",
                    "ADM",
                    "AE",
                    "AEA",
                    "AEB",
                    "AEC",
                    "AED",
                    "AEE",
                    "AEF",
                    "AEG",
                    "AEH",
                    "AEI",
                    "AEJ",
                    "AEK",
                    "AEL",
                    "AEM",
                    "AF",
                    "AH",
                    "AHC",
                    "AI",
                    "AJ",
                    "AK",
                    "AL",
                    "ALC",
                    "ALG",
                    "ALH",
                    "ALI",
                    "ALJ",
                    "ALT",
                    "AM",
                    "AP",
                    "API",
                    "AR",
                    "AS",
                    "ASL",
                    "ASP",
                    "AST",
                    "ATC",
                    "AU",
                    "AV",
                    "AW",
                    "AX",
                    "AY",
                    "AZ",
                    "B1",
                    "B2",
                    "B3",
                    "B4",
                    "B5",
                    "B6",
                    "B7",
                    "B8",
                    "B9",
                    "BA",
                    "BAA",
                    "BAB",
                    "BAC",
                    "BAD",
                    "BAE",
                    "BAF",
                    "BAG",
                    "BAH",
                    "BAI",
                    "BB",
                    "BCI",
                    "BD",
                    "BE",
                    "BF",
                    "BG",
                    "BH",
                    "BI",
                    "BJ",
                    "BK",
                    "BKT",
                    "BLT",
                    "BMM",
                    "BO",
                    "BOI",
                    "BP",
                    "BQ",
                    "BR",
                    "BS",
                    "BT",
                    "BU",
                    "BW",
                    "BX",
                    "BY",
                    "BZ",
                    "C0",
                    "C1",
                    "C2",
                    "C3",
                    "C4",
                    "C5",
                    "C6",
                    "C7",
                    "C8",
                    "C9",
                    "CA",
                    "CBG",
                    "CC",
                    "CD",
                    "CDN",
                    "CE",
                    "CI",
                    "CIR",
                    "CIT",
                    "CJ",
                    "CK",
                    "CL",
                    "CM",
                    "CMN",
                    "CMP",
                    "CMT",
                    "CNO",
                    "COL",
                    "COT",
                    "CPA",
                    "CPT",
                    "CQ",
                    "CRN",
                    "CRS",
                    "CS",
                    "CSC",
                    "CSG",
                    "CST",
                    "CTS",
                    "CU",
                    "CV",
                    "CW",
                    "CX",
                    "CY",
                    "CYC",
                    "CZ",
                    "D0",
                    "D1",
                    "D2",
                    "D3",
                    "D4",
                    "D5",
                    "D6",
                    "D7",
                    "D8",
                    "D9",
                    "DA",
                    "DB",
                    "DC",
                    "DD",
                    "DE",
                    "DF",
                    "DH",
                    "DHH",
                    "DIS",
                    "DL",
                    "DNR",
                    "DNS",
                    "DOA",
                    "DOC",
                    "DOE",
                    "DOI",
                    "DOJ",
                    "DOL",
                    "DON",
                    "DOS",
                    "DOT",
                    "DQ",
                    "DR",
                    "DRN",
                    "DS",
                    "DSC",
                    "DSI",
                    "DST",
                    "DT",
                    "DTS",
                    "DUN",
                    "DV",
                    "DW",
                    "DX",
                    "DY",
                    "DZ",
                    "E1",
                    "E2",
                    "E3",
                    "E4",
                    "E5",
                    "E6",
                    "E7",
                    "E8",
                    "E9",
                    "EA",
                    "EB",
                    "EC",
                    "ED",
                    "EDA",
                    "EE",
                    "EF",
                    "EG",
                    "EI",
                    "EJ",
                    "EK",
                    "EL",
                    "EM",
                    "EN",
                    "END",
                    "EO",
                    "EP",
                    "EPA",
                    "EPB",
                    "ER",
                    "ES",
                    "ESN",
                    "ET",
                    "EU",
                    "EV",
                    "EW",
                    "EX",
                    "EY",
                    "EZ",
                    "F1",
                    "F2",
                    "F3",
                    "F4",
                    "F5",
                    "F6",
                    "F7",
                    "F8",
                    "F9",
                    "FA",
                    "FB",
                    "FC",
                    "FCN",
                    "FD",
                    "FE",
                    "FF",
                    "FG",
                    "FH",
                    "FI",
                    "FJ",
                    "FK",
                    "FL",
                    "FLZ",
                    "FM",
                    "FMP",
                    "FN",
                    "FND",
                    "FO",
                    "FP",
                    "FQ",
                    "FR",
                    "FS",
                    "FSN",
                    "FT",
                    "FTN",
                    "FU",
                    "FV",
                    "FW",
                    "FWC",
                    "FX",
                    "FY",
                    "FZ",
                    "G1",
                    "G2",
                    "G3",
                    "G4",
                    "G5",
                    "G6",
                    "G7",
                    "G8",
                    "G9",
                    "GA",
                    "GB",
                    "GC",
                    "GE",
                    "GF",
                    "GG",
                    "GH",
                    "GI",
                    "GJ",
                    "GK",
                    "GL",
                    "GN",
                    "GO",
                    "GP",
                    "GQ",
                    "GR",
                    "GS",
                    "GT",
                    "GU",
                    "GV",
                    "GW",
                    "GWS",
                    "GX",
                    "GY",
                    "GZ",
                    "H1",
                    "H2",
                    "H3",
                    "H4",
                    "H5",
                    "H6",
                    "H7",
                    "H8",
                    "H9",
                    "HA",
                    "HB",
                    "HC",
                    "HD",
                    "HE",
                    "HF",
                    "HG",
                    "HH",
                    "HHT",
                    "HI",
                    "HJ",
                    "HK",
                    "HL",
                    "HM",
                    "HMB",
                    "HN",
                    "HO",
                    "HP",
                    "HPI",
                    "HQ",
                    "HR",
                    "HS",
                    "HT",
                    "HU",
                    "HUD",
                    "HV",
                    "HW",
                    "HX",
                    "HY",
                    "HZ",
                    "I1",
                    "I2",
                    "I3",
                    "I4",
                    "I5",
                    "I7",
                    "I8",
                    "I9",
                    "IB",
                    "IC",
                    "ICD",
                    "ID",
                    "IE",
                    "IF",
                    "IFT",
                    "IG",
                    "IH",
                    "II",
                    "IID",
                    "IJ",
                    "IM",
                    "IMP",
                    "IMS",
                    "IN",
                    "IND",
                    "IO",
                    "IP",
                    "IQ",
                    "IR",
                    "IRN",
                    "IRP",
                    "IS",
                    "ISC",
                    "ISN",
                    "ISS",
                    "IT",
                    "IU",
                    "IV",
                    "IW",
                    "IX",
                    "IZ",
                    "J0",
                    "J1",
                    "J2",
                    "J3",
                    "J4",
                    "J5",
                    "J6",
                    "J7",
                    "J8",
                    "J9",
                    "JA",
                    "JB",
                    "JC",
                    "JD",
                    "JE",
                    "JF",
                    "JH",
                    "JI",
                    "JK",
                    "JL",
                    "JM",
                    "JN",
                    "JO",
                    "JP",
                    "JQ",
                    "JR",
                    "JS",
                    "JT",
                    "JU",
                    "JV",
                    "JW",
                    "JX",
                    "JY",
                    "JZ",
                    "K0",
                    "K1",
                    "K2",
                    "K3",
                    "K4",
                    "K5",
                    "K7",
                    "K8",
                    "K9",
                    "KA",
                    "KB",
                    "KC",
                    "KD",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KJ",
                    "KL",
                    "KM",
                    "KN",
                    "KO",
                    "KP",
                    "KQ",
                    "KS",
                    "KT",
                    "KU",
                    "KV",
                    "KW",
                    "KX",
                    "KY",
                    "KZ",
                    "L1",
                    "L2",
                    "L3",
                    "L4",
                    "L5",
                    "L6",
                    "L7",
                    "L8",
                    "L9",
                    "LA",
                    "LB",
                    "LC",
                    "LD",
                    "LE",
                    "LEN",
                    "LF",
                    "LG",
                    "LH",
                    "LIC",
                    "LJ",
                    "LK",
                    "LL",
                    "LN",
                    "LOI",
                    "LP",
                    "LQ",
                    "LR",
                    "LS",
                    "LSD",
                    "LT",
                    "LU",
                    "LV",
                    "LVO",
                    "LW",
                    "LX",
                    "LY",
                    "LZ",
                    "M1",
                    "M2",
                    "M3",
                    "M5",
                    "M6",
                    "M7",
                    "M8",
                    "M9",
                    "MA",
                    "MBX",
                    "MC",
                    "MCI",
                    "MD",
                    "MDN",
                    "ME",
                    "MF",
                    "MG",
                    "MJ",
                    "MK",
                    "ML",
                    "MM",
                    "MN",
                    "MP",
                    "MQ",
                    "MR",
                    "MS",
                    "MSL",
                    "MT",
                    "MU",
                    "MV",
                    "MW",
                    "MX",
                    "MY",
                    "MZ",
                    "MZO",
                    "N0",
                    "N1",
                    "N2",
                    "N3",
                    "N4",
                    "N5",
                    "N6",
                    "N7",
                    "N8",
                    "N9",
                    "NA",
                    "NAS",
                    "NB",
                    "NC",
                    "ND",
                    "NDA",
                    "NDB",
                    "NE",
                    "NF",
                    "NFC",
                    "NFD",
                    "NFM",
                    "NFN",
                    "NFS",
                    "NG",
                    "NH",
                    "NI",
                    "NJ",
                    "NK",
                    "NL",
                    "NM",
                    "NN",
                    "NO",
                    "NP",
                    "NQ",
                    "NR",
                    "NT",
                    "NU",
                    "NW",
                    "NX",
                    "NY",
                    "NZ",
                    "O1",
                    "O2",
                    "O5",
                    "O7",
                    "O8",
                    "O9",
                    "OA",
                    "OB",
                    "OD",
                    "OE",
                    "OF",
                    "OG",
                    "OH",
                    "OJ",
                    "OK",
                    "OL",
                    "OM",
                    "OS",
                    "OT",
                    "OV",
                    "OX",
                    "OZ",
                    "P1",
                    "P2",
                    "P3",
                    "P4",
                    "P5",
                    "P6",
                    "P7",
                    "P9",
                    "PA",
                    "PAC",
                    "PAN",
                    "PAP",
                    "PB",
                    "PC",
                    "PCC",
                    "PCN",
                    "PD",
                    "PDL",
                    "PE",
                    "PF",
                    "PG",
                    "PGC",
                    "PGN",
                    "PGS",
                    "PH",
                    "PHC",
                    "PID",
                    "PIN",
                    "PJ",
                    "PK",
                    "PLA",
                    "PLN",
                    "PM",
                    "PMN",
                    "PN",
                    "PNN",
                    "POL",
                    "PQ",
                    "PR",
                    "PRS",
                    "PSI",
                    "PSL",
                    "PSM",
                    "PSN",
                    "PT",
                    "PTC",
                    "PV",
                    "PW",
                    "PWC",
                    "PWS",
                    "PX",
                    "PY",
                    "PZ",
                    "Q2",
                    "Q3",
                    "Q4",
                    "Q5",
                    "Q6",
                    "Q7",
                    "Q8",
                    "Q9",
                    "QA",
                    "QB",
                    "QC",
                    "QD",
                    "QE",
                    "QF",
                    "QG",
                    "QH",
                    "QI",
                    "QK",
                    "QM",
                    "QO",
                    "QP",
                    "QQ",
                    "QR",
                    "QS",
                    "QT",
                    "QU",
                    "QV",
                    "QW",
                    "QX",
                    "QZ",
                    "R0",
                    "R1",
                    "R2",
                    "R3",
                    "R4",
                    "R5",
                    "R6",
                    "R7",
                    "R8",
                    "R9",
                    "RA",
                    "RAA",
                    "RAN",
                    "RC",
                    "RD",
                    "REC",
                    "RF",
                    "RG",
                    "RGI",
                    "RH",
                    "RIG",
                    "RJ",
                    "RK",
                    "RL",
                    "RM",
                    "RO",
                    "RP",
                    "RPP",
                    "RPT",
                    "RQ",
                    "RR",
                    "RRS",
                    "RS",
                    "RT",
                    "RU",
                    "RV",
                    "RW",
                    "RX",
                    "RY",
                    "S0",
                    "S1",
                    "S2",
                    "S3",
                    "S4",
                    "S6",
                    "S7",
                    "S8",
                    "S9",
                    "SA",
                    "SB",
                    "SBN",
                    "SCA",
                    "SD",
                    "SE",
                    "SEK",
                    "SES",
                    "SF",
                    "SG",
                    "SH",
                    "SHL",
                    "SJ",
                    "SK",
                    "SL",
                    "SM",
                    "SNH",
                    "SNV",
                    "SP",
                    "SPL",
                    "SPN",
                    "SR",
                    "SS",
                    "ST",
                    "STB",
                    "STR",
                    "SU",
                    "SUB",
                    "SUO",
                    "SV",
                    "SW",
                    "SX",
                    "SY",
                    "SZ",
                    "T0",
                    "T1",
                    "T2",
                    "T3",
                    "T4",
                    "T5",
                    "T6",
                    "T7",
                    "T8",
                    "T9",
                    "TA",
                    "TB",
                    "TC",
                    "TD",
                    "TE",
                    "TG",
                    "TI",
                    "TIP",
                    "TJ",
                    "TK",
                    "TL",
                    "TM",
                    "TOC",
                    "TPN",
                    "TQ",
                    "TR",
                    "TSN",
                    "TT",
                    "TU",
                    "TV",
                    "TW",
                    "TX",
                    "TY",
                    "TZ",
                    "U0",
                    "U1",
                    "U2",
                    "U3",
                    "U4",
                    "U5",
                    "U6",
                    "U8",
                    "U9",
                    "UA",
                    "UB",
                    "UC",
                    "UD",
                    "UE",
                    "UF",
                    "UG",
                    "UH",
                    "UI",
                    "UJ",
                    "UK",
                    "UL",
                    "UM",
                    "UN",
                    "UO",
                    "UQ",
                    "UR",
                    "URL",
                    "US",
                    "UT",
                    "UU",
                    "UV",
                    "UW",
                    "UX",
                    "UY",
                    "UZ",
                    "V0",
                    "V1",
                    "V2",
                    "V3",
                    "V4",
                    "V5",
                    "V6",
                    "V7",
                    "V8",
                    "V9",
                    "VB",
                    "VC",
                    "VF",
                    "VG",
                    "VH",
                    "VI",
                    "VJ",
                    "VK",
                    "VL",
                    "VM",
                    "VN",
                    "VO",
                    "VP",
                    "VQ",
                    "VS",
                    "VT",
                    "VU",
                    "VV",
                    "VW",
                    "VX",
                    "VY",
                    "VZ",
                    "W1",
                    "W2",
                    "W3",
                    "W4",
                    "W5",
                    "W6",
                    "W7",
                    "W8",
                    "W9",
                    "WA",
                    "WB",
                    "WC",
                    "WCS",
                    "WD",
                    "WDR",
                    "WE",
                    "WF",
                    "WG",
                    "WH",
                    "WI",
                    "WJ",
                    "WK",
                    "WL",
                    "WM",
                    "WN",
                    "WO",
                    "WP",
                    "WQ",
                    "WR",
                    "WS",
                    "WT",
                    "WU",
                    "WV",
                    "WW",
                    "WX",
                    "WY",
                    "WZ",
                    "X0",
                    "X1",
                    "X2",
                    "X3",
                    "X4",
                    "X5",
                    "X6",
                    "X7",
                    "X8",
                    "X9",
                    "XA",
                    "XB",
                    "XC",
                    "XD",
                    "XE",
                    "XF",
                    "XG",
                    "XH",
                    "XI",
                    "XJ",
                    "XK",
                    "XL",
                    "XM",
                    "XN",
                    "XO",
                    "XP",
                    "XQ",
                    "XR",
                    "XS",
                    "XT",
                    "XU",
                    "XV",
                    "XW",
                    "XX",
                    "XY",
                    "XZ",
                    "Y0",
                    "Y1",
                    "Y2",
                    "Y3",
                    "Y4",
                    "Y5",
                    "Y6",
                    "Y7",
                    "Y8",
                    "Y9",
                    "YA",
                    "YB",
                    "YC",
                    "YD",
                    "YE",
                    "YF",
                    "YH",
                    "YI",
                    "YJ",
                    "YK",
                    "YL",
                    "YM",
                    "YN",
                    "YO",
                    "YP",
                    "YQ",
                    "YR",
                    "YS",
                    "YT",
                    "YV",
                    "YW",
                    "YX",
                    "YY",
                    "YZ",
                    "Z1",
                    "Z2",
                    "Z3",
                    "Z4",
                    "Z5",
                    "Z6",
                    "Z7",
                    "Z8",
                    "Z9",
                    "ZA",
                    "ZB",
                    "ZC",
                    "ZD",
                    "ZE",
                    "ZF",
                    "ZH",
                    "ZI",
                    "ZJ",
                    "ZK",
                    "ZL",
                    "ZN",
                    "ZO",
                    "ZP",
                    "ZQ",
                    "ZR",
                    "ZS",
                    "ZT",
                    "ZU",
                    "ZV",
                    "ZW",
                    "ZX",
                    "ZY",
                    "TRN",
                    "TCE",
                    "TCO",
                    "UUID"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Type values such as CLIENT_REFERENCE , CP, CS etc."
                },
                "value": {
                  "type": "string",
                  "description": "Actual value of reference code."
                }
              }
            },
            "description": "If customer has more than one reference number e.g. primary order number , secondary order number."
          },
          "additionalServices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Service code."
                },
                "name": {
                  "type": "string",
                  "description": "Service name."
                },
                "description": {
                  "type": "string",
                  "description": "Service description."
                },
                "quantity": {
                  "type": "integer",
                  "description": "Service quantity."
                },
                "unitOfMeasure,": {
                  "type": "string",
                  "description": "Unit of measure."
                }
              },
              "required": [
                "Code",
                "Name"
              ]
            },
            "description": "Additional service required for this order."
          },
          "stops": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addressInformations ": {
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "type": "string",
                      "description": "Address line 1 of stop location."
                    },
                    "addressLine2": {
                      "type": "string",
                      "description": "Address line 2 of stop location."
                    },
                    "cityName": {
                      "type": "string",
                      "description": "City name belongs to stop location."
                    },
                    "stateCode": {
                      "type": "string",
                      "description": "State code of the stop location."
                    },
                    "country": {
                      "type": "string",
                      "description": "Country belongs to stop location."
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "Postal Code."
                    }
                  },
                  "required": [
                    "cityName",
                    "country",
                    "stateCode",
                    "zipCode"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Type of stop.",
                  "enum": [
                    "PICKUP",
                    "INTERMEDIATE",
                    "DELIVERY"
                  ]
                },
                "scheduledTimeFrom": {
                  "type": "string",
                  "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                },
                "scheduledTimeTo": {
                  "type": "string",
                  "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                },
                "stopReferenceNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "typeCode": {
                        "type": "string",
                        "description": "Stop Reference Type code."
                      },
                      "value": {
                        "type": "string",
                        "description": "Actual value of stop reference code."
                      }
                    }
                  },
                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                },
                "sequenceNo": {
                  "type": "integer",
                  "description": "Stop sequence number, required Required only if multi stop quote request."
                }
              }
            },
            "description": "Stops information for this Order including origin and destination.",
            "required": [
              "addressInformations",
              "type"
            ]
          },
          "requestedDeliveryDate": {
            "type": "string",
            "description": "Requested delivery date of order. ISO8601 UTC date-time format required"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemDescription": {
                  "type": "string",
                  "description": "Item's description."
                },
                "itemNumber": {
                  "type": "string",
                  "description": "Item's number."
                },
                "units": {
                  "type": "integer",
                  "description": "Number of units."
                },
                "unitTypeCode": {
                  "type": "string",
                  "description": "Item's unit type.",
                  "enum": [
                    "ACCE",
                    "DRUM",
                    "SKIDS",
                    "ATTCH",
                    "ENVE",
                    "SLIP",
                    "BAGS",
                    "FEET",
                    "SPRS",
                    "BALE",
                    "FIRK",
                    "TOTE",
                    "BASK",
                    "GYLD",
                    "TRKL",
                    "BHDS",
                    "GAYL",
                    "TRLR",
                    "BNDL",
                    "KEGS",
                    "TRNK",
                    "BOXES",
                    "LOOS",
                    "TRAY",
                    "BRRL",
                    "OCTA",
                    "TUBE",
                    "BUCK",
                    "PACK",
                    "UNIT",
                    "CARB",
                    "PAIL",
                    "UNPK",
                    "CASES",
                    "PIEC",
                    "VEH",
                    "CASE",
                    "PALLETS",
                    "BINS",
                    "CHST",
                    "PLTS",
                    "COIL",
                    "RACK",
                    "CARTONS",
                    "RACKS",
                    "CRTS",
                    "REEL",
                    "CTN",
                    "ROLL",
                    "CYLS",
                    "SKID"
                  ]
                },
                "packageUnits": {
                  "type": "integer",
                  "description": "Number of packages."
                },
                "packageTypeCode": {
                  "type": "string",
                  "description": "Package type.",
                  "enum": [
                    "ACCE",
                    "DRUM",
                    "SKIDS",
                    "ATTCH",
                    "ENVE",
                    "SLIP",
                    "BAGS",
                    "FEET",
                    "SPRS",
                    "BALE",
                    "FIRK",
                    "TOTE",
                    "BASK",
                    "GYLD",
                    "TRKL",
                    "BHDS",
                    "GAYL",
                    "TRLR",
                    "BNDL",
                    "KEGS",
                    "TRNK",
                    "BOXES",
                    "LOOS",
                    "TRAY",
                    "BRRL",
                    "OCTA",
                    "TUBE",
                    "BUCK",
                    "PACK",
                    "UNIT",
                    "CARB",
                    "PAIL",
                    "UNPK",
                    "CASES",
                    "PIEC",
                    "VEH",
                    "CASE",
                    "PALLETS",
                    "BINS",
                    "CHST",
                    "PLTS",
                    "COIL",
                    "RACK",
                    "CARTONS",
                    "RACKS",
                    "CRTS",
                    "REEL",
                    "CTN",
                    "ROLL",
                    "CYLS",
                    "SKID"
                  ]
                },
                "weight": {
                  "type": "integer",
                  "description": "Item's weight."
                },
                "weightUomCode": {
                  "type": "string",
                  "description": "Weight- Unit of measure.",
                  "enum": [
                    "KG",
                    "LB"
                  ]
                },
                "height": {
                  "type": "number",
                  "description": "Item's height."
                },
                "heightUomCode": {
                  "type": "string",
                  "description": "Height- Unit of measure.",
                  "enum": [
                    "CM",
                    "IN",
                    "FT"
                  ]
                },
                "length": {
                  "type": "number",
                  "description": "Item's length."
                },
                "lengthUomCode": {
                  "type": "string",
                  "description": "Length - Unit of measure.",
                  "enum": [
                    "CM",
                    "IN",
                    "FT"
                  ]
                },
                "width": {
                  "type": "integer",
                  "description": "Item's width."
                },
                "widthUomCode": {
                  "type": "string",
                  "description": "Width - Unit of measure.",
                  "enum": [
                    "CM",
                    "IN",
                    "FT"
                  ]
                },
                "volume": {
                  "type": "number",
                  "description": "Item's volume."
                },
                "volumeUomCode": {
                  "type": "string",
                  "description": "Volume - Unit of measure.",
                  "enum": [
                    "CUCM",
                    "CUIN",
                    "CUFT"
                  ]
                },
                "classCode": {
                  "type": "string",
                  "description": "This code represents product freight class.."
                },
                "nmfcCode": {
                  "type": "string",
                  "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                },
                "declaredValue": {
                  "type": "number",
                  "description": "Item's declared amount value."
                },
                "declaredValueCurrencyCode": {
                  "type": "string",
                  "description": "Item's declared value currency code."
                },
                "itemPrice": {
                  "type": "number",
                  "description": "Item's price value."
                },
                "itemPriceCurrencyCode": {
                  "type": "string",
                  "description": "Item's price currency code."
                },
                "isTemperatureControlled": {
                  "type": "boolean",
                  "description": "Whether item is temperature controlled or not."
                },
                "temperatureInformation": {
                  "type": "object",
                  "properties": {
                    "high": {
                      "type": "string",
                      "description": "High temperature."
                    },
                    "low": {
                      "type": "string",
                      "description": "Low temperature."
                    },
                    "highUom": {
                      "type": "string",
                      "description": "High temperature Unit of measure."
                    },
                    "lowUom": {
                      "type": "string",
                      "description": "Low temperature Unit of measure."
                    }
                  },
                  "description": "Temperature information of the Item."
                },
                "isHazmat": {
                  "type": "boolean",
                  "description": "Whether item is hazardous or not."
                },
                "hazardousItemInfo": {
                  "type": "object",
                  "properties": {
                    "unNumber": {
                      "type": "integer",
                      "description": "Identification number to identify dangerous goods."
                    },
                    "packingGroup": {
                      "type": "integer",
                      "description": "Packaging group."
                    },
                    "receptacleSize": {
                      "type": "integer",
                      "description": "Receptacle size."
                    },
                    "hazardousClass": {
                      "type": "string",
                      "description": "Hazardous class."
                    },
                    "numberofReceptacles": {
                      "type": "integer",
                      "description": "Number of receptacles."
                    },
                    "unitofMeasure": {
                      "type": "string",
                      "description": "Unit of measure."
                    },
                    "containerType": {
                      "type": "string",
                      "description": "Container type."
                    },
                    "hazardousDescription": {
                      "type": "string",
                      "description": "Hazardous description."
                    },
                    "hazardousPhoneNumber": {
                      "type": "string",
                      "description": "Phone number."
                    },
                    "shippingName": {
                      "type": "string",
                      "description": "Shipping Name."
                    }
                  },
                  "description": "Hazardous information if the item is Hazardous material (IsHazmat = true)"
                },
                "htsCode": {
                  "type": "string",
                  "description": "HTS codes are used to classify and define internationally traded goods"
                },
                "sku": {
                  "type": "string",
                  "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                },
                "purchaseOrderNumber": {
                  "type": "string",
                  "description": "Purchase Order Number."
                },
                "itemReferenceNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Custom reference code."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type values such as CLIENT_REFERENCE , CP, CS etc.",
                        "enum": [
                          "CP",
                          "CS",
                          "NON_OTM_USER_EMAIL",
                          "INCO_TERM",
                          "SHIPPING_SERVICE",
                          "SHIPPING_SERVICE",
                          "PUBLIC_CG",
                          "CG",
                          "NAMED_LOCATION",
                          "SHIPPER_PICKUP_NUM",
                          "CLIENT_REFERENCE",
                          "NON_MANAGED",
                          "ZWF_REPORTED",
                          "ZWF_STD_REASON",
                          "ZWF_XPD_REASON",
                          "ZWF_XPD",
                          "BUS_UNIT",
                          "PRO",
                          "SHIPPER_BOL",
                          "HOUSE_BOL",
                          "SEAL_NUMBER",
                          "OVERSIZE"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Actual value of reference code."
                      }
                    }
                  },
                  "description": "This object holds the collection of reference numbers associated with this items."
                }
              },
              "required": [
                "itemCode"
              ]
            },
            "description": "Item Details."
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Partner identifier code used for uniquely identify the partner."
          },
          "userName": {
            "type": "string",
            "description": "User's Name."
          }
        },
        "required": [
          "partnerIdentifierCode",
          "transportationMode",
          "applicationSource",
          "stops",
          "items"
        ],
        "example": {
          "orderDate": "2020-10-12T12:08:09.31",
          "transportationMode": "SEA",
          "applicationSource": "2",
          "orderNumber": "HouseBill676897",
          "OrderType": "ForwardingShipment",
          "orderNotes": [
            {
              "type": "GoodsDescription",
              "value": "test description"
            }
          ],
          "orderReferenceNumbers": [
            {
              "type": "CREATEDBY",
              "value": "FASANGMKE"
            }
          ],
          "additionalServices": [
            {
              "name": "ServiceLevel",
              "code": "5"
            },
            {
              "name": "InsuranceType",
              "code": "test"
            }
          ],
          "stops": [
            {
              "addressInformation": {
                "addressLine1": "7150 BRYAN DAIRY ROAD",
                "addressLine2": "",
                "cityName": "KENMORE",
                "countryCode": "USA",
                "stateCode": "WA",
                "zipCode": "98028"
              },
              "type": 1,
              "scheduledTimeFrom": "2020-02-20T08:00:00",
              "scheduledTimeTo": "2020-02-20T08:00:00",
              "sequenceNo": 1,
              "stopReferenceNumbers": [
                {
                  "code": "HITPRODEN",
                  "type": "Shipper",
                  "value": "ABC Corporation"
                },
                {
                  "type": "ShipperReference",
                  "value": "TestShipperReference"
                },
                {
                  "type": "Instructions",
                  "value": "testPickupInstructions"
                }
              ]
            },
            {
              "addressInformation": {
                "addressLine1": "7150 BRYAN DAIRY ROAD",
                "addressLine2": "",
                "cityName": "KENMORE",
                "countryCode": "USA",
                "stateCode": "WA",
                "zipCode": "98028"
              },
              "type": 3,
              "sequenceNo": 3,
              "scheduledTimeFrom": "2020-02-20T08:00:00",
              "scheduledTimeTo": "2020-10-20T08:00:00",
              "stopReferenceNumbers": [
                {
                  "code": "FASANGMKE",
                  "type": "Consignee",
                  "value": "Generic Customer Enterprises"
                },
                {
                  "type": "ConsigneeReference",
                  "value": "TestConsigneeReference"
                },
                {
                  "type": "Instructions",
                  "value": "testPickupInstructions"
                },
                {
                  "code": "FASANGMKE",
                  "type": "Customer",
                  "value": "Generic Customer Enterprises"
                }
              ]
            },
            {
              "addressInformation": {
                "addressLine1": "7150 BRYAN DAIRY ROAD",
                "addressLine2": "",
                "cityName": "KENMORE",
                "countryCode": "USA",
                "stateCode": "WA",
                "zipCode": "98028"
              },
              "sequenceNo": 2,
              "type": 2,
              "scheduledTimeFrom": "2020-02-20T08:00:00",
              "scheduledTimeTo": "2020-10-20T08:00:00",
              "stopReferenceNumbers": [
                {
                  "code": "FASANGMKE",
                  "type": "Customer",
                  "value": "Generic Customer Enterprises"
                }
              ]
            }
          ],
          "requestedDeliveryDate": "2020-02-27T15:00:00",
          "items": [
            {
              "itemNumber": "100056006",
              "itemDescription": "CONCRETE BUCKET 1\/2 YD",
              "units": 10,
              "unitTypeCode": "EACH",
              "packageUnits": 2,
              "packageTypeCode": "BAG",
              "weight": 330,
              "weightUomCode": "LB",
              "height": 99.99,
              "heightUomCode": "IN",
              "length": 99.99,
              "lengthUomCode": "IN",
              "width": 150,
              "widthUomCode": "IN",
              "declaredValue": 2285.88,
              "declaredValueCurrencyCode": "USD",
              "volume": 868.03,
              "volumeUomCode": "CUFT",
              "itemPrice": 20.5,
              "itemPriceCurrencyCode": "USD",
              "isTemperatureControlled": false,
              "isHazmat": false,
              "hazardousItemInfo": {
                "unnumber": 0,
                "packingGroup": 0,
                "receptacleSize": 0,
                "hazardousClass": null,
                "numberofReceptacles": 0,
                "unitofMeasure": null,
                "containerType": null,
                "hazardousDescription": null,
                "hazardousPhoneNumber": null,
                "shippingName": null
              },
              "htscode": null,
              "sku": "Sku00001",
              "purchaseOrderNumber": null,
              "itemReferenceNumbers": [
                {
                  "code": "1001",
                  "type": "CommodityCode"
                },
                {
                  "value": "c60",
                  "type": "FreightClass"
                },
                {
                  "value": "60",
                  "type": "POQuantity"
                }
              ]
            }
          ],
          "partnerIdentifierCode": "10-1-TESTCHN2"
        }
      },
      "convertquoteresponse": {
        "properties": {
          "reRatedQuoteResponse": {
            "$ref": "#/components/schemas/commonquoteresponse"
          },
          "orderNumber": {
            "type": "string",
            "description": "Order Number.",
            "example": "RXO443244"
          },
          "orderId": {
            "type": "integer",
            "description": "Order Id.",
            "example": "70661"
          },
          "proNumber": {
            "type": "string",
            "description": "FO Order Code, It is provided for TL orders."
          },
          "bolNumber": {
            "type": "string",
            "description": "Bill of lading (BOL) number, It is provided for LTL orders."
          },
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Message details.",
            "example": "Order created successfully!"
          },
          "context": {
            "type": "array",
            "description": "context details.",
            "example": "null"
          }
        },
        "example": {
          "orderId": 1095485,
          "proNumber": null,
          "bolNumber": "GALNY00010",
          "statusCode": 200,
          "message": "Order has been successfully created",
          "context": null
        }
      },
      "commonquoteresponse": {
        "type": "object",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "masterQuoteId": {
            "type": "integer",
            "description": "Unique Identifier for tracking Quote Request."
          },
          "statusCode": {
            "type": "integer",
            "description": "Success http response code 200.",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Success message for generated Quote.",
            "example": "Quote creation succeeded! MasterQuoteId: 51490."
          },
          "priceSearchResponse": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "This  is to identify, specific price search response is for which transportation mode."
                },
                "lowestPrice": {
                  "type": "number",
                  "description": "The lowest price amount of quote for this specific mode."
                },
                "quoteDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "quoteId": {
                        "type": "integer",
                        "description": "Unique Identifier for Quote."
                      },
                      "carrierCode": {
                        "type": "string",
                        "description": "Code used to uniquely identify the carrier."
                      },
                      "carrierName": {
                        "type": "string",
                        "description": "Name of the carrier."
                      },
                      "serviceLevel": {
                        "type": "string",
                        "description": "Service level.",
                        "enum": [
                          "Single",
                          "Team",
                          "LTL"
                        ]
                      },
                      "movementType": {
                        "type": "string",
                        "description": "Type of Movement."
                      },
                      "estimatedTransitTime": {
                        "type": "integer",
                        "description": "Estimated transit time in days."
                      },
                      "accessorials": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accessorialCode": {
                              "type": "string",
                              "description": "Accessorial Code."
                            },
                            "accessorialName": {
                              "type": "string",
                              "description": "Accessorial Name."
                            },
                            "accessorialCost": {
                              "type": "number",
                              "description": "Accessorial Cost ."
                            }
                          }
                        },
                        "description": "This is an array which contains the additional services and charges."
                      },
                      "rateList": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "isOptional": {
                              "type": "boolean",
                              "description": "Is optional."
                            },
                            "currencyCode": {
                              "type": "string",
                              "description": "Currency Code for this Rate."
                            },
                            "code": {
                              "type": "string",
                              "description": "Rate Code."
                            },
                            "typeCode": {
                              "type": "string",
                              "description": "Type Code for this Rate."
                            },
                            "cost": {
                              "type": "string",
                              "description": "Cost."
                            }
                          }
                        },
                        "description": "This is an array which contains the rate split-up."
                      },
                      "legs": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "stops": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "addressInformations ": {
                                    "type": "object",
                                    "properties": {
                                      "locationId": {
                                        "type": "string",
                                        "description": "Id of location."
                                      },
                                      "locationName": {
                                        "type": "string",
                                        "description": "Name of location."
                                      },
                                      "addressLine1": {
                                        "type": "string",
                                        "description": "Address line 1 of stop location."
                                      },
                                      "addressLine2": {
                                        "type": "string",
                                        "description": "Address line 2 of stop location."
                                      },
                                      "cityName": {
                                        "type": "string",
                                        "description": "City name belongs to stop location."
                                      },
                                      "stateCode": {
                                        "type": "string",
                                        "description": "State code of the stop location."
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "Country belongs to stop location."
                                      },
                                      "zipCode": {
                                        "type": "string",
                                        "description": "Postal Code."
                                      }
                                    },
                                    "required": [
                                      "cityName",
                                      "country",
                                      "stateCode",
                                      "zipCode"
                                    ]
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of stop.",
                                    "enum": [
                                      "PICKUP",
                                      "INTERMEDIATE",
                                      "DELIVERY"
                                    ]
                                  },
                                  "scheduledTimeFrom": {
                                    "type": "string",
                                    "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                  },
                                  "scheduledTimeTo": {
                                    "type": "string",
                                    "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                  },
                                  "stopContactInformations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "firstName": {
                                          "type": "string",
                                          "description": "First name of contact person."
                                        },
                                        "lastName": {
                                          "type": "string",
                                          "description": "Last name of contact person."
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "Email for communication."
                                        },
                                        "phoneNumbers": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "Type": {
                                                "type": "string",
                                                "description": "Phone number types.",
                                                "enum": [
                                                  "MOBILE",
                                                  "WORK",
                                                  "HOME"
                                                ]
                                              },
                                              "number": {
                                                "type": "string",
                                                "description": "Contact number."
                                              },
                                              "isPrimary": {
                                                "type": "boolean",
                                                "description": "Is contact primary information."
                                              }
                                            }
                                          },
                                          "description": "Primary and alternate numbers for communication."
                                        },
                                        "title": {
                                          "type": "string",
                                          "description": "Title of contact person."
                                        },
                                        "isPrimary": {
                                          "type": "boolean",
                                          "description": "Is it the primary contact information?."
                                        }
                                      }
                                    },
                                    "description": "Contact Information for each stop."
                                  },
                                  "specialRequirement": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "code": "string",
                                          "description": "Special requirement type."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Special requirements value."
                                        }
                                      }
                                    },
                                    "description": "The array of special requirements for this stop."
                                  },
                                  "stopReferenceNumbers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "typeCode": {
                                          "type": "string",
                                          "description": "Stop Reference Type code."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Actual value of stop reference code."
                                        }
                                      }
                                    },
                                    "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                  },
                                  "note": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "Note's type."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Note's value."
                                        }
                                      }
                                    }
                                  },
                                  "sequenceNo": {
                                    "type": "integer",
                                    "description": "Stop sequence number, required Required only if multi stop quote request."
                                  }
                                }
                              },
                              "description": "Stops information for this Quote including origin and destination.",
                              "required": [
                                "addressInformations",
                                "type"
                              ]
                            }
                          }
                        },
                        "description": "This is an array which holds the specific route information of this applicable quote price. "
                      },
                      "accessorialsTotalCost": {
                        "type": "number",
                        "description": "Accessorial's Total Cost."
                      },
                      "subTotal": {
                        "type": "number",
                        "description": "Sub Total."
                      },
                      "totalCost": {
                        "type": "number",
                        "description": "Total Cost."
                      },
                      "isNmfcCarrier": {
                        "type": "boolean",
                        "description": "Boolean flag to represent its an NMFC carrier."
                      },
                      "isContractRate": {
                        "type": "boolean",
                        "description": "Boolean flag to represent this quote is contract rate."
                      },
                      "currencyCode": {
                        "type": "string",
                        "description": "Currency Code."
                      },
                      "expiresOn": {
                        "type": "string",
                        "description": "Quote expiry date."
                      },
                      "createdOn": {
                        "type": "string",
                        "description": "Quote created date."
                      }
                    }
                  },
                  "description": "This is an array of object which holds the list of quote details."
                },
                "lowestPriceQuote": {
                  "type": "object",
                  "properties": {
                    "quoteId": {
                      "type": "integer",
                      "description": "Unique Identifier for Quote."
                    },
                    "carrierCode": {
                      "type": "string",
                      "description": "Carrier Code."
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Carrier Name."
                    },
                    "estimatedTransitTime": {
                      "type": "integer",
                      "description": "Estimated transit time in days."
                    },
                    "lineHaul": {
                      "type": "number",
                      "description": "Line Haul."
                    },
                    "fsc": {
                      "type": "number",
                      "description": "FSC."
                    },
                    "legs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stops": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addressInformations ": {
                                  "type": "object",
                                  "properties": {
                                    "locationId": {
                                      "type": "string",
                                      "description": "Id of location."
                                    },
                                    "locationName": {
                                      "type": "string",
                                      "description": "Name of location."
                                    },
                                    "addressLine1": {
                                      "type": "string",
                                      "description": "Address line 1 of stop location."
                                    },
                                    "addressLine2": {
                                      "type": "string",
                                      "description": "Address line 2 of stop location."
                                    },
                                    "cityName": {
                                      "type": "string",
                                      "description": "City name belongs to stop location."
                                    },
                                    "stateCode": {
                                      "type": "string",
                                      "description": "State code of the stop location."
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country belongs to stop location."
                                    },
                                    "zipCode": {
                                      "type": "string",
                                      "description": "Postal Code."
                                    }
                                  },
                                  "required": [
                                    "cityName",
                                    "country",
                                    "stateCode",
                                    "zipCode"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of stop.",
                                  "enum": [
                                    "PICKUP",
                                    "INTERMEDIATE",
                                    "DELIVERY"
                                  ]
                                },
                                "scheduledTimeFrom": {
                                  "type": "string",
                                  "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "scheduledTimeTo": {
                                  "type": "string",
                                  "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "stopContactInformations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "description": "First name of contact person."
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "description": "Last name of contact person."
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Email for communication."
                                      },
                                      "phoneNumbers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Type": {
                                              "type": "string",
                                              "description": "Phone number types.",
                                              "enum": [
                                                "MOBILE",
                                                "WORK",
                                                "HOME"
                                              ]
                                            },
                                            "number": {
                                              "type": "string",
                                              "description": "Contact number."
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "description": "Is contact primary information."
                                            }
                                          }
                                        },
                                        "description": "Primary and alternate numbers for communication."
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "Title of contact person."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Is it the primary contact information?."
                                      }
                                    }
                                  },
                                  "description": "Contact Information for each stop."
                                },
                                "specialRequirement": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "code": "string",
                                        "description": "Special requirement type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Special requirements value."
                                      }
                                    }
                                  },
                                  "description": "The array of special requirements for this stop."
                                },
                                "stopReferenceNumbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeCode": {
                                        "type": "string",
                                        "description": "Stop Reference Type code."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Actual value of stop reference code."
                                      }
                                    }
                                  },
                                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                },
                                "note": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Note's type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Note's value."
                                      }
                                    }
                                  }
                                },
                                "sequenceNo": {
                                  "type": "integer",
                                  "description": "Stop sequence number, required Required only if multi stop quote request."
                                }
                              }
                            },
                            "description": "Stops information for this Quote including origin and destination.",
                            "required": [
                              "addressInformations",
                              "type"
                            ]
                          }
                        }
                      },
                      "description": "This is an array which holds the specific route information of this applicable quote price. "
                    },
                    "accessorials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Accessorial Code."
                          },
                          "name": {
                            "type": "string",
                            "description": "Accessorial Name."
                          },
                          "cost": {
                            "type": "number",
                            "description": "Accessorial Cost ."
                          }
                        }
                      },
                      "description": "This is an array which contains the additional services and charges."
                    },
                    "accessorialsTotalCost": {
                      "type": "number",
                      "description": "Accessorial's Total Cost."
                    },
                    "subTotal": {
                      "type": "number",
                      "description": "Sub Total."
                    },
                    "totalCost": {
                      "type": "number",
                      "description": "Total Cost."
                    },
                    "isNmfcCarrier": {
                      "type": "boolean",
                      "description": "Boolean flag to represent its an NMFC carrier."
                    }
                  }
                },
                "lowestGuaranteedQuotePrice": {
                  "type": "object",
                  "properties": {
                    "quoteId": {
                      "type": "integer",
                      "description": "Unique Identifier for Quote."
                    },
                    "carrierCode": {
                      "type": "string",
                      "description": "Carrier Code."
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Carrier Name."
                    },
                    "estimatedTransitTime": {
                      "type": "integer",
                      "description": "Estimated transit time in days."
                    },
                    "lineHaul": {
                      "type": "number",
                      "description": "Line Haul."
                    },
                    "fsc": {
                      "type": "number",
                      "description": "FSC."
                    },
                    "legs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stops": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addressInformations ": {
                                  "type": "object",
                                  "properties": {
                                    "locationId": {
                                      "type": "string",
                                      "description": "Id of location."
                                    },
                                    "locationName": {
                                      "type": "string",
                                      "description": "Name of location."
                                    },
                                    "addressLine1": {
                                      "type": "string",
                                      "description": "Address line 1 of stop location."
                                    },
                                    "addressLine2": {
                                      "type": "string",
                                      "description": "Address line 2 of stop location."
                                    },
                                    "cityName": {
                                      "type": "string",
                                      "description": "City name belongs to stop location."
                                    },
                                    "stateCode": {
                                      "type": "string",
                                      "description": "State code of the stop location."
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country belongs to stop location."
                                    },
                                    "zipCode": {
                                      "type": "string",
                                      "description": "Postal Code."
                                    }
                                  },
                                  "required": [
                                    "cityName",
                                    "country",
                                    "stateCode",
                                    "zipCode"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of stop.",
                                  "enum": [
                                    "PICKUP",
                                    "INTERMEDIATE",
                                    "DELIVERY"
                                  ]
                                },
                                "scheduledTimeFrom": {
                                  "type": "string",
                                  "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "scheduledTimeTo": {
                                  "type": "string",
                                  "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "stopContactInformations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "description": "First name of contact person."
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "description": "Last name of contact person."
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Email for communication."
                                      },
                                      "phoneNumbers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Type": {
                                              "type": "string",
                                              "description": "Phone number types.",
                                              "enum": [
                                                "MOBILE",
                                                "WORK",
                                                "HOME"
                                              ]
                                            },
                                            "number": {
                                              "type": "string",
                                              "description": "Contact number."
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "description": "Is contact primary information."
                                            }
                                          }
                                        },
                                        "description": "Primary and alternate numbers for communication."
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "Title of contact person."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Is it the primary contact information?."
                                      }
                                    }
                                  },
                                  "description": "Contact Information for each stop."
                                },
                                "specialRequirement": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "code": "string",
                                        "description": "Special requirement type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Special requirements value."
                                      }
                                    }
                                  },
                                  "description": "The array of special requirements for this stop."
                                },
                                "stopReferenceNumbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeCode": {
                                        "type": "string",
                                        "description": "Stop Reference Type code."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Actual value of stop reference code."
                                      }
                                    }
                                  },
                                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                },
                                "note": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Note's type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Note's value."
                                      }
                                    }
                                  }
                                },
                                "sequenceNo": {
                                  "type": "integer",
                                  "description": "Stop sequence number, required Required only if multi stop quote request."
                                }
                              }
                            },
                            "description": "Stops information for this Quote including origin and destination.",
                            "required": [
                              "addressInformations",
                              "type"
                            ]
                          }
                        }
                      },
                      "description": "This is an array which holds the specific route information of this applicable quote price. "
                    },
                    "accessorials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Accessorial Code."
                          },
                          "name": {
                            "type": "string",
                            "description": "Accessorial Name."
                          },
                          "cost": {
                            "type": "number",
                            "description": "Accessorial Cost ."
                          }
                        }
                      },
                      "description": "This is an array which contains the additional services and charges."
                    },
                    "accessorialsTotalCost": {
                      "type": "number",
                      "description": "Accessorial's Total Cost."
                    },
                    "subTotal": {
                      "type": "number",
                      "description": "Sub Total."
                    },
                    "totalCost": {
                      "type": "number",
                      "description": "Total Cost."
                    },
                    "isNmfcCarrier": {
                      "type": "boolean",
                      "description": "Boolean flag to represent its an NMFC carrier."
                    }
                  }
                },
                "bestDealQuotePrice": {
                  "type": "object",
                  "properties": {
                    "quoteId": {
                      "type": "integer",
                      "description": "Unique Identifier for Quote."
                    },
                    "carrierCode": {
                      "type": "string",
                      "description": "Carrier Code."
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Carrier Name."
                    },
                    "estimatedTransitTime": {
                      "type": "integer",
                      "description": "Estimated transit time in days."
                    },
                    "lineHaul": {
                      "type": "number",
                      "description": "Line Haul."
                    },
                    "fsc": {
                      "type": "number",
                      "description": "FSC."
                    },
                    "legs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stops": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addressInformations ": {
                                  "type": "object",
                                  "properties": {
                                    "locationId": {
                                      "type": "string",
                                      "description": "Id of location."
                                    },
                                    "locationName": {
                                      "type": "string",
                                      "description": "Name of location."
                                    },
                                    "addressLine1": {
                                      "type": "string",
                                      "description": "Address line 1 of stop location."
                                    },
                                    "addressLine2": {
                                      "type": "string",
                                      "description": "Address line 2 of stop location."
                                    },
                                    "cityName": {
                                      "type": "string",
                                      "description": "City name belongs to stop location."
                                    },
                                    "stateCode": {
                                      "type": "string",
                                      "description": "State code of the stop location."
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country belongs to stop location."
                                    },
                                    "zipCode": {
                                      "type": "string",
                                      "description": "Postal Code."
                                    }
                                  },
                                  "required": [
                                    "cityName",
                                    "country",
                                    "stateCode",
                                    "zipCode"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of stop.",
                                  "enum": [
                                    "PICKUP",
                                    "INTERMEDIATE",
                                    "DELIVERY"
                                  ]
                                },
                                "scheduledTimeFrom": {
                                  "type": "string",
                                  "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "scheduledTimeTo": {
                                  "type": "string",
                                  "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "stopContactInformations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "description": "First name of contact person."
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "description": "Last name of contact person."
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Email for communication."
                                      },
                                      "phoneNumbers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Type": {
                                              "type": "string",
                                              "description": "Phone number types.",
                                              "enum": [
                                                "MOBILE",
                                                "WORK",
                                                "HOME"
                                              ]
                                            },
                                            "number": {
                                              "type": "string",
                                              "description": "Contact number."
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "description": "Is contact primary information."
                                            }
                                          }
                                        },
                                        "description": "Primary and alternate numbers for communication."
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "Title of contact person."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Is it the primary contact information?."
                                      }
                                    }
                                  },
                                  "description": "Contact Information for each stop."
                                },
                                "specialRequirement": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "code": "string",
                                        "description": "Special requirement type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Special requirements value."
                                      }
                                    }
                                  },
                                  "description": "The array of special requirements for this stop."
                                },
                                "stopReferenceNumbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeCode": {
                                        "type": "string",
                                        "description": "Stop Reference Type code."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Actual value of stop reference code."
                                      }
                                    }
                                  },
                                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                },
                                "note": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Note's type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Note's value."
                                      }
                                    }
                                  }
                                },
                                "sequenceNo": {
                                  "type": "integer",
                                  "description": "Stop sequence number, required Required only if multi stop quote request."
                                }
                              }
                            },
                            "description": "Stops information for this Quote including origin and destination.",
                            "required": [
                              "addressInformations",
                              "type"
                            ]
                          }
                        }
                      },
                      "description": "This is an array which holds the specific route information of this applicable quote price. "
                    },
                    "accessorials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Code": {
                            "type": "string",
                            "description": "Accessorial Code."
                          },
                          "name": {
                            "type": "string",
                            "description": "Accessorial Name."
                          },
                          "cost": {
                            "type": "number",
                            "description": "Accessorial Cost ."
                          }
                        }
                      },
                      "description": "This is an array which contains the additional services and charges."
                    },
                    "accessorialsTotalCost": {
                      "type": "number",
                      "description": "Accessorial's Total Cost."
                    },
                    "subTotal": {
                      "type": "number",
                      "description": "Sub Total."
                    },
                    "totalCost": {
                      "type": "number",
                      "description": "Total Cost."
                    },
                    "isNmfcCarrier": {
                      "type": "boolean",
                      "description": "Boolean flag to represent its an NMFC carrier."
                    }
                  }
                }
              },
              "Description": "It includes the list of quotes details for different modes such as LTL, TL etc."
            }
          }
        },
        "example": {
          "errorDetails": null,
          "masterQuoteId": 40038,
          "statusCode": 200,
          "message": "Quote creation succeeded! MasterQuoteId: 40038.",
          "isRatingCompleted": true,
          "priceSearchResponse": [
            {
              "lowestPrice": 423.11,
              "quoteDetails": [
                {
                  "quoteId": "0000389411",
                  "carrierCode": null,
                  "carrierName": "RXO Logistics Freight, Inc.- Standard and Hazmat",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 5,
                  "accessorials": [
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 5.0
                    },
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 13.5
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 60.0
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 75.0
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 60.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 185.52,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 24.09,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 213.50,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 213.50,
                  "subTotal": 423.11,
                  "totalCost": 423.11,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.3209099+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 185.52,
                  "fsc": 24.09,
                  "scac": "CNWY",
                  "totalDistance": 0.0
                },
                {
                  "quoteId": "0000389412",
                  "carrierCode": null,
                  "carrierName": "Roadrunner Transportation Services Inc",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 6,
                  "accessorials": [
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 12.75
                    },
                    {
                      "accessorialCode": "CHP",
                      "accessorialName": "Church Pickup (CHP)",
                      "accessorialCost": 50.0
                    },
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 40.0
                    },
                    {
                      "accessorialCode": "GLHC",
                      "accessorialName": "Linehaul Charge (GLHC)",
                      "accessorialCost": 18.45
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 45.0
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 35.0
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 50.0
                    },
                    {
                      "accessorialCode": "GLHC",
                      "accessorialName": "Linehaul Charge (GLHC)",
                      "accessorialCost": 30.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 217.72,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 10.89,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 281.20,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 281.20,
                  "subTotal": 509.81,
                  "totalCost": 509.81,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.322908+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 217.72,
                  "fsc": 10.89,
                  "scac": "RDFS",
                  "totalDistance": 0.0
                },
                {
                  "quoteId": "0000389413",
                  "carrierCode": null,
                  "carrierName": "Saia Motor Freight",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 5,
                  "accessorials": [
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 15.75
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 73.0
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 73.0
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 52.0
                    },
                    {
                      "accessorialCode": "CHP",
                      "accessorialName": "Church Pickup (CHP)",
                      "accessorialCost": 52.0
                    },
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 8.5
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 229.1,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 11.75,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 274.25,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 274.25,
                  "subTotal": 515.10,
                  "totalCost": 515.1,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.322908+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 229.1,
                  "fsc": 11.75,
                  "scac": "SAIA",
                  "totalDistance": 0.0
                },
                {
                  "quoteId": "0000389414",
                  "carrierCode": null,
                  "carrierName": "Estes Express Lines (Guaranteed LTL Standard Transit: 12PM)",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 5,
                  "accessorials": [
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 15.0
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 25.0
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 25.0
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 20.0
                    },
                    {
                      "accessorialCode": "CHP",
                      "accessorialName": "Church Pickup (CHP)",
                      "accessorialCost": 65.0
                    },
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 9.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 356.56,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 34.42,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 159.00,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 159.00,
                  "subTotal": 549.98,
                  "totalCost": 549.98,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.322908+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 356.56,
                  "fsc": 34.42,
                  "scac": "EXLA",
                  "totalDistance": 0.0
                },
                {
                  "quoteId": "0000389415",
                  "carrierCode": null,
                  "carrierName": "FedEx Economy",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 7,
                  "accessorials": [
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 35.0
                    },
                    {
                      "accessorialCode": "CHP",
                      "accessorialName": "Church Pickup (CHP)",
                      "accessorialCost": 152.0
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 144.0
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 144.0
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 145.0
                    },
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 7.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 300.76,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 30.06,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 627.00,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 627.00,
                  "subTotal": 957.82,
                  "totalCost": 957.82,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.322908+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 300.76,
                  "fsc": 30.06,
                  "scac": "FXNL",
                  "totalDistance": 0.0
                },
                {
                  "quoteId": "0000389416",
                  "carrierCode": null,
                  "carrierName": "FedEx Priority",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 4,
                  "accessorials": [
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 35.0
                    },
                    {
                      "accessorialCode": "CHP",
                      "accessorialName": "Church Pickup (CHP)",
                      "accessorialCost": 152.0
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 144.0
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 144.0
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 145.0
                    },
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 7.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 325.41,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 34.28,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 627.00,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 627.00,
                  "subTotal": 986.69,
                  "totalCost": 986.69,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.322908+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 325.41,
                  "fsc": 34.28,
                  "scac": "FXNL",
                  "totalDistance": 0.0
                }
              ],
              "lowestPriceQuote": {
                "quoteId": "0000389411",
                "carrierCode": null,
                "carrierName": "RXO Logistics Freight, Inc.- Standard and Hazmat",
                "serviceLevel": "LTL",
                "movementType": "DIRECT",
                "estimatedTransitTime": 5,
                "accessorials": [
                  {
                    "accessorialCode": "RSS",
                    "accessorialName": "State Charge (RSS)",
                    "accessorialCost": 5.0
                  },
                  {
                    "accessorialCode": "HZM",
                    "accessorialName": "Hazardous Material (HZM)",
                    "accessorialCost": 13.5
                  },
                  {
                    "accessorialCode": "RSP",
                    "accessorialName": "Residential Pickup (RSP)",
                    "accessorialCost": 60.0
                  },
                  {
                    "accessorialCode": "LFD",
                    "accessorialName": "Liftgate Delivery (LFD)",
                    "accessorialCost": 75.0
                  },
                  {
                    "accessorialCode": "RSD",
                    "accessorialName": "Residential Delivery (RSD)",
                    "accessorialCost": 60.0
                  }
                ],
                "rateList": [
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "LNH",
                    "name": "Line Haul",
                    "typeCode": "F",
                    "cost": 185.52,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "FSF",
                    "name": "Fuel Surcharge",
                    "typeCode": "F",
                    "cost": 24.09,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": true,
                    "currencyCode": "USD",
                    "code": "AD",
                    "name": "Additional Charge Total",
                    "typeCode": "F",
                    "cost": 213.50,
                    "unit": null,
                    "unitRate": null
                  }
                ],
                "legs": null,
                "accessorialsTotalCost": 213.50,
                "subTotal": 423.11,
                "totalCost": 423.11,
                "isNmfcCarrier": false,
                "isContractRate": true,
                "currencyCode": "USD",
                "expiresOn": null,
                "createdOn": "2020-07-07T12:25:12.3209099+00:00",
                "pickUpDate": null,
                "pickUpDateDisplay": null,
                "lineHaul": 185.52,
                "fsc": 24.09,
                "scac": "CNWY",
                "totalDistance": 0.0
              },
              "lowestGuaranteedPriceQuote": {
                "quoteId": "0000389414",
                "carrierCode": null,
                "carrierName": "Estes Express Lines (Guaranteed LTL Standard Transit: 12PM)",
                "serviceLevel": "LTL",
                "movementType": "DIRECT",
                "estimatedTransitTime": 5,
                "accessorials": [
                  {
                    "accessorialCode": "HZM",
                    "accessorialName": "Hazardous Material (HZM)",
                    "accessorialCost": 15.0
                  },
                  {
                    "accessorialCode": "RSD",
                    "accessorialName": "Residential Delivery (RSD)",
                    "accessorialCost": 25.0
                  },
                  {
                    "accessorialCode": "RSP",
                    "accessorialName": "Residential Pickup (RSP)",
                    "accessorialCost": 25.0
                  },
                  {
                    "accessorialCode": "LFD",
                    "accessorialName": "Liftgate Delivery (LFD)",
                    "accessorialCost": 20.0
                  },
                  {
                    "accessorialCode": "CHP",
                    "accessorialName": "Church Pickup (CHP)",
                    "accessorialCost": 65.0
                  },
                  {
                    "accessorialCode": "RSS",
                    "accessorialName": "State Charge (RSS)",
                    "accessorialCost": 9.0
                  }
                ],
                "rateList": [
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "LNH",
                    "name": "Line Haul",
                    "typeCode": "F",
                    "cost": 356.56,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "FSF",
                    "name": "Fuel Surcharge",
                    "typeCode": "F",
                    "cost": 34.42,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": true,
                    "currencyCode": "USD",
                    "code": "AD",
                    "name": "Additional Charge Total",
                    "typeCode": "F",
                    "cost": 159.00,
                    "unit": null,
                    "unitRate": null
                  }
                ],
                "legs": null,
                "accessorialsTotalCost": 159.00,
                "subTotal": 549.98,
                "totalCost": 549.98,
                "isNmfcCarrier": false,
                "isContractRate": true,
                "currencyCode": "USD",
                "expiresOn": null,
                "createdOn": "2020-07-07T12:25:12.322908+00:00",
                "pickUpDate": null,
                "pickUpDateDisplay": null,
                "lineHaul": 356.56,
                "fsc": 34.42,
                "scac": "EXLA",
                "totalDistance": 0.0
              },
              "bestDealPriceQuote": {
                "quoteId": "0000389411",
                "carrierCode": null,
                "carrierName": "RXO Logistics Freight, Inc.- Standard and Hazmat",
                "serviceLevel": "LTL",
                "movementType": "DIRECT",
                "estimatedTransitTime": 5,
                "accessorials": [
                  {
                    "accessorialCode": "RSS",
                    "accessorialName": "State Charge (RSS)",
                    "accessorialCost": 5.0
                  },
                  {
                    "accessorialCode": "HZM",
                    "accessorialName": "Hazardous Material (HZM)",
                    "accessorialCost": 13.5
                  },
                  {
                    "accessorialCode": "RSP",
                    "accessorialName": "Residential Pickup (RSP)",
                    "accessorialCost": 60.0
                  },
                  {
                    "accessorialCode": "LFD",
                    "accessorialName": "Liftgate Delivery (LFD)",
                    "accessorialCost": 75.0
                  },
                  {
                    "accessorialCode": "RSD",
                    "accessorialName": "Residential Delivery (RSD)",
                    "accessorialCost": 60.0
                  }
                ],
                "rateList": [
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "LNH",
                    "name": "Line Haul",
                    "typeCode": "F",
                    "cost": 185.52,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "FSF",
                    "name": "Fuel Surcharge",
                    "typeCode": "F",
                    "cost": 24.09,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": true,
                    "currencyCode": "USD",
                    "code": "AD",
                    "name": "Additional Charge Total",
                    "typeCode": "F",
                    "cost": 213.50,
                    "unit": null,
                    "unitRate": null
                  }
                ],
                "legs": null,
                "accessorialsTotalCost": 213.50,
                "subTotal": 423.11,
                "totalCost": 423.11,
                "isNmfcCarrier": false,
                "isContractRate": true,
                "currencyCode": "USD",
                "expiresOn": null,
                "createdOn": "2020-07-07T12:25:12.3209099+00:00",
                "pickUpDate": null,
                "pickUpDateDisplay": null,
                "lineHaul": 185.52,
                "fsc": 24.09,
                "scac": "CNWY",
                "totalDistance": 0.0
              },
              "mode": "LTL"
            }
          ]
        }
      },
      "getquoteresponse": {
        "$ref": "#/components/schemas/commonquoteresponse"
      },
      "quoteresponse": {
        "$ref": "#/components/schemas/commonquoteresponse"
      },
      "orderStatusResponse": {
        "type": "object",
        "description": "Order Status Response.",
        "properties": {
          "errorDetails": {
            "$ref": "#/components/schemas/errorDetails"
          },
          "statusCode": {
            "type": "string",
            "description": "Order Status Code.",
            "enum": [
              "Continue",
              "SwitchingProtocols",
              "Processing",
              "EarlyHints",
              "OK",
              "Created",
              "Accepted",
              "NonAuthoritativeInformation",
              "NoContent",
              "ResetContent",
              "PartialContent",
              "MultiStatus",
              "AlreadyReported",
              "IMUsed",
              "MultipleChoices",
              "Ambiguous",
              "MovedPermanently",
              "Moved",
              "Found",
              "Redirect",
              "SeeOther",
              "RedirectMethod",
              "NotModified",
              "UseProxy",
              "Unused",
              "TemporaryRedirect",
              "RedirectKeepVerb",
              "PermanentRedirect",
              "BadRequest",
              "Unauthorized",
              "PaymentRequired",
              "Forbidden",
              "NotFound",
              "MethodNotAllowed",
              "NotAcceptable",
              "ProxyAuthenticationRequired",
              "RequestTimeout",
              "Conflict",
              "Gone",
              "LengthRequired",
              "PreconditionFailed",
              "RequestEntityTooLarge",
              "RequestUriTooLong",
              "UnsupportedMediaType",
              "RequestedRangeNotSatisfiable",
              "ExpectationFailed",
              "MisdirectedRequest",
              "UnprocessableEntity",
              "Locked",
              "FailedDependency",
              "UpgradeRequired",
              "PreconditionRequired",
              "TooManyRequests",
              "RequestHeaderFieldsTooLarge",
              "UnavailableForLegalReasons",
              "InternalServerError",
              "NotImplemented",
              "BadGateway",
              "ServiceUnavailable",
              "GatewayTimeout",
              "HttpVersionNotSupported",
              "VariantAlsoNegotiates",
              "InsufficientStorage",
              "LoopDetected",
              "NotExtended"
            ]
          },
          "totalCount": {
            "type": "integer",
            "description": "Total result count in response."
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderStatus"
            },
            "description": "Status is a collections of Shipments/Order events information."
          }
        },
        "example": {
          "errorDetails": null,
          "statusCode": 200,
          "totalCount": 6,
          "status": [
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:43:23.02-04:00",
              "estimatedTimeOfArrival": null,
              "lateReasonCode": null,
              "eventCategory": "ORDER",
              "containers": [
                {
                  "containerNumber": "1",
                  "containerInitials": "cI",
                  "containerGroupId": "gId"
                }
              ],
              "event": {
                "code": "OC",
                "name": "ORDER_CREATED",
                "description": "ORDER CREATED",
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "shipmentNumbers": [
                  5171729
                ],
                "referenceNumbers": []
              }
            },
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:45:00-04:00",
              "estimatedTimeOfArrival": null,
              "lateReasonCode": null,
              "eventCategory": "SHIPMENT",
              "event": {
                "shipmentId": "5171729",
                "code": "X3",
                "name": "ARRIVED_AT_PICKUP",
                "description": "ARRIVED AT PICKUP LOCATION",
                "distanceToStop": null,
                "distanceToStopUom": null,
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "locationInformation": {
                  "addressInformation": {
                    "locationName": "Test 1",
                    "locationType": "OTHER",
                    "addressLine1": "1800 North Clybourn Avenue",
                    "addressLine2": "",
                    "cityName": "Chicago",
                    "countryCode": "US",
                    "stateCode": "IL",
                    "type": "Pickup",
                    "zipCode": "60606",
                    "region": null,
                    "geoCode": {
                      "latitude": 41.882934,
                      "longitude": -87.636843,
                      "s2CellId": null
                    }
                  }
                },
                "contactInformation": {
                  "firstName": "TestData",
                  "lastName": "Lname",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": "MOBILE",
                      "number": "7894561230"
                    }
                  ],
                  "title": null,
                  "isPrimary": false
                },
                "carrierInformation": {
                  "code": "270WBANY",
                  "name": "270 WEST HOLDINGS LLC",
                  "scac": null
                },
                "items": [
                  {
                    "productCode": "ACEQ",
                    "units": 10.0,
                    "unitTypeCode": "10",
                    "packageUnits": 0.0,
                    "packageTypeCode": null,
                    "weight": 15.0,
                    "weightUom": "LB",
                    "height": 0.0,
                    "heightUom": "in",
                    "length": 0.0,
                    "lengthUom": "in",
                    "width": 0.0,
                    "widthUom": "in",
                    "sku": null,
                    "nfmcCode": "0",
                    "class": null
                  }
                ]
              }
            },
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:48:00-04:00",
              "estimatedTimeOfArrival": "2020-08-14T18:41:00-04:00",
              "lateReasonCode": null,
              "eventCategory": "SHIPMENT",
              "event": {
                "shipmentId": "5171729",
                "code": "AF",
                "name": "DEPARTED_FROM_PICKUP",
                "description": "CARRIER DEPARTED PICK-UP LOCATION WITH SHIPMENT",
                "distanceToStop": null,
                "distanceToStopUom": null,
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "locationInformation": {
                  "addressInformation": {
                    "locationName": "Test 1",
                    "locationType": "OTHER",
                    "addressLine1": "1800 North Clybourn Avenue",
                    "addressLine2": "",
                    "cityName": "Chicago",
                    "countryCode": "US",
                    "stateCode": "IL",
                    "type": "Pickup",
                    "zipCode": "60606",
                    "region": null,
                    "geoCode": {
                      "latitude": 41.882934,
                      "longitude": -87.636843,
                      "s2CellId": null
                    }
                  }
                },
                "contactInformation": {
                  "firstName": "TestData",
                  "lastName": "Lname",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": "MOBILE",
                      "number": "7894561230"
                    }
                  ],
                  "title": null,
                  "isPrimary": false
                },
                "carrierInformation": {
                  "code": "270WBANY",
                  "name": "270 WEST HOLDINGS LLC",
                  "scac": null
                },
                "items": [
                  {
                    "productCode": "ACEQ",
                    "units": 10.0,
                    "unitTypeCode": "10",
                    "packageUnits": 0.0,
                    "packageTypeCode": null,
                    "weight": 15.0,
                    "weightUom": "LB",
                    "height": 0.0,
                    "heightUom": "in",
                    "length": 0.0,
                    "lengthUom": "in",
                    "width": 0.0,
                    "widthUom": "in",
                    "sku": null,
                    "nfmcCode": "0",
                    "class": null
                  }
                ]
              }
            },
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:48:00-04:00",
              "estimatedTimeOfArrival": "2020-08-17T14:20:00-04:00",
              "lateReasonCode": null,
              "eventCategory": "SHIPMENT",
              "event": {
                "shipmentId": "5171729",
                "code": "X6",
                "name": "IN_TRANSIT",
                "description": "EN ROUTE TO DELIVERY LOCATION",
                "distanceToStop": null,
                "distanceToStopUom": null,
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "locationInformation": null,
                "contactInformation": null,
                "carrierInformation": {
                  "code": "270WBANY",
                  "name": "270 WEST HOLDINGS LLC",
                  "scac": null
                },
                "items": [
                  {
                    "productCode": "ACEQ",
                    "units": 10.0,
                    "unitTypeCode": "10",
                    "packageUnits": 0.0,
                    "packageTypeCode": null,
                    "weight": 15.0,
                    "weightUom": "LB",
                    "height": 0.0,
                    "heightUom": "in",
                    "length": 0.0,
                    "lengthUom": "in",
                    "width": 0.0,
                    "widthUom": "in",
                    "sku": null,
                    "nfmcCode": "0",
                    "class": null
                  }
                ]
              }
            },
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:50:00-04:00",
              "estimatedTimeOfArrival": null,
              "lateReasonCode": null,
              "eventCategory": "SHIPMENT",
              "event": {
                "shipmentId": "5171729",
                "code": "X1",
                "name": "ARRIVED_AT_DELIVERY",
                "description": "ARRIVED AT DELIVERY LOCATION",
                "distanceToStop": null,
                "distanceToStopUom": null,
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "locationInformation": {
                  "addressInformation": {
                    "locationName": "Test 2",
                    "locationType": "OTHER",
                    "addressLine1": "North Ridgeville Soccer Complex",
                    "addressLine2": "",
                    "cityName": "North Ridgeville",
                    "countryCode": "US",
                    "stateCode": "OH",
                    "type": "Delivery",
                    "zipCode": "44039",
                    "region": null,
                    "geoCode": {
                      "latitude": 41.376396,
                      "longitude": -82.019666,
                      "s2CellId": null
                    }
                  }
                },
                "contactInformation": {
                  "firstName": "TestData",
                  "lastName": "",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": "MOBILE",
                      "number": "3312244433"
                    }
                  ],
                  "title": null,
                  "isPrimary": false
                },
                "carrierInformation": {
                  "code": "270WBANY",
                  "name": "270 WEST HOLDINGS LLC",
                  "scac": null
                },
                "items": [
                  {
                    "productCode": "ACEQ",
                    "units": 10.0,
                    "unitTypeCode": "10",
                    "packageUnits": 0.0,
                    "packageTypeCode": null,
                    "weight": 15.0,
                    "weightUom": "LB",
                    "height": 0.0,
                    "heightUom": "in",
                    "length": 0.0,
                    "lengthUom": "in",
                    "width": 0.0,
                    "widthUom": "in",
                    "sku": null,
                    "nfmcCode": "0",
                    "class": null
                  }
                ]
              }
            },
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:53:00-04:00",
              "estimatedTimeOfArrival": "2020-08-14T11:54:00-04:00",
              "lateReasonCode": null,
              "eventCategory": "SHIPMENT",
              "event": {
                "shipmentId": "5171729",
                "code": "CD",
                "name": "DEPARTED_FROM_DELIVERY",
                "description": "CARRIER DEPARTED DELIVERY LOCATION",
                "distanceToStop": null,
                "distanceToStopUom": null,
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "locationInformation": {
                  "addressInformation": {
                    "locationName": "Test 2",
                    "locationType": "OTHER",
                    "addressLine1": "North Ridgeville Soccer Complex",
                    "addressLine2": "",
                    "cityName": "North Ridgeville",
                    "countryCode": "US",
                    "stateCode": "OH",
                    "type": "Delivery",
                    "zipCode": "44039",
                    "region": null,
                    "geoCode": {
                      "latitude": 41.376396,
                      "longitude": -82.019666,
                      "s2CellId": null
                    }
                  }
                },
                "contactInformation": {
                  "firstName": "TestData",
                  "lastName": "",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": "MOBILE",
                      "number": "3312244433"
                    }
                  ],
                  "title": null,
                  "isPrimary": false
                },
                "carrierInformation": {
                  "code": "270WBANY",
                  "name": "270 WEST HOLDINGS LLC",
                  "scac": null
                },
                "items": [
                  {
                    "productCode": "ACEQ",
                    "units": 10.0,
                    "unitTypeCode": "10",
                    "packageUnits": 0.0,
                    "packageTypeCode": null,
                    "weight": 15.0,
                    "weightUom": "LB",
                    "height": 0.0,
                    "heightUom": "in",
                    "length": 0.0,
                    "lengthUom": "in",
                    "width": 0.0,
                    "widthUom": "in",
                    "sku": null,
                    "nfmcCode": "0",
                    "class": null
                  }
                ]
              }
            }
          ]
        }
      },
      "orderStatus": {
        "description": "Order Status Details.",
        "discriminator": {
          "propertyName": "eventCategory",
          "mapping": {
            "Order": "#/components/schemas/orderEvent",
            "Shipment": "#/components/schemas/shipmentEvent"
          }
        },
        "type": "object",
        "properties": {
          "containers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "containerNumber": {
                  "type": "string",
                  "description": "Container Number"
                },
                "containerInitials": {
                  "type": "string",
                  "description": "Container Initials."
                },
                "containerGroupId": {
                  "type": "string",
                  "description": "Container Group Id."
                }
              }
            }
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Unique identifier for the Partners in RXO."
          },
          "eventTime": {
            "format": "date-time",
            "type": "string",
            "description": "date time when the event was reported."
          },
          "estimatedTimeOfArrival": {
            "format": "date-time",
            "type": "string",
            "description": "Shipment Estimated time of arrival."
          },
          "lateReasonCode": {
            "type": "string",
            "description": "If the shipment is arrived late, this field hold the value of late reason code."
          },
          "eventCategory": {
            "enum": [
              "Order",
              "Shipment"
            ],
            "type": "string",
            "description": "This enum value which represents, this is a Shipment event or Order event."
          }
        }
      },
      "shipmentEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/orderStatus"
          },
          {
            "description": "Event object which contains event related information for Shipment.",
            "type": "object",
            "properties": {
              "event": {
                "type": "object",
                "properties": {
                  "shipmentId": {
                    "type": "string",
                    "description": "Unique identifier of shipment in RXO."
                  },
                  "code": {
                    "type": "string",
                    "description": "Represents type of events.",
                    "enum": [
                      "AA : PICKUP_APPOINTMENT",
                      "AB : DELIVERY_APPOINTMENT",
                      "X3 : ARRIVED_AT_PICKUP",
                      "CP : COMPLETED_LODING",
                      "AF : DEPARTED_FROM_PICKUP",
                      "X6 : IN_TRANSIT",
                      "X1 : ARRIVED_AT_DELIVERY",
                      "D1 : COMPLETED_UNLOADING",
                      "CD : DELIVERED",
                      "AH : ATTEMPTED_DELIVERY",
                      "SD : SHIPMENT_DELAYED"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the event."
                  },
                  "description": {
                    "type": "string",
                    "description": "Indicate the description of event."
                  },
                  "distanceToStop": {
                    "type": "number",
                    "description": "Distance to the last stop."
                  },
                  "distanceToStopUom": {
                    "type": "string",
                    "description": "Distance to the last stop unit of measure."
                  },
                  "orderDetails": {
                    "type": "object",
                    "properties": {
                      "orderId": {
                        "type": "integer",
                        "description": "Unique identifier of order in RXO Connect."
                      }
                    },
                    "description": "This object contains the order related information."
                  },
                  "locationInformation": {
                    "type": "object",
                    "properties": {
                      "addressInformation": {
                        "type": "object",
                        "properties": {
                          "locationName": {
                            "type": "string",
                            "description": "Name of location."
                          },
                          "addressLine1": {
                            "type": "string",
                            "description": "Address line 1 of stop location."
                          },
                          "addressLine2": {
                            "type": "string",
                            "description": "Address line 2 of stop location."
                          },
                          "cityName": {
                            "type": "string",
                            "description": "City name belongs to stop location."
                          },
                          "stateCode": {
                            "type": "string",
                            "description": "State code of the stop location."
                          },
                          "country": {
                            "type": "string",
                            "description": "Country belongs to stop location."
                          },
                          "zipCode": {
                            "type": "string",
                            "description": "Postal Code."
                          },
                          "region": {
                            "type": "string",
                            "description": "Region."
                          },
                          "geoCode": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number",
                                "description": "latitude value of location."
                              },
                              "longitude": {
                                "type": "number",
                                "description": "longitude value of location."
                              },
                              "s2CellId": {
                                "type": "string",
                                "description": "s2CellId  of location."
                              }
                            }
                          }
                        },
                        "description": "Address Details."
                      }
                    },
                    "description": "Location Information including Address Details."
                  },
                  "contactInformation": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "First name of contact person."
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of contact person."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email for communication."
                      },
                      "phoneNumbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "description": "Phone number types.",
                              "enum": [
                                "MOBILE",
                                "WORK",
                                "HOME"
                              ]
                            },
                            "number": {
                              "type": "string",
                              "description": "Contact number."
                            },
                            "isPrimary": {
                              "type": "boolean",
                              "description": "Is contact primary information."
                            }
                          }
                        },
                        "description": "Primary and alternate numbers for communication."
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of contact person."
                      },
                      "isPrimary": {
                        "type": "boolean",
                        "description": "Is it the primary contact information?."
                      }
                    },
                    "description": "Contact Information."
                  },
                  "carrierInformation": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Carrier Code."
                      },
                      "name": {
                        "type": "string",
                        "description": "Carrier Name."
                      },
                      "scac": {
                        "type": "string",
                        "description": "Carrier SCAC value."
                      }
                    },
                    "description": "Carrier Details."
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productCode": {
                          "type": "string",
                          "description": "Item's Product Code."
                        },
                        "units": {
                          "type": "number",
                          "description": "Number of units."
                        },
                        "unitTypeCode": {
                          "type": "string",
                          "description": "Item's unit type."
                        },
                        "packageUnits": {
                          "type": "number",
                          "description": "Number of packages."
                        },
                        "packageTypeCode": {
                          "type": "string",
                          "description": "Package type."
                        },
                        "weight": {
                          "type": "number",
                          "description": "Item's weight."
                        },
                        "weightUom": {
                          "type": "string",
                          "description": "Weight- Unit of measure."
                        },
                        "height": {
                          "type": "number",
                          "description": "Item's height."
                        },
                        "heightUom": {
                          "type": "string",
                          "description": "Height- Unit of measure."
                        },
                        "length": {
                          "type": "number",
                          "description": "Item's length."
                        },
                        "lengthUom": {
                          "type": "string",
                          "description": "Length - Unit of measure."
                        },
                        "width": {
                          "type": "number",
                          "description": "Item's width."
                        },
                        "widthUom": {
                          "type": "string",
                          "description": "Width - Unit of measure."
                        },
                        "sku": {
                          "type": "string",
                          "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                        },
                        "class": {
                          "type": "string",
                          "description": "This code represents product freight class.."
                        },
                        "nmfcCode": {
                          "type": "string",
                          "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                        }
                      }
                    },
                    "description": "All item details."
                  }
                }
              }
            }
          }
        ]
      },
      "orderEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/orderStatus"
          },
          {
            "description": "Event object which contains event related information for Order.",
            "type": "object",
            "properties": {
              "event": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Represents type of events.",
                    "enum": [
                      "OC : ORDER_CREATED",
                      "OU : ORDER_UPDATED",
                      "OL : ORDER_CANCELLED"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the event."
                  },
                  "description": {
                    "type": "string",
                    "description": "Indicate the description of event."
                  },
                  "orderDetails": {
                    "type": "object",
                    "properties": {
                      "orderId": {
                        "type": "integer",
                        "description": "Unique identifier of order in RXO Connect."
                      }
                    },
                    "description": "This object contains the order related information."
                  },
                  "shipmentNumbers": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Shipment Id."
                    },
                    "description": "This field contains the collection shipment ids tied to this order."
                  },
                  "referenceNumbers": {
                    "description": "This collection contains the reference number details associated with this order.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Reference Type."
                      },
                      "value": {
                        "type": "string",
                        "description": "Reference Value."
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "errorDetails": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Error message."
        },
        "description": "Error details while generating quotes."
      },
      "successtoken": {
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Returned Bearer token to be used for subsequent API calls.",
            "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6IkU1OEQ3N0M3MEE2MkRCMUQwMDYwODRCNUNCREI0QkVBMUJGRjhGM0YiLCJ0eXAiOiJKV1QiLCJ4NXQiOiI1WTEzeHdwaTJ4MEFZSVMxeTl0TDZodl9qejgifQ.eyJuYmYiOjE1ODc1NzQxMDYsImV4cCI6MTU4NzU4MTMwNiwiaXNzIjoiaHR0cHM6Ly9sb2dpbi1zYW5kYm94LmF1dGh4cG8uY29tIiwiYXVkIjpbImh0dHBzOi8vbG9naW4tc2FuZGJveC5hdXRoeHBvLmNvbS9yZXNvdXJjZXMiLCJ4cG8tcmF0ZXMtYXBpIl0sImNsaWVudF9pZCI6Inhwby1rcmFmdC1oZWluei1pbnRlZ3JhdGlvbiIsInNjb3BlIjpbInhwby1yYXRlcy1hcGkiXX0.dnoOVJQdZTFTUIY8uWf4izO7gLmY8fIXZ4N7tlWMhxkZdk6uD8VtOoY8BaJodruSpYXD2qDDHBKQe0VN-VGFBOyjx1hBXt7MSNJM_KP9H66m1VVGouuO4NV9knhTogUK_Mmt4wsfUhpFhR6MZDPkDFkLI7RpajcOfqJCQE8w7dq_AWpcD8R1sWozWcuaJHZ9su0d6x_FIwbA58iZXi7Mw1iWBPi1uuemo3iL5sKyng8V5Pp3IPELUgTFxugtcIEkw9uw3NMcXhT6qLUzfjFaXGJMyxHY-P2VaCgrt6FURkltvef9kqd2_5mB-oJNB4CEqIw9QLOHcW62OnIoi_6Tiw"
          },
          "expires_in": {
            "type": "integer",
            "description": "Amount of time till token is valid. **7200 seconds (2 hours).**",
            "example": 7200
          },
          "token_type": {
            "type": "string",
            "description": "Type of token. **Bearer.**",
            "example": "Bearer"
          }
        }
      },
      "deleteOrderResponse": {
        "description": "Delete Order Response class",
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "description": "Requested cancel Order Id."
          },
          "shipmentId": {
            "type": "string",
            "description": "Requested cancel Order's Shipment Id."
          },
          "statusCode": {
            "type": "integer",
            "description": "Status code value."
          },
          "message": {
            "type": "string",
            "description": "Message details."
          }
        },
        "example": {
          "orderId": 1120450,
          "shipmentId": null,
          "statusCode": 200,
          "message": "Order cancel request has been successfully logged. A notification has been sent to the sales representative for further processing."
        }
      },
      "error401": {
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "401"
          },
          "message": {
            "type": "string",
            "description": "Unauthorized.",
            "example": "Unauthorized"
          },
          "context": {
            "type": "array",
            "description": "Error details.",
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string",
                  "description": "Error context key.",
                  "example": "TOKEN_VALIDATION"
                },
                "value": {
                  "type": "string",
                  "description": "Error context value,.",
                  "example": "Token has expired."
                }
              }
            }
          }
        }
      },
      "error400": {
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "400"
          },
          "message": {
            "type": "string",
            "description": "Error Message.",
            "example": "Bad Request"
          },
          "context": {
            "type": "array",
            "description": "Error details.",
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string",
                  "description": "Error context key.",
                  "example": "TOKEN_GENERATION_FAILED"
                },
                "value": {
                  "type": "string",
                  "description": "Error context value,.",
                  "example": "Invalid Client"
                }
              }
            }
          }
        }
      },
      "error500": {
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "500"
          },
          "message": {
            "type": "string",
            "description": "Internal server error.",
            "example": "Internal server error"
          },
          "context": {
            "type": "array",
            "description": "Error details.",
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string",
                  "description": "Error context key.",
                  "example": "BACKEND_SERVICE_COMMUNICATION"
                },
                "value": {
                  "type": "string",
                  "description": "Error context value,.",
                  "example": "Error communicating with the backend service."
                }
              }
            }
          }
        }
      },
      "CancelActionRequest": {
        "type": "object",
        "properties": {
          "Entity": {
            "type": "object",
            "properties": {
              "WorkOrderId": {
                "type": "string",
                "description": "Unique Sales Order Number."
              }
            }
          }
        },
        "required": [
          "WorkOrderId"
        ],
        "example": {
          "Entity": {
            "WorkOrderId": "000004FQBHSIU000000000"
          }
        }
      },
      "CancelFinalRequest": {
        "type": "object",
        "properties": {
          "Entity": {
            "type": "object",
            "properties": {
              "WorkOrderId": {
                "type": "string",
                "description": "Unique Sales Order Number."
              }
            }
          }
        },
        "required": [
          "WorkOrderId"
        ],
        "example": {
          "Entity": {
            "WorkOrderId": "000004FQBHSIU000000000"
          }
        }
      },
      "CancelActionResponse": {
        "properties": {
          "cancel": {
            "type": "boolean",
            "description": "Cancel status.",
            "example": "true"
          }
        },
        "example": {
          "cancel": false
        }
      },
      "CancelFinalResponse": {
        "properties": {},
        "example": {}
      },
      "equipmentCategoryCode": {
        "type": "string",
        "description": "Type of Equipment used to move your shipment, such as Dry Van, Flatbed etc.",
        "enum": [
          "DB",
          "CTN",
          "VN",
          "FB",
          "CS",
          "RF",
          "TRACTORONL",
          "OTH",
          "Sprinter",
          "Cargo",
          "Van",
          "LS",
          "LSR",
          "TRR"
        ]
      },
      "equipmentTypeCode": {
        "type": "string",
        "description": "Equipment type is the classification under equipment category, such as Dry Van 53, Dry Van 58 etc.",
        "enum": [
          "AC",
          "BT",
          "C",
          "CI",
          "CONT",
          "CR",
          "DD",
          "DT",
          "F",
          "F45",
          "F48",
          "F53",
          "F60",
          "FA",
          "FD",
          "FH",
          "FM",
          "FR",
          "FT",
          "FZ",
          "HB",
          "HOP",
          "LA",
          "LB",
          "MV",
          "MX",
          "NU",
          "OT",
          "PO",
          "R",
          "R2",
          "R48",
          "R53",
          "RA",
          "RG",
          "RL",
          "RM",
          "RN",
          "RZ",
          "SD",
          "SDCK",
          "ST",
          "TA",
          "TN",
          "TRAC",
          "TS",
          "TT",
          "V",
          "V2",
          "VA",
          "VAN",
          "VB",
          "VC",
          "VF",
          "VG",
          "VH",
          "VI",
          "VL",
          "VM",
          "VN",
          "VN53",
          "VR48",
          "VR53",
          "VS",
          "VT",
          "VV",
          "VZ",
          "VR",
          "VRM",
          "VRZ",
          "VHC",
          "COFC",
          "CS",
          "RGE",
          "SD48",
          "SD53",
          "C20",
          "C40",
          "C53",
          "LTL",
          "OD",
          "INT",
          "AIR",
          "LCL",
          "CC20",
          "CC40",
          "CC48",
          "CC53",
          "CH20",
          "CH40",
          "CH48",
          "CH53",
          "HEAT",
          "CONE",
          "NA",
          "CargoVan",
          "Sprinter",
          "LS",
          "LSR",
          "HC40",
          "HCOC",
          "HHCC",
          "TRR",
          "MNV",
          "CBV",
          "18D",
          "22D",
          "24D",
          "28D",
          "VSPR",
          "VZM",
          "RZM"
        ]
      },
      "equipmentRequired": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          },
          {
            "type": "object",
            "properties": {
              "equipmentTypeCode": {
                "$ref": "#/components/schemas/equipmentTypeCode"
              },
              "equipmentCategoryCode": {
                "$ref": "#/components/schemas/equipmentCategoryCode"
              }
            },
            "required": [
              "equipmentTypeCode",
              "equipmentCategoryCode"
            ]
          }
        ]
      },
      "equipmentNotRequired": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          },
          {
            "type": "object",
            "properties": {
              "equipmentTypeCode": {
                "$ref": "#/components/schemas/equipmentTypeCode"
              },
              "equipmentCategoryCode": {
                "$ref": "#/components/schemas/equipmentCategoryCode"
              }
            }
          }
        ]
      },
      "shipmentSearchRequest": {
        "type": "object",
        "properties": {
          "searchString": {
            "type": "string",
            "description": "Shipment Number"
          },
          "shipmentStatus": {
            "type": "string",
            "description": "Status of the shipment (All,NotStarted,InRoute,Delivered)"
          },
          "estimateTimeArrival": {
            "type": "object",
            "properties": {
              "fromDate": {
                "type": "string",
                "description": "Booking From date"
              },
              "toDate": {
                "t": null,
                "type": "string",
                "description": "Booking To Date"
              }
            }
          },
          "estimateTimeDeparture": {
            "type": "object",
            "properties": {
              "fromDate": {
                "type": "string",
                "description": "Booking To (from date)"
              },
              "toDate": {
                "type": "string",
                "description": "Booking To (to Date)"
              }
            }
          },
          "lastUpdatedOn": {
            "type": "object",
            "properties": {
              "fromDate": {
                "type": "string",
                "description": "Last Updated On (from date)"
              },
              "toDate": {
                "type": "string",
                "description": "Last Updated On (to Date)"
              }
            }
          },
          "referenceNumbers": {
            "description": "This collection contains the reference number details associated with this shipment.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Reference Type."
                },
                "value": {
                  "type": "string",
                  "description": "Reference Value."
                }
              }
            }
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Unique identifier for the Partners in RXO."
          },
          "pageNumber": {
            "type": "string",
            "description": "Allows partner to set which page of the result to consume"
          },
          "pageSize": {
            "type": "string",
            "description": "Allows partner to set how many results are included in a page."
          }
        },
        "required": [
          "partnerIdentifierCode"
        ],
        "example": {
          "searchString": "Charlotte",
          "shipmentNumber": 1,
          "shipmentStatus": "Delivered",
          "estimateTimeArrival": {
            "fromDate": "2021-03-07T00:00:00+00:00",
            "toDate": "2021-03-09T00:00:00+00:00"
          },
          "estimateTimeDeparture": {
            "fromDate": "2021-03-10T00:00:00+00:00",
            "toDate": "2021-03-11T00:00:00+00:00"
          },
          "lastUpdatedOn": {
            "fromDate": "2021-03-08T00:00:00+00:00",
            "toDate": "2021-03-08T00:00:00+00:00"
          },
          "referenceNumbers": [
            {
              "type": "",
              "value": ""
            }
          ],
          "partnerIdentifierCode": "10-1-TESTCHN2",
          "pageNumber": 1,
          "pageSize": 50
        }
      },
      "shipmentSearchResponse": {
        "type": "object",
        "properties": {
          "shipments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "shipmentNumber": {
                  "type": "string",
                  "description": "This field represents the unique shipment number generated from TMS"
                },
                "masterBillNumber": {
                  "type": "string",
                  "description": "master bill number"
                },
                "houseBillNumber": {
                  "type": "string",
                  "description": "house bill number"
                },
                "globalTrackingNumber": {
                  "type": "string",
                  "description": "RXO Global Tracking number"
                },
                "shipmentMode": {
                  "type": "string",
                  "description": "This represents mode of transportation"
                },
                "originSiteName": {
                  "type": "string",
                  "description": "Origin location site "
                },
                "estimatedPickupDate": {
                  "type": "string",
                  "description": "Estimated pickup date"
                },
                "estimatedPickupTime": {
                  "type": "string",
                  "description": "Estimated pickup time"
                },
                "destinationSiteName": {
                  "type": "string",
                  "description": "Destination location site"
                },
                "estimatedDeliveryDate": {
                  "type": "string",
                  "description": "Estimated delivery date"
                },
                "estimatedDeliveryTime": {
                  "type": "string",
                  "description": "Estimated delivery time"
                },
                "shipper": {
                  "type": "string",
                  "description": "Shipper name"
                },
                "consignee": {
                  "type": "string",
                  "description": "Consignee name"
                },
                "milestone": {
                  "type": "string",
                  "description": "Milestone"
                },
                "shipmentStatus": {
                  "type": "string",
                  "description": "Status of shipment"
                }
              }
            },
            "description": "Shipment Information"
          },
          "totalItemCount": {
            "type": "string",
            "description": "total count of shipments"
          },
          "currentPage": {
            "type": "string",
            "description": "current page number"
          },
          "pageSize": {
            "type": "string",
            "description": "count of shipments in a single page"
          },
          "totalPagesCount": {
            "type": "string",
            "description": "Total page available for the filter applied"
          }
        },
        "example": {
          "shipments": [
            {
              "shipmentNumber": 10389921,
              "shipmentMode": "SEA",
              "masterBillNumber": "TESTBOLNOTI0316",
              "houseBillNumber": "TESTNOTI1603",
              "globalTrackingNumber": "RXOTESTNOTI1603",
              "originSiteName": "CNNGB - NINGBO",
              "estimatedPickupDate": "2021-03-16",
              "estimatedPickupTime": "00:00",
              "destinationSiteName": "USMKE - MILWAUKEE",
              "estimatedDeliveryDate": "2021-03-23",
              "estimatedDeliveryTime": "00:53",
              "shipper": "FANTASTIC IDEAS INTERNATIONAL TRADING CO LTD",
              "consignee": "Generic Customer ENTERPRISES",
              "milestone": "Delivered MKE",
              "shipmentStatus": "Delivered"
            }
          ],
          "totalItemCount": 986,
          "currentPage": 1,
          "pageSize": 50,
          "totalPagesCount": 20
        }
      },
      "shipmentDetailsResponse": {
        "type": "object",
        "properties": {
          "shipmentDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "globalTrackingNumber": {
                  "type": "string",
                  "description": "RXO Global Tracking number"
                },
                "shipmentNumber": {
                  "type": "string",
                  "description": "This field represents the unique shipment number generated from TMS"
                },
                "masterBillNumber": {
                  "type": "string",
                  "description": "Master booking number"
                },
                "houseBillNumber": {
                  "type": "string",
                  "description": "House Bill Number"
                },
                "transportMode": {
                  "type": "string",
                  "description": "This represents mode of transportation"
                },
                "estimatedDeparture": {
                  "type": "string",
                  "description": "Estimated departure date"
                },
                "estimatedArrival": {
                  "type": "string",
                  "description": "Estimated arrival date"
                },
                "insuranceValue": {
                  "type": "string",
                  "description": "Insurance Value"
                },
                "insuranceValueCurrency": {
                  "type": "string",
                  "description": "insurance Value Currency"
                },
                "insuranceType": {
                  "type": "string",
                  "description": "Insurance Type"
                },
                "shipmentCost": {
                  "type": "object",
                  "properties": {
                    "costType": {
                      "type": "string",
                      "description": "Cost Type"
                    },
                    "costAmount": {
                      "type": "string",
                      "description": "Cost Amount"
                    },
                    "costCurrency": {
                      "type": "string",
                      "description": "Insurance Currency"
                    },
                    "isAccesorial": {
                      "type": "boolean",
                      "description": "Is Accesorial"
                    }
                  },
                  "description": "Shipment Cost"
                },
                "goodsDescription": {
                  "type": "string",
                  "description": "Description of good transported"
                },
                "serviceLevel": {
                  "type": "string",
                  "description": "Service Level"
                },
                "payCode": {
                  "type": "string",
                  "description": "Pay Code"
                },
                "totalQuantity": {
                  "type": "string",
                  "description": "total qunatity being shipped"
                },
                "totalWeight": {
                  "type": "string",
                  "description": "total weight of goods transported"
                },
                "chargeableWeight": {
                  "type": "string",
                  "description": "Chargeable Weight"
                },
                "weightUom": {
                  "type": "string",
                  "description": "weightUom"
                },
                "origin": {
                  "type": "string",
                  "description": "Origin location name"
                },
                "destination": {
                  "type": "string",
                  "description": "Destination location name"
                },
                "incoTerms": {
                  "type": "string",
                  "description": "Inco Terms"
                },
                "additionalTerms": {
                  "type": "string",
                  "description": "Additional Terms"
                },
                "lastMilestone": {
                  "type": "string",
                  "description": "last milestone"
                },
                "lastMilestoneDate": {
                  "type": "string",
                  "description": "Date for last milestone"
                },
                "importBrokerCode": {
                  "type": "string",
                  "description": "Import Broker Code"
                },
                "importBrokerName": {
                  "type": "string",
                  "description": "Import Broker Name"
                },
                "exportBrokerCode": {
                  "type": "string",
                  "description": "Export Broker Code"
                },
                "exportBrokerName": {
                  "type": "string",
                  "description": "Export Broker Name"
                },
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "locationType": {
                        "type": "string",
                        "description": "",
                        "enum": [
                          "Pickup",
                          "Delivery"
                        ]
                      },
                      "organizationCode": {
                        "type": "string",
                        "description": "Organization Code"
                      },
                      "organizationName": {
                        "type": "string",
                        "description": "Organization Name"
                      },
                      "address1": {
                        "type": "string",
                        "description": "Address line 1"
                      },
                      "address2": {
                        "type": "string",
                        "description": "Address line 2"
                      },
                      "city": {
                        "type": "string",
                        "description": "City"
                      },
                      "stateProvince": {
                        "type": "string",
                        "description": "State"
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "Postal code"
                      },
                      "countryCode": {
                        "type": "string",
                        "description": "Country code"
                      },
                      "countryName": {
                        "type": "string",
                        "description": "Country Name"
                      },
                      "reference": {
                        "type": "string",
                        "description": "Reference"
                      },
                      "instructions": {
                        "type": "string",
                        "description": "Instructions"
                      }
                    }
                  },
                  "description": "Location Details"
                },
                "pickupDetails": {
                  "type": "object",
                  "properties": {
                    "shippersReference": {
                      "type": "string",
                      "description": "Reference of shipper"
                    },
                    "instructions": {
                      "type": "string",
                      "description": "Instruction for pickup"
                    },
                    "estimatedPickup": {
                      "type": "string",
                      "description": "Estimated date/time for Pickup"
                    },
                    "actualPickup": {
                      "type": "string",
                      "description": "Actual pickup date/time"
                    },
                    "readyTime": {
                      "type": "string",
                      "description": "Ready Time"
                    },
                    "closeTime": {
                      "type": "string",
                      "description": "Close Time"
                    },
                    "requestedBy": {
                      "type": "string",
                      "description": "Requested By"
                    }
                  },
                  "description": "Details of pickup"
                },
                "deliveryDetails": {
                  "type": "object",
                  "properties": {
                    "consigneeReference": {
                      "type": "string",
                      "description": "Reference of consignee"
                    },
                    "instructions": {
                      "type": "string",
                      "description": "Instruction for delivery"
                    },
                    "estimatedDelivery": {
                      "type": "string",
                      "description": "Estimated delivery date/time"
                    },
                    "actualDelivery": {
                      "type": "string",
                      "description": "Actual delivery date/time"
                    },
                    "requestedBy": {
                      "type": "string",
                      "description": "Requested By"
                    }
                  },
                  "description": "Details of delivery"
                },
                "notes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value"
                      }
                    }
                  },
                  "description": "Notes"
                },
                "orders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderNumber": {
                        "type": "string",
                        "description": "Order Number"
                      },
                      "clientReference": {
                        "type": "string",
                        "description": "Client reference number for order"
                      },
                      "orderLines": {
                        "type": "object",
                        "properties": {},
                        "description": "Details of line items in order"
                      },
                      "references": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value"
                          }
                        },
                        "description": "References in shipment level"
                      }
                    }
                  },
                  "description": "Order Details"
                },
                "packingLineDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productNumber": {
                        "type": "string",
                        "description": "Product Number"
                      },
                      "packageQuantity": {
                        "type": "string",
                        "description": "Package Quantity"
                      },
                      "packageUOM": {
                        "type": "string",
                        "description": "PackageUOM"
                      },
                      "height": {
                        "type": "string",
                        "description": "Height"
                      },
                      "length": {
                        "type": "string",
                        "description": "Length"
                      },
                      "width": {
                        "type": "string",
                        "description": "Width"
                      },
                      "hlwUom": {
                        "type": "string",
                        "description": "hlwUom"
                      },
                      "weight": {
                        "type": "string",
                        "description": "Weight"
                      },
                      "wightUom": {
                        "type": "string",
                        "description": "wightUom"
                      },
                      "volume": {
                        "type": "string",
                        "description": "Volume"
                      },
                      "volumeUom": {
                        "type": "string",
                        "description": "volumeUom"
                      },
                      "poNumber": {
                        "type": "string",
                        "description": "poNumber"
                      },
                      "containerLinkNum": {
                        "type": "string",
                        "description": "Container Link Number"
                      },
                      "containerNumber": {
                        "type": "string",
                        "description": "Container Number"
                      },
                      "references": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Code"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value"
                            }
                          }
                        },
                        "description": "References"
                      }
                    }
                  },
                  "description": "Details of packaging line items"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "itemCode": {
                        "type": "string",
                        "description": "Item Code"
                      },
                      "description": {
                        "type": "string",
                        "description": "Item Description"
                      },
                      "quantity": {
                        "type": "string",
                        "description": "Quantity"
                      },
                      "quanityUom": {
                        "type": "string",
                        "description": "quanityUom"
                      },
                      "length": {
                        "type": "string",
                        "description": "Length"
                      },
                      "width": {
                        "type": "string",
                        "description": "Width"
                      },
                      "height": {
                        "type": "string",
                        "description": "Height"
                      },
                      "hlwUom": {
                        "type": "string",
                        "description": "hlwUom"
                      },
                      "isHaz": {
                        "type": "string",
                        "description": "Is Hazmat"
                      },
                      "properShippingName": {
                        "type": "string",
                        "description": "Proper Shipping Name"
                      },
                      "hazWeight": {
                        "type": "string",
                        "description": "Hazmat Weight"
                      },
                      "hazWeightUomCode": {
                        "type": "string",
                        "description": "Hazmat Weight UOM"
                      },
                      "hazWeightDescription": {
                        "type": "string",
                        "description": "Hazmat Weight Description"
                      },
                      "commodityCode": {
                        "type": "string",
                        "description": "Commodity Code"
                      },
                      "serialNumber": {
                        "type": "string",
                        "description": "Serial Number"
                      },
                      "containerNumber": {
                        "type": "string",
                        "description": "containerNumber"
                      },
                      "packagingDetails": {
                        "type": "object",
                        "properties": {},
                        "description": "Packaging Details"
                      },
                      "packingLineReferenceNumbers": {
                        "type": "object",
                        "properties": {},
                        "description": "Packing Line Reference Numbers"
                      }
                    }
                  },
                  "description": "Items details"
                },
                "containers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "linkNum": {
                        "type": "string",
                        "description": "Link Number"
                      },
                      "containerNumber": {
                        "type": "string",
                        "description": "Unique identifier for container"
                      },
                      "sealNumber": {
                        "type": "string",
                        "description": "Seal Number"
                      },
                      "sealNumbers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "goodsWeight": {
                        "type": "string",
                        "description": "Goods Weight"
                      },
                      "grossWeight": {
                        "type": "string",
                        "description": "Gross Weight"
                      },
                      "tareWeight": {
                        "type": "string",
                        "description": "Tare Weight"
                      },
                      "grossWeightUom": {
                        "type": "string",
                        "description": "grossWeightUom"
                      },
                      "estimatedPickUp": {
                        "type": "string",
                        "description": "Estimated Pick Up Date/Time"
                      },
                      "actualPickUp": {
                        "type": "string",
                        "description": "Actual Pick Up Date/Time"
                      },
                      "wharfGateOut": {
                        "type": "string",
                        "description": "wharfGateOut Date/Time"
                      },
                      "estimatedFullDelivery": {
                        "type": "string",
                        "description": "Estimated Full Delivery Date/Time"
                      },
                      "actualFullDelivery": {
                        "type": "string",
                        "description": "Actual Full Delivery Date/Time"
                      },
                      "emptyReturnReqBy": {
                        "type": "string",
                        "description": "Empty Return Request By"
                      },
                      "emptyReturnedOn": {
                        "type": "string",
                        "description": "empty Returned On"
                      },
                      "export": {
                        "type": "object",
                        "properties": {
                          "emptyRequiredBy": {
                            "type": "string",
                            "description": "Empty Required By"
                          },
                          "emptyReleasedFromCY": {
                            "type": "string",
                            "description": "Empty Released From CY"
                          },
                          "estimatedPickup": {
                            "type": "string",
                            "description": "Estimated pickup date/time"
                          },
                          "actualPickup": {
                            "type": "string",
                            "description": "Actual pick up date/time for container"
                          },
                          "fCLGateIn": {
                            "type": "string",
                            "description": "This field represents when did the container gate in at the port"
                          },
                          "fCLVesselLoaded": {
                            "type": "string",
                            "description": "This field represents when did the vessel get loaded"
                          }
                        },
                        "description": "Container information at origin side"
                      },
                      "import": {
                        "type": "object",
                        "properties": {
                          "fCLUnload": {
                            "type": "string",
                            "description": "when did the container physically unloaded from vessel"
                          },
                          "gateOut": {
                            "type": "string",
                            "description": "when did the container leave the gate"
                          },
                          "estimatedFullDelivery": {
                            "type": "string",
                            "description": "End customer estimated date/time for full delivery"
                          },
                          "actualFullDelivery": {
                            "type": "string",
                            "description": "End customer actual date/time for full delivery"
                          },
                          "emptyReturnReqBy": {
                            "type": "string",
                            "description": "Empty Return Requested By"
                          },
                          "emptyReturnOn": {
                            "type": "string",
                            "description": "Empty Return On"
                          }
                        },
                        "description": "Container information at destination side"
                      },
                      "containerType": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description"
                          },
                          "ISOCode": {
                            "type": "string",
                            "description": "ISOCode"
                          }
                        },
                        "description": "Container Type"
                      },
                      "reference": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value"
                          }
                        },
                        "description": "Reference"
                      }
                    }
                  },
                  "description": "Containers Details"
                },
                "transportLegs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "legOrder": {
                        "type": "string",
                        "description": "order in which legs are executed"
                      },
                      "mode": {
                        "type": "string",
                        "description": "Mode of transport"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type"
                      },
                      "vessel": {
                        "type": "string",
                        "description": "Vessel number"
                      },
                      "voyageFlightNum": {
                        "type": "string",
                        "description": "Voyage Flight Number"
                      },
                      "portOfLoading": {
                        "type": "string",
                        "description": "Port of landing"
                      },
                      "portOfLoadingName": {
                        "type": "string",
                        "description": "Name of port of landing"
                      },
                      "portOfDischarge": {
                        "type": "string",
                        "description": "Name of port of Discharge"
                      },
                      "portOfDischargeName": {
                        "type": "string",
                        "description": "Name of port of discharge"
                      },
                      "estimatedTimeOfArrival": {
                        "type": "string",
                        "description": "Estimated Time Of Arrival Date/Time"
                      },
                      "estimatedTimeOfDeparture": {
                        "type": "string",
                        "description": "Estimated Time Of Departure Date/Time"
                      },
                      "actualTimeOfArrival": {
                        "type": "string",
                        "description": "Actual Time Of Arrival Date/Time"
                      },
                      "actualTimeOfDeparture": {
                        "type": "string",
                        "description": "Actual Time Of Departure Date/Time"
                      },
                      "carrier": {
                        "type": "object",
                        "properties": {
                          "carrierCode": {
                            "type": "string",
                            "description": "Carrier Code"
                          },
                          "carrierName": {
                            "type": "string",
                            "description": "Carrier Name"
                          },
                          "carrierSCAC": {
                            "type": "string",
                            "description": "Carrier SCAC"
                          },
                          "reference": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "Code"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value"
                                }
                              }
                            },
                            "description": "Transport leg references"
                          }
                        },
                        "description": "Carriers for the Legs"
                      }
                    }
                  },
                  "description": "Transport information of shipment"
                },
                "shipmentReferences": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value"
                      }
                    }
                  },
                  "description": "Shipment References"
                },
                "shipUnits": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "shipmentHandlingUnitQuantity": {
                        "type": "string",
                        "description": "Shipment Handling Unit Quantity"
                      },
                      "shipmentHandlingUnitType": {
                        "type": "string",
                        "description": "Shipment Handling Unit Type"
                      },
                      "handlingUnitWeight": {
                        "type": "string",
                        "description": "Shipment Handling Unit Weight"
                      },
                      "handlingUnitUom": {
                        "type": "string",
                        "description": "Shipment Handling Unit UOM"
                      },
                      "handlingUnitVolume": {
                        "type": "string",
                        "description": "Shipment Handling Unit Volume"
                      },
                      "handlingUnitVolumeUom": {
                        "type": "string",
                        "description": "Shipment Handling Unit Volume UOM"
                      },
                      "shipUnitLines": {
                        "type": "object",
                        "properties": {
                          "itemCode ": {
                            "type": "string",
                            "description": "Ship Unit Line"
                          },
                          "nfmc": {
                            "type": "string",
                            "description": "NMFC Class"
                          },
                          "description": {
                            "type": "string",
                            "description": "Item Description"
                          },
                          "quantity": {
                            "type": "string",
                            "description": "Item Quantity"
                          },
                          "length": {
                            "type": "string",
                            "description": "Item Length"
                          },
                          "width": {
                            "type": "string",
                            "description": "Item Width"
                          },
                          "height": {
                            "type": "string",
                            "description": "Item Height"
                          },
                          "hlwUom": {
                            "type": "string",
                            "description": "Height/Length/Width UOM"
                          },
                          "commodityCode": {
                            "type": "string",
                            "description": "Commidty Code"
                          },
                          "serialNumber": {
                            "type": "string",
                            "description": "Serial Number"
                          },
                          "frttClass": {
                            "type": "string",
                            "description": "Frt Class"
                          },
                          "isHaz": {
                            "type": "string",
                            "description": "Is Hazmat"
                          },
                          "properShippingName": {
                            "type": "string",
                            "description": "Proper Shipping Name"
                          },
                          "unNumber": {
                            "type": "string",
                            "description": "UN Number"
                          },
                          "dotLetter": {
                            "type": "string",
                            "description": "DOT Letter"
                          },
                          "hazClass": {
                            "type": "string",
                            "description": "Hazardous Class"
                          },
                          "hazUomCode": {
                            "type": "string",
                            "description": "Hazmat UOM"
                          },
                          "ergNumber": {
                            "type": "string",
                            "description": "ERG Number"
                          },
                          "containerLinkNum": {
                            "type": "string",
                            "description": "Container Link Num"
                          },
                          "containerNum": {
                            "type": "string",
                            "description": "Container Num"
                          },
                          "references": {
                            "type": "string",
                            "description": ""
                          },
                          "packageDetails": {
                            "type": "string",
                            "description": "Height/Length/Width UOM"
                          },
                          "itemReferences": {
                            "type": "string",
                            "description": "Item References"
                          },
                          "hazWeight": {
                            "type": "string",
                            "description": "Haz Weight"
                          },
                          "uomCode": {
                            "type": "string",
                            "description": "UOM Code"
                          },
                          "hazWeightDescription": {
                            "type": "string",
                            "description": "Haz Weight Description"
                          },
                          "itemReferenceNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "itemCode ": {
                                  "type": "string",
                                  "description": "Ship Unit Line"
                                },
                                "nfmc": {
                                  "type": "string",
                                  "description": "NMFC Class"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Item Description"
                                },
                                "quantity": {
                                  "type": "string",
                                  "description": "Item Quantity"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Ship Units"
                }
              },
              "description": "Shipment Information"
            }
          }
        },
        "required": [
          "shipmentNumber"
        ],
        "example": {
          "shipmentDetails": [
            {
              "globalTrackingNumber": "",
              "shipmentNumber": "S21CXXXXXX",
              "masterBillNumber": "MAER32XXXXXX",
              "houseBillNumber": "XBJ21XXXXXX",
              "transportMode": "SEA",
              "estimatedDeparture": "2021-03-08T00:00:00+00:00",
              "estimatedArrival": "2021-04-08T10:20:00+00:00",
              "insuranceValue": "",
              "insuranceValueCurrency": "",
              "insuranceType": "",
              "shipmentCost": [
                {
                  "costType": "Line Haul",
                  "costAmount": "500.0000",
                  "costCurrency": "USD",
                  "isAccessorial": false
                },
                {
                  "costType": "Line Haul",
                  "costAmount": "500.0000",
                  "costCurrency": "USD",
                  "isAccessorial": false
                }
              ],
              "goodsDescription": "good desc example",
              "serviceLevel": "STD",
              "payCode": "",
              "totalQuantity": 232,
              "totalWeight": 8468.0000,
              "weightUom": "KG",
              "origin": "",
              "destination": "",
              "incoTerms": "EXW",
              "additionalTerms": "add trem ex",
              "lastMilestone": "Booking Confirmed",
              "lastMilestoneDate": "2021-04-11T01:09:07.39+00:00",
              "importBrokerCode": "",
              "importBrokerName": "",
              "exportBrokerCode": "",
              "exportBrokerName": "",
              "locations": [
                {
                  "locationType": "Shipper",
                  "organizationCode": "Shipper",
                  "organizationName": "NANTONG FUHUANG ",
                  "address1": "NO. 508 NAMHAI EAST RD",
                  "address2": "ATTN: MISS CHEN",
                  "city": "HAIMEN JIANGSU ",
                  "stateProvince": "32",
                  "postalCode": "223XXX",
                  "countryCode": "CN",
                  "countryName": "CN",
                  "reference": "",
                  "instructions": ""
                },
                {
                  "locationType": "Consignee",
                  "organizationCode": "Consignee",
                  "organizationName": "XYZ Group Inc",
                  "address1": "77 E 12th St",
                  "address2": "",
                  "city": "New York",
                  "stateProvince": "NY",
                  "postalCode": "100XX",
                  "countryCode": "US",
                  "countryName": "US",
                  "reference": "",
                  "instructions": ""
                }
              ],
              "pickupDetails": {
                "shippersReference": "",
                "instructions": "",
                "estimatedPickup": "2021-03-11T04:06:00+00:00",
                "actualPickup": "2021-03-12T00:40:00+00:00",
                "readyTime": "2021-03-11T04:06:00+00:00",
                "closeTime": "",
                "requestedBy": ""
              },
              "deliveryDetails": {
                "consigneeReference": "",
                "instructions": "",
                "estimatedDelivery": "2021-04-08T10:20:00+00:00",
                "actualDelivery": "2021-04-09T09:14:00+00:00",
                "requestedBy": ""
              },
              "notes": [
                {
                  "type": "Marks & Numbers",
                  "value": "mark ex"
                },
                {
                  "type": "Special Instructions",
                  "value": "Special instructions example"
                }
              ],
              "orders": [],
              "packingLineDetails": [
                {
                  "productNumber": "2",
                  "packageQuantity": 200,
                  "packageUOM": "CTN",
                  "height": 3.0000,
                  "length": 2.0000,
                  "width": 1.0000,
                  "hlwUom": "M",
                  "weight": 8000.0000,
                  "wightUom": "KG",
                  "volume": 1200.0000,
                  "volumeUom": "M3",
                  "poNumber": "",
                  "containerLinkNum": "KASA031XXXX",
                  "containerNumber": "KASA031XXXX",
                  "references": [
                    {
                      "code": "Item Number",
                      "value": "ITEMNUM1"
                    },
                    {
                      "code": "PO Number",
                      "value": "PO 23y67"
                    },
                    {
                      "code": "Inner Qty",
                      "value": "100.000"
                    },
                    {
                      "code": "Inner Qty UOM",
                      "value": "PCS"
                    }
                  ]
                },
                {
                  "productNumber": "2",
                  "packageQuantity": 32,
                  "packageUOM": "CTN",
                  "height": 6.0000,
                  "length": 5.0000,
                  "width": 4.0000,
                  "hlwUom": "IN",
                  "weight": 468.0000,
                  "wightUom": "KG",
                  "volume": 0.0630,
                  "volumeUom": "M3",
                  "poNumber": "",
                  "containerLinkNum": "SBVD927XXXX",
                  "containerNumber": "SBVD927XXXX",
                  "references": [
                    {
                      "code": "Item Number",
                      "value": "ITEMXXXX"
                    },
                    {
                      "code": "PO Number",
                      "value": "PO y8g74"
                    },
                    {
                      "code": "Inner Qty",
                      "value": "115.000"
                    },
                    {
                      "code": "Inner Qty UOM",
                      "value": "PCS"
                    }
                  ]
                }
              ],
              "items": [
                {
                  "itemCode": "2",
                  "description": "good desc example",
                  "quantity": 200,
                  "quanityUom": "CTN",
                  "length": 2.0000,
                  "width": 1.0000,
                  "height": 3.0000,
                  "hlwUom": "M",
                  "commodityCode": "GEN",
                  "serialNumber": 1,
                  "containerNumber": "KASA031XXXX",
                  "packagingDetails": {},
                  "packingLineReferenceNumbers": {}
                },
                {
                  "itemCode": "2",
                  "description": "good desc example",
                  "quantity": 32,
                  "quanityUom": "CTN",
                  "length": 5.0000,
                  "width": 4.0000,
                  "height": 6.0000,
                  "hlwUom": "IN",
                  "commodityCode": "GEN",
                  "serialNumber": 2,
                  "containerNumber": "SBVD9XXXXXX",
                  "packagingDetails": {},
                  "packingLineReferenceNumbers": {}
                }
              ],
              "containers": [
                {
                  "sealNumbers": [],
                  "linkNum": "",
                  "containerNumber": "KASA0XXXXXX",
                  "sealNumber": "2840000",
                  "goodsWeight": 28411.6570,
                  "grossWeight": 28411.6570,
                  "tareWeight": 20411.6570,
                  "grossWeightUom": "KG",
                  "estimatedPickUp": "2021-03-10T23:06:00-05:00",
                  "actualPickUp": "2021-03-11T19:40:00-05:00",
                  "wharfGateOut": "2021-03-30T20:00:00-04:00",
                  "estimatedFullDelivery": "2021-04-08T06:20:00-04:00",
                  "actualFullDelivery": "2021-04-09T05:14:00-04:00",
                  "emptyReturnReqBy": "2021-03-06T19:00:00-05:00",
                  "emptyReturnedOn": "2021-03-28T20:00:00-04:00",
                  "containerType": {
                    "code": "40STD",
                    "description": "KASA0XXXXXX"
                  }
                },
                {
                  "sealNumbers": [],
                  "containerNumber": "SBVD9XXXXXX",
                  "sealNumber": "08537",
                  "goodsWeight": 468.0000,
                  "grossWeight": 468.0000,
                  "tareWeight": 0.0000,
                  "grossWeightUom": "KG",
                  "estimatedPickUp": "2021-03-10T19:00:00-05:00",
                  "actualPickUp": "2021-03-11T19:00:00-05:00",
                  "wharfGateOut": "2021-03-29T20:00:00-04:00",
                  "estimatedFullDelivery": "2021-04-06T20:00:00-04:00",
                  "actualFullDelivery": "2021-04-09T05:14:00-04:00",
                  "emptyReturnReqBy": "2021-03-06T19:00:00-05:00",
                  "emptyReturnedOn": "2021-03-28T20:00:00-04:00",
                  "export": {
                    "emptyRequiredBy": "",
                    "emptyReleasedFromCY": "",
                    "estimatedPickup": "",
                    "actualPickup": "",
                    "fCLGateIn": "",
                    "fCLVesselLoaded": ""
                  },
                  "import": {
                    "FCLUnload": "",
                    "GateOut": "",
                    "EstimatedFullDelivery": "",
                    "ActualFullDelivery": "",
                    "EmptyReturnReqBy": "",
                    "EmptyReturnOn": ""
                  },
                  "containerType": {
                    "code": "20GP",
                    "description": "SBVD9XXXXXX",
                    "ISOCode": ""
                  },
                  "reference": {
                    "code": "20GP",
                    "value": ""
                  }
                }
              ],
              "transportLegs": [
                {
                  "legOrder": 0,
                  "mode": "",
                  "type": "",
                  "vessel": "",
                  "voyageFlightNum": "",
                  "portOfLoading": "CNSHA",
                  "portOfLoadingName": "Shanghai Hongqiao International Apt",
                  "portOfDischarge": "CNLYG",
                  "portOfDischargeName": "NANTONG FUHUANG FURNITURE",
                  "estimatedTimeOfArrival": "",
                  "estimatedTimeOfDeparture": "2021-03-11T04:06:00+00:00",
                  "actualTimeOfArrival": "",
                  "actualTimeOfDeparture": "2021-03-12T00:40:00+00:00",
                  "carrier": {
                    "references": [
                      {
                        "code": "LT",
                        "value": "Main"
                      }
                    ]
                  },
                  "references": {
                    "code": "",
                    "value": ""
                  }
                },
                {
                  "legOrder": 252,
                  "mode": "",
                  "portOfLoading": "USNYC",
                  "portOfLoadingName": "Mohawk Group Inc",
                  "portOfDischarge": "USNYC",
                  "portOfDischargeName": "New York",
                  "estimatedTimeOfArrival": "2021-04-08T10:20:00+00:00",
                  "actualTimeOfArrival": "2021-04-09T09:14:00+00:00",
                  "carrier": {
                    "references": [
                      {
                        "code": "LT",
                        "value": "Main"
                      }
                    ]
                  },
                  "references": {
                    "code": "",
                    "value": ""
                  }
                },
                {
                  "legOrder": 1,
                  "mode": "Sea",
                  "vessel": "EMPRESS DRAGON",
                  "voyageFlightNum": "324565",
                  "portOfLoading": "USNYC",
                  "portOfLoadingName": "New York",
                  "portOfDischarge": "CNSHA",
                  "portOfDischargeName": "Shanghai Hongqiao International Apt",
                  "estimatedTimeOfArrival": "2021-04-07T03:14:00+00:00",
                  "estimatedTimeOfDeparture": "2021-03-08T02:07:00+00:00",
                  "carrier": {
                    "carrierCode": "MAERSK_YY",
                    "carrierName": "MAERSK",
                    "carrierSCAC": "MAEU",
                    "references": [
                      {
                        "code": "LT",
                        "value": "Main"
                      }
                    ]
                  },
                  "references": {
                    "code": "",
                    "value": ""
                  }
                }
              ],
              "shipmentReferences": [
                {
                  "code": "Ex Works",
                  "value": "EXW"
                },
                {
                  "code": "Standard",
                  "value": "STD"
                },
                {
                  "code": "Original Bill Required at Destination",
                  "value": "OBR"
                },
                {
                  "code": "Full Container Load",
                  "value": "FCL"
                },
                {
                  "code": "Shipment ID #",
                  "value": "S21CXXXXXX"
                },
                {
                  "code": "Shipment Status",
                  "value": "BOOKED"
                },
                {
                  "code": "Cargo Ready Date",
                  "value": "2021-03-04T00:00:00"
                },
                {
                  "code": "Actual SO Release Date",
                  "value": "2021-03-06T00:00:00"
                },
                {
                  "code": "SI Cut Off",
                  "value": "2021-03-05T00:00:00"
                },
                {
                  "code": "Controlling Office/Agent",
                  "value": "DEST"
                },
                {
                  "code": "Entry Details",
                  "value": "ENSXXXXX"
                },
                {
                  "code": "Shipment Status",
                  "value": "Booking Confirmed"
                }
              ],
              "shipUnits": [
                {
                  "shipmentHandlingUnitQuantity": "4",
                  "shipmentHandlingUnitType": "OTM/A055.SKID",
                  "handlingUnitWeight": 1000,
                  "handlingUnitWeightUom": "LB",
                  "handlingUnitVolume": 148.1481,
                  "handlingUnitVolumeUom": "CUFT",
                  "shipUnitLines": [
                    {
                      "itemCode": "CLASS_60",
                      "description": "GENERIC ITEM",
                      "quantity": 100,
                      "quanityUom": "SKID",
                      "length": 39.999,
                      "width": 39.999,
                      "height": 39.999,
                      "hlwUom": "IN",
                      "commodityCode": null,
                      "serialNumber": 1,
                      "frtClass": null,
                      "isHaz": false,
                      "properShippingName": null,
                      "hazClass": null,
                      "hazWeight": null,
                      "hazUomCode": null,
                      "hazWeightDescription": null,
                      "nmfc": "60.0",
                      "unNumber": null,
                      "containerLinkNum": null,
                      "containerNumber": null,
                      "references": null,
                      "packageDetails": null,
                      "itemReferenceNumbers": []
                    }
                  ]
                },
                {
                  "shipmentHandlingUnitQuantity": "4",
                  "shipmentHandlingUnitType": "OTM/A055.SKID",
                  "handlingUnitWeight": 1000,
                  "handlingUnitWeightUom": "LB",
                  "handlingUnitVolume": 148.1481,
                  "handlingUnitVolumeUom": "CUFT",
                  "shipUnitLines": [
                    {
                      "itemCode": "CLASS_60",
                      "description": "GENERIC ITEM",
                      "quantity": 100,
                      "quanityUom": "SKID",
                      "length": 39.999,
                      "width": 39.999,
                      "height": 39.999,
                      "hlwUom": "IN",
                      "commodityCode": null,
                      "serialNumber": 1,
                      "frtClass": null,
                      "isHaz": false,
                      "properShippingName": null,
                      "hazClass": null,
                      "hazWeight": null,
                      "hazUomCode": null,
                      "hazWeightDescription": null,
                      "nmfc": "60.0",
                      "unNumber": null,
                      "containerLinkNum": null,
                      "containerNumber": null,
                      "references": null,
                      "packageDetails": null,
                      "itemReferenceNumbers": []
                    }
                  ]
                },
                {
                  "shipmentHandlingUnitQuantity": "4",
                  "shipmentHandlingUnitType": "OTM/A055.SKID",
                  "handlingUnitWeight": 1000,
                  "handlingUnitWeightUom": "LB",
                  "handlingUnitVolume": 148.1481,
                  "handlingUnitVolumeUom": "CUFT",
                  "shipUnitLines": [
                    {
                      "itemCode": "CLASS_60",
                      "description": "GENERIC ITEM",
                      "quantity": 100,
                      "quanityUom": "SKID",
                      "length": 39.999,
                      "width": 39.999,
                      "height": 39.999,
                      "hlwUom": "IN",
                      "commodityCode": null,
                      "serialNumber": 1,
                      "frtClass": null,
                      "isHaz": false,
                      "properShippingName": null,
                      "hazClass": null,
                      "hazWeight": null,
                      "hazUomCode": null,
                      "hazWeightDescription": null,
                      "nmfc": "60.0",
                      "unNumber": null,
                      "containerLinkNum": null,
                      "containerNumber": null,
                      "references": null,
                      "packageDetails": null,
                      "itemReferenceNumbers": []
                    }
                  ]
                },
                {
                  "shipmentHandlingUnitQuantity": "4",
                  "shipmentHandlingUnitType": "OTM/A055.SKID",
                  "handlingUnitWeight": 1000,
                  "handlingUnitWeightUom": "LB",
                  "handlingUnitVolume": 148.1481,
                  "handlingUnitVolumeUom": "CUFT",
                  "shipUnitLines": [
                    {
                      "itemCode": "CLASS_60",
                      "description": "GENERIC ITEM",
                      "quantity": 100,
                      "quanityUom": "SKID",
                      "length": 39.999,
                      "width": 39.999,
                      "height": 39.999,
                      "hlwUom": "IN",
                      "commodityCode": null,
                      "serialNumber": 1,
                      "frtClass": null,
                      "isHaz": false,
                      "properShippingName": null,
                      "hazClass": null,
                      "hazWeight": null,
                      "hazUomCode": null,
                      "hazWeightDescription": null,
                      "nmfc": "60.0",
                      "unNumber": null,
                      "containerLinkNum": null,
                      "containerNumber": null,
                      "references": null,
                      "packageDetails": null,
                      "itemReferenceNumbers": []
                    }
                  ]
                },
                {
                  "shipmentHandlingUnitQuantity": "4",
                  "shipmentHandlingUnitType": "OTM/A055.SKID",
                  "handlingUnitWeight": 1000,
                  "handlingUnitWeightUom": "LB",
                  "handlingUnitVolume": 148.1481,
                  "handlingUnitVolumeUom": "CUFT",
                  "shipUnitLines": [
                    {
                      "itemCode": "CLASS_60",
                      "description": "GENERIC ITEM",
                      "quantity": 100,
                      "quanityUom": "SKID",
                      "length": 39.999,
                      "width": 39.999,
                      "height": 39.999,
                      "hlwUom": "IN",
                      "commodityCode": null,
                      "serialNumber": 1,
                      "frtClass": null,
                      "isHaz": false,
                      "properShippingName": null,
                      "hazClass": null,
                      "hazWeight": null,
                      "hazUomCode": null,
                      "hazWeightDescription": null,
                      "nmfc": "60.0",
                      "unNumber": null,
                      "containerLinkNum": null,
                      "containerNumber": null,
                      "references": null,
                      "packageDetails": null,
                      "itemReferenceNumbers": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "shipmentBookingRequest": {
        "type": "object",
        "properties": {
          "masterBillNumber": {
            "type": "string",
            "description": "Carriers unique tracking number for entire booking."
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Partner identifier code used to uniquely identify the partner."
          },
          "shipment": {
            "description": "This object holds the data of shipments under master bill number.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "houseBillNumber": {
                  "type": "string",
                  "description": "Required if request contains more than one shipment object."
                },
                "transportMode": {
                  "type": "string",
                  "description": "Mode of Transportation such as TL, LTL, Air, Ocean etc."
                },
                "goodsDescription": {
                  "type": "string",
                  "description": "Description of goods."
                },
                "totalQuantity": {
                  "type": "int",
                  "description": "Total quantity being shipped."
                },
                "quantityUomCode": {
                  "type": "string",
                  "description": "Unit of measurement for quantity."
                },
                "totalWeight": {
                  "type": "int",
                  "description": "Total weight of goods transported."
                },
                "chargeableWeight": {
                  "type": "int",
                  "description": "Total chargeable weight of goods transported."
                },
                "weightUomCode": {
                  "type": "string",
                  "description": "Unit of measurement for weight."
                },
                "originCode": {
                  "type": "string",
                  "description": "UNLOC Code of origin."
                },
                "originETD": {
                  "type": "string",
                  "description": "Main carrier first port estimated item of delivery."
                },
                "destinationCode": {
                  "type": "string",
                  "description": "UNLOC Code of destination."
                },
                "destinationETA": {
                  "type": "string",
                  "description": "Main carrier first port estimated time of arrival."
                },
                "incoTermsCode": {
                  "type": "string",
                  "description": ""
                },
                "additionalTerms": {
                  "type": "string",
                  "description": ""
                },
                "location": {
                  "description": "This holds the array of locations for this shipment including pickup  and destination location.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "locationType": {
                        "type": "string",
                        "description": "Type of location, such as Pickup or Delivery."
                      },
                      "locationCode": {
                        "type": "string",
                        "description": "Unique id to identify this location."
                      },
                      "locationName": {
                        "type": "string",
                        "description": "Name of the location."
                      },
                      "addressLine1": {
                        "type": "string",
                        "description": "The address line 1 of the stop location."
                      },
                      "addressLine2": {
                        "type": "string",
                        "description": "The address line 2 of the stop location."
                      },
                      "RXO's Shipment API allows partner to retrieve shipment data.": null,
                      "cityName": {
                        "type": "string",
                        "description": "The city to which the stop belongs."
                      },
                      "stateCode": {
                        "type": "string",
                        "description": "State code."
                      },
                      "zipCode": {
                        "type": "string",
                        "description": "Postal code."
                      },
                      "countryCode": {
                        "type": "string",
                        "description": "The country code to which the stop belongs."
                      },
                      "countryName": {
                        "type": "string",
                        "description": "The country to which the stop belongs."
                      },
                      "instructions": {
                        "type": "string",
                        "description": "instructions."
                      },
                      "locationReferenceNumbers": {
                        "type": "array",
                        "description": "This object holds the collection of reference numbers associated with this stop.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Location Reference Type code."
                            },
                            "value": {
                              "type": "string",
                              "description": "Actual value of location reference code."
                            }
                          }
                        }
                      },
                      "dates": {
                        "type": "array",
                        "description": "",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": ""
                            },
                            "value": {
                              "type": "string",
                              "description": ""
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "locationType"
                    ]
                  }
                },
                "notes": {
                  "description": "Notes associated with a shipment stored in this object.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of notes."
                      },
                      "value": {
                        "type": "string",
                        "description": "This indicates the value for the note."
                      }
                    }
                  }
                },
                "packingLineDetails": {
                  "description": "This object hold the item details of that shipment..",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productNumber": {
                        "type": "string",
                        "description": "Product code of the item."
                      },
                      "itemNumber": {
                        "type": "string",
                        "description": "Item number."
                      },
                      "packageQuantity": {
                        "type": "string",
                        "description": "Number of packages."
                      },
                      "packageTypeCode": {
                        "type": "string",
                        "description": "Type of packages."
                      },
                      "packageDescription": {
                        "type": "string",
                        "description": "Package Description."
                      },
                      "height": {
                        "type": "string",
                        "description": "Height of package."
                      },
                      "length": {
                        "type": "string",
                        "description": "Length of the package."
                      },
                      "width": {
                        "type": "string",
                        "description": "Width of package."
                      },
                      "hlwUomCode": {
                        "type": "string",
                        "description": "Unit of measure for height/ width/length."
                      },
                      "weight": {
                        "type": "string",
                        "description": "Weight of the package."
                      },
                      "weightUomCode": {
                        "type": "string",
                        "description": "Weight - unit of measure."
                      },
                      "volume": {
                        "type": "string",
                        "description": "volume of package."
                      },
                      "volumeUomCode": {
                        "type": "string",
                        "description": "Volume - unit of measure."
                      },
                      "nmfc": {
                        "type": "string",
                        "description": "NMFC"
                      },
                      "unNumber": {
                        "type": "string",
                        "description": "UNNumber"
                      },
                      "containerNumber": {
                        "type": "string",
                        "description": "Indicates which container the goods are packed into."
                      },
                      "packingLineReferenceNumbers": {
                        "description": "This object holds the collection of reference numbers associated with this items.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Custom reference code."
                            },
                            "value": {
                              "type": "string",
                              "description": "Actual value of reference code."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "container": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "containerNumber": {
                        "type": "string",
                        "description": "Unique identifier for container."
                      },
                      "sealNumber": {
                        "type": "string",
                        "description": "Seal Number"
                      },
                      "goodsWeight": {
                        "type": "string",
                        "description": "weight of goods in container."
                      },
                      "grossWeight": {
                        "type": "string",
                        "description": "gross weight of the container."
                      },
                      "tareWeight": {
                        "type": "string",
                        "description": "TareWeight."
                      },
                      "weightUomCode": {
                        "type": "string",
                        "description": "weight-  unit of measure."
                      },
                      "export": {
                        "type": "object",
                        "description": "Container information at origin side.",
                        "properties": {
                          "emptyRequiredBy": {
                            "type": "Date/Time",
                            "description": "Date customer needs an empty container to be delivered for them to load."
                          },
                          "emptyReleasedFromCY": {
                            "type": "Date/Time",
                            "description": "Actual date when carrier released empty container from port."
                          },
                          "estimatedPickup": {
                            "type": "Date/Time",
                            "description": "Estimated date when carrier can pickup full container."
                          },
                          "actualPickUp": {
                            "type": "Date/Time",
                            "description": "Actual date when the carrier picked up the full container."
                          },
                          "fclWharfGateIn": {
                            "type": "Date/Time",
                            "description": "Actual date when full container arrived at the port."
                          },
                          "fclVesselLoaded": {
                            "type": "Date/Time",
                            "description": "Actual date when container was loaded onto vessel."
                          }
                        }
                      },
                      "import": {
                        "type": "object",
                        "description": "Container information at destination side.",
                        "properties": {
                          "estimatedFullDelivery": {
                            "type": "Date/Time",
                            "description": "Estimated date when container will be delivered to the final destination."
                          }
                        }
                      },
                      "containerType": {
                        "type": "object",
                        "description": "Type of container.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Container typecode."
                          },
                          "description": {
                            "type": "string",
                            "description": "description for Container typecode."
                          },
                          "isoCode": {
                            "type": "string",
                            "description": "ISOCode"
                          }
                        }
                      },
                      "containerReferenceNumbers": {
                        "description": "This object holds the collection of reference numbers associated with this container.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Reference Type code."
                            },
                            "value": {
                              "type": "string",
                              "description": "Actual value of reference code."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "transportLegs": {
                  "description": "Transport information of shipment.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "legOrder": {
                        "type": "string",
                        "description": "order in which legs are executed."
                      },
                      "transportationMode": {
                        "type": "string",
                        "description": "Mode of Transportation such as TL, LTL, Air, Ocean etc."
                      },
                      "legType": {
                        "type": "string",
                        "description": "leg Type"
                      },
                      "vesselName": {
                        "type": "string",
                        "description": "Vessel number"
                      },
                      "voyageFlightNumber": {
                        "type": "string",
                        "description": "voyageFlightNumber"
                      },
                      "portOfLoadingCode": {
                        "type": "string",
                        "description": "UNLOC Codes"
                      },
                      "portOfLoadingName": {
                        "type": "string",
                        "description": "Name of port of landing"
                      },
                      "portOfDischargeCode": {
                        "type": "string",
                        "description": "UNLOC Codes"
                      },
                      "portOfDischargeName": {
                        "type": "string",
                        "description": "Name of port of discharge"
                      },
                      "estimatedTimeOfArrival": {
                        "type": "string",
                        "description": "estimatedTime Of Arrival"
                      },
                      "estimatedTimeOfDeparture": {
                        "type": "string",
                        "description": "estimated Time Of Departure"
                      },
                      "actualTimeOfArrival": {
                        "type": "string",
                        "description": "actualTimeOfArrival"
                      },
                      "actualTimeOfDeparture": {
                        "type": "string",
                        "description": "actualTimeOfDeparture"
                      },
                      "carrier": {
                        "type": "object",
                        "description": "Carriers for each Legs",
                        "properties": {
                          "carrierCode": {
                            "type": "string",
                            "description": "carrier Code"
                          },
                          "carrierName": {
                            "type": "string",
                            "description": "carrier Name"
                          },
                          "carrierSCAC": {
                            "type": "string",
                            "description": "carrierSCAC"
                          }
                        }
                      },
                      "tripLegReferenceNumbers": {
                        "description": "Carrier Booking Reference.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "custom reference code."
                            },
                            "value": {
                              "type": "string",
                              "description": "Actual value of reference code."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "legOrder"
                    ]
                  }
                },
                "shipmentReferenceNumbers": {
                  "description": "shipment Reference Numbers collection.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "custom reference code."
                      },
                      "value": {
                        "type": "string",
                        "description": "Actual value of reference code."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "partnerIdentifierCode",
          "masterBillNumber",
          "Shipment"
        ],
        "example": {
          "masterBillNumber": "test2masterbill",
          "partnerIdentifierCode": "10-1-MOHAWKNYC",
          "shipment": [
            {
              "houseBillNumber": "test2housebill",
              "transportationMode": "Sea",
              "goodsDescription": "Test Goods Description",
              "totalQuantity": 14,
              "quantityUomCode": "PLT",
              "totalWeight": 13,
              "chargeableWeight": 10,
              "weightUomCode": "KG",
              "originCode": "CNSHG",
              "originETD": "2021-06-01T09:10:42.476Z",
              "destinationCode": "USLGB",
              "destinationETA": "2021-06-01T09:10:42.476Z",
              "incoTermsCode": "FOB",
              "additionalTerms": "Additional terms Connect",
              "location": [
                {
                  "locationType": "Pickup",
                  "locationCode": "FASANGMKE",
                  "locationName": "WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD",
                  "addressLine1": "SILVERLAKE ROAD AND HENGSHAN ROAD",
                  "addressLine2": "INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA",
                  "cityName": "WUHU",
                  "countryCode": "CN",
                  "countryName": "China"
                },
                {
                  "locationType": "Consignee",
                  "locationCode": "MOHAWKNYC",
                  "locationName": "Mohawk Group Inc",
                  "addressLine1": "37 E 18TH ST",
                  "cityName": "NEW YORK",
                  "stateCode": "NY",
                  "zipCode": "10003",
                  "countryCode": "US",
                  "countryName": "United States"
                },
                {
                  "locationType": "Delivery",
                  "locationCode": "HITPRODEN",
                  "locationName": "GEODIS",
                  "addressLine1": "1101 Whitaker Rd",
                  "cityName": "Plainfield",
                  "stateCode": "IN",
                  "zipCode": "46168",
                  "countryCode": "US",
                  "countryName": "United States",
                  "dates": [
                    {
                      "type": "ESTIMATEDDELIVERY",
                      "value": "2021-06-09T10:00:57.528Z"
                    },
                    {
                      "type": "ACTUALDELIVERY",
                      "value": "2021-06-07T10:00:57.528Z"
                    },
                    {
                      "type": "REQUESTEDBY",
                      "value": "2021-06-01T10:00:57.528Z"
                    }
                  ]
                },
                {
                  "locationType": "Shipper",
                  "locationCode": "WUHMATWUH1",
                  "locationName": "WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD",
                  "addressLine1": "SILVERLAKE ROAD AND HENGSHAN ROAD",
                  "addressLine2": "INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA",
                  "cityName": "WUHU",
                  "countryCode": "CN",
                  "countryName": "China",
                  "dates": [
                    {
                      "type": "ESTIMATEDPICKUP",
                      "value": "2021-06-02T10:00:57.528Z"
                    },
                    {
                      "type": "ACTUALPICKUP",
                      "value": "2021-06-03T10:00:57.528Z"
                    },
                    {
                      "type": "READYTIME",
                      "value": "2021-06-03T10:00:57.528Z"
                    },
                    {
                      "type": "CLOSETIME",
                      "value": "2021-06-06T10:00:57.528Z"
                    },
                    {
                      "type": "REQUESTEDBY",
                      "value": "2021-06-01T10:00:57.528Z"
                    }
                  ]
                },
                {
                  "locationType": "ControllingCustomer",
                  "locationCode": "MOHAWKNYC",
                  "locationName": "Mohawk Group Inc",
                  "addressLine1": "37 E 18TH ST",
                  "cityName": "NEW YORK",
                  "stateCode": "NY",
                  "zipCode": "10003",
                  "countryCode": "US",
                  "countryName": "United States"
                }
              ],
              "notes": [
                {
                  "type": "Special Instructions",
                  "value": "Special Instructions"
                }
              ],
              "packingLineDetails": [
                {
                  "productNumber": "1",
                  "itemNumber": "TESTNUM000001",
                  "packageQuantity": 650,
                  "packageTypeCode": "CTN",
                  "packageDescription": "DEHUMIDIFIER",
                  "height": 10,
                  "length": 10,
                  "width": 10,
                  "hlwUomCode": "IN",
                  "weight": 15.0,
                  "weightUomCode": "KG",
                  "volume": 70.670,
                  "volumeUomCode": "M3",
                  "nmfc": "testNMFC",
                  "unNumber": "testUNNumber",
                  "containerNumber": "TEST3165730",
                  "packingLineReferenceNumbers": [
                    {
                      "code": "INNERQTY",
                      "value": "750"
                    },
                    {
                      "code": "INNERQTYUOM",
                      "value": "PCE"
                    },
                    {
                      "code": "PONUMBER",
                      "value": "TEST000001"
                    }
                  ]
                }
              ],
              "container": [
                {
                  "containerNumber": "TEST3165730",
                  "sealNumber": "5656565",
                  "goodsWeight": 15978.64,
                  "grossWeight": 15978.640,
                  "tareWeight": 0.0,
                  "weightUomCode": "KG",
                  "export": {
                    "emptyRequiredBy": "2021-06-05T09:10:42.476Z",
                    "emptyReleasedFromCY": "2021-06-04T09:10:42.476Z",
                    "estimatedPickup": "2021-06-01T09:10:42.476Z",
                    "actualPickUp": "2021-06-02T09:10:42.476Z",
                    "fclWharfGateIn": "2021-06-03T09:10:42.476Z",
                    "fclVesselLoaded": "2021-06-04T09:10:42.476Z"
                  },
                  "import": {
                    "estimatedFullDelivery": "2021-06-08T09:10:42.476Z"
                  },
                  "containerType": {
                    "code": "40HC",
                    "description": "Forty foot high cube",
                    "isoCode": "45G0-40' LONG, 9'6 HIGH, 8' WIDE"
                  },
                  "containerReferenceNumbers": [
                    {
                      "code": "ET",
                      "value": "Reference3"
                    }
                  ]
                }
              ],
              "transportLegs": [
                {
                  "legOrder": 1,
                  "transportationMode": "ROA",
                  "legType": "OTH",
                  "voyageFlightNumber": "050R",
                  "portOfLoadingCode": "CNWUH",
                  "portOfLoadingName": "Wuhu",
                  "portOfDischargeCode": "CNSGH",
                  "portOfDischargeName": "Shanghai",
                  "estimatedTimeOfArrival": "2021-04-13T09:00",
                  "estimatedTimeOfDeparture": "2021-04-12T09:00",
                  "actualTimeOfArrival": "2021-04-13T09:00",
                  "actualTimeOfDeparture": "2021-04-12T09:00",
                  "carrier": {
                    "carrierCode": "LEOVINEPV1",
                    "carrierName": "LEON VINCENT OVERSEAS"
                  },
                  "tripLegReferenceNumbers": [
                    {
                      "code": "Test",
                      "value": "Test referencez"
                    }
                  ]
                },
                {
                  "legOrder": 2,
                  "transportationMode": "SEA",
                  "legType": "MAI",
                  "vesselName": "MSC JOSSELINE",
                  "voyageFlightNumber": "050R",
                  "portOfLoadingCode": "CNSGH",
                  "portOfLoadingName": "Shanghai",
                  "portOfDischargeCode": "USLGB",
                  "portOfDischargeName": "Long Beach",
                  "estimatedTimeOfArrival": "2021-04-19T09:00",
                  "estimatedTimeOfDeparture": "2021-04-13T09:00",
                  "actualTimeOfArrival": "2021-04-19T09:00",
                  "actualTimeOfDeparture": "2021-04-13T09:00",
                  "carrier": {
                    "carrierCode": "LEOVINEPV2",
                    "carrierName": "LEON VINCENT OVERSEAS"
                  },
                  "tripLegReferenceNumbers": [
                    {
                      "code": "Test",
                      "value": "Test referencez"
                    }
                  ]
                },
                {
                  "legOrder": 3,
                  "transportationMode": "ROA",
                  "legType": "OTH",
                  "voyageFlightNumber": "050R",
                  "portOfLoadingCode": "USLGB",
                  "portOfLoadingName": "Long Beach",
                  "portOfDischargeCode": "USPAF",
                  "portOfDischargeName": "Plainfield",
                  "estimatedTimeOfArrival": "2021-04-22T09:00",
                  "estimatedTimeOfDeparture": "2021-04-20T09:00",
                  "actualTimeOfArrival": "2021-04-22T09:00",
                  "actualTimeOfDeparture": "2021-04-20T09:00",
                  "carrier": {
                    "carrierCode": "LEOVINEPV3",
                    "carrierName": "LEON VINCENT OVERSEAS"
                  },
                  "tripLegReferenceNumbers": [
                    {
                      "code": "Test",
                      "value": "Test referencez"
                    }
                  ]
                }
              ],
              "shipmentReferenceNumbers": [
                {
                  "code": "Cargo Ready Date",
                  "value": "2021-04-19T19:22:00"
                },
                {
                  "code": "Space Release",
                  "value": "testvalue1"
                },
                {
                  "code": "SI Cut Off",
                  "value": "2021-04-19T19:22:00"
                },
                {
                  "code": "Actual SO Release Date",
                  "value": "2021-04-19T19:22:00"
                },
                {
                  "code": "Shipment Status",
                  "value": "SHIPPED"
                },
                {
                  "code": "Controlling Office/Agent",
                  "value": "OTHER"
                },
                {
                  "code": "PO Number",
                  "value": "1234"
                }
              ]
            }
          ]
        }
      },
      "shipmentBookingResponse": {
        "type": "object",
        "properties": {
          "BookingResponses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "GlobalTrackingNumbers": {
                  "type": "string",
                  "description": "GlobalTrackingNumbers"
                },
                "HwbNumber": {
                  "type": "string",
                  "description": "HwbNumber"
                }
              }
            }
          },
          "StatusCode": {
            "type": "string",
            "description": "StatusCode OK"
          },
          "Message": {
            "type": "string",
            "description": "Message"
          }
        },
        "example": {
          "BookingResponses": [
            {
              "GlobalTrackingNumbers": "RXONC11O3RREZY4F21",
              "HwbNumber": "test2housebill"
            }
          ],
          "StatusCode": "OK",
          "Message": "C21000444"
        }
      },
      "shipUnitsRequired": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          },
          {
            "type": "object",
            "properties": {
              "shipUnits": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "unitTypeCode": {
                      "type": "string",
                      "description": "Unit Type Code",
                      "enum": [
                        "ACCE",
                        "DRUM",
                        "SKIDS",
                        "ATTCH",
                        "ENVE",
                        "SLIP",
                        "BAGS",
                        "FEET",
                        "SPRS",
                        "BALE",
                        "FIRK",
                        "TOTE",
                        "BASK",
                        "GYLD",
                        "TRKL",
                        "BHDS",
                        "GAYL",
                        "TRLR",
                        "BNDL",
                        "KEGS",
                        "TRNK",
                        "BOXES",
                        "LOOS",
                        "TRAY",
                        "BRRL",
                        "OCTA",
                        "TUBE",
                        "BUCK",
                        "PACK",
                        "UNIT",
                        "CARB",
                        "PAIL",
                        "UNPK",
                        "CASES",
                        "PIEC",
                        "VEH",
                        "CASE",
                        "PALLETS",
                        "BINS",
                        "CHST",
                        "PLTS",
                        "COIL",
                        "RACK",
                        "CARTONS",
                        "RACKS",
                        "CRTS",
                        "REEL",
                        "CTN",
                        "ROLL",
                        "CYLS",
                        "SKID"
                      ]
                    },
                    "unitCount": {
                      "type": "integer",
                      "description": "Unit Count"
                    },
                    "width": {
                      "type": "integer",
                      "description": "Width"
                    },
                    "widthUomCode": {
                      "type": "string",
                      "description": "Width UOM Code",
                      "enum": [
                        "CM",
                        "IN",
                        "FT"
                      ]
                    },
                    "height": {
                      "type": "integer",
                      "description": "Height"
                    },
                    "heightUomCode": {
                      "type": "string",
                      "description": "Height UOM Code",
                      "enum": [
                        "CM",
                        "IN",
                        "FT"
                      ]
                    },
                    "weight": {
                      "type": "integer",
                      "description": "weight",
                      "enum": [
                        0
                      ]
                    },
                    "weightUomCode": {
                      "type": "string",
                      "description": "weightUomCode",
                      "enum": [
                        "KG",
                        "LB"
                      ]
                    },
                    "volume": {
                      "type": "integer",
                      "description": "volume",
                      "enum": [
                        0
                      ]
                    },
                    "volumeUomCode": {
                      "type": "string",
                      "description": "Volume UOM Code",
                      "enum": [
                        "CUCM",
                        "CUIN",
                        "CUFT"
                      ]
                    },
                    "length": {
                      "type": "integer",
                      "description": "volume",
                      "enum": [
                        0
                      ]
                    },
                    "lengthUomCode": {
                      "type": "integer",
                      "description": "volumeUomCode",
                      "enum": [
                        "CM",
                        "IN",
                        "FT"
                      ]
                    },
                    "shipUnitReferenceNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "code"
                          },
                          "type": {
                            "type": "string",
                            "description": "type"
                          },
                          "value": {
                            "type": "string",
                            "description": "type"
                          }
                        }
                      }
                    },
                    "shipUnitLine": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "itemCode": {
                            "type": "string",
                            "description": "Item's Product Code."
                          },
                          "itemDescription": {
                            "type": "string",
                            "description": "Item's description."
                          },
                          "units": {
                            "type": "integer",
                            "description": "Number of units."
                          },
                          "packageUnits": {
                            "type": "integer",
                            "description": "Number of packages."
                          },
                          "packageTypeCode": {
                            "type": "string",
                            "description": "Package type.",
                            "enum": [
                              "ACCE",
                              "DRUM",
                              "SKIDS",
                              "ATTCH",
                              "ENVE",
                              "SLIP",
                              "BAGS",
                              "FEET",
                              "SPRS",
                              "BALE",
                              "FIRK",
                              "TOTE",
                              "BASK",
                              "GYLD",
                              "TRKL",
                              "BHDS",
                              "GAYL",
                              "TRLR",
                              "BNDL",
                              "KEGS",
                              "TRNK",
                              "BOXES",
                              "LOOS",
                              "TRAY",
                              "BRRL",
                              "OCTA",
                              "TUBE",
                              "BUCK",
                              "PACK",
                              "UNIT",
                              "CARB",
                              "PAIL",
                              "UNPK",
                              "CASES",
                              "PIEC",
                              "VEH",
                              "CASE",
                              "PALLETS",
                              "BINS",
                              "CHST",
                              "PLTS",
                              "COIL",
                              "RACK",
                              "CARTONS",
                              "RACKS",
                              "CRTS",
                              "REEL",
                              "CTN",
                              "ROLL",
                              "CYLS",
                              "SKID"
                            ]
                          },
                          "weight": {
                            "type": "integer",
                            "description": "Item's weight."
                          },
                          "weightUomCode": {
                            "type": "string",
                            "description": "Weight- Unit of measure.",
                            "enum": [
                              "KG",
                              "LB"
                            ]
                          },
                          "height": {
                            "type": "number",
                            "description": "Item's height."
                          },
                          "heightUomCode": {
                            "type": "string",
                            "description": "Height- Unit of measure.",
                            "enum": [
                              "CM",
                              "IN",
                              "FT"
                            ]
                          },
                          "length": {
                            "type": "number",
                            "description": "Item's length."
                          },
                          "lengthUomCode": {
                            "type": "string",
                            "description": "Length - Unit of measure.",
                            "enum": [
                              "CM",
                              "IN",
                              "FT"
                            ]
                          },
                          "width": {
                            "type": "integer",
                            "description": "Item's width."
                          },
                          "widthUomCode": {
                            "type": "string",
                            "description": "Width - Unit of measure.",
                            "enum": [
                              "CM",
                              "IN",
                              "FT"
                            ]
                          },
                          "volume": {
                            "type": "number",
                            "description": "Item's volume."
                          },
                          "volumeUomCode": {
                            "type": "string",
                            "description": "Volume - Unit of measure.",
                            "enum": [
                              "CUCM",
                              "CUIN",
                              "CUFT"
                            ]
                          },
                          "classCode": {
                            "type": "string",
                            "description": "This code represents product freight class.."
                          },
                          "nmfcCode": {
                            "type": "string",
                            "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                          },
                          "declaredValue": {
                            "type": "number",
                            "description": "Item's declared amount value."
                          },
                          "declaredValueCurrencyCode": {
                            "type": "string",
                            "description": "Item's declared value currency code."
                          },
                          "itemPrice": {
                            "type": "number",
                            "description": "Item's price value."
                          },
                          "itemPriceCurrencyCode": {
                            "type": "string",
                            "description": "Item's price currency code."
                          },
                          "isTemperatureControlled": {
                            "type": "boolean",
                            "description": "Whether item is temperature controlled or not."
                          },
                          "temperatureInformation": {
                            "type": "object",
                            "properties": {
                              "high": {
                                "type": "string",
                                "description": "High temperature."
                              },
                              "low": {
                                "type": "string",
                                "description": "Low temperature."
                              },
                              "highUom": {
                                "type": "string",
                                "description": "High temperature Unit of measure."
                              },
                              "lowUom": {
                                "type": "string",
                                "description": "Low temperature Unit of measure."
                              }
                            },
                            "description": "Temperature information of the Item."
                          },
                          "isHazmat": {
                            "type": "boolean",
                            "description": "Whether item is hazardous or not."
                          },
                          "hazardousItemInfo": {
                            "type": "object",
                            "properties": {
                              "properShippingName": {
                                "type": "string",
                                "description": "Proper Shipping Name"
                              },
                              "receptacleSize": {
                                "type": "integer",
                                "description": "Receptacle size."
                              },
                              "hazardousClass": {
                                "type": "string",
                                "description": "Hazardous class."
                              },
                              "numberofReceptacles": {
                                "type": "integer",
                                "description": "Number of receptacles."
                              },
                              "isLimitedQuantityHazmat": {
                                "type": "boolean",
                                "description": "Whether item is a Limited Quantity Hazmat or not."
                              },
                              "hazardousDescription": {
                                "type": "string",
                                "description": "Hazardous description."
                              },
                              "shippingName": {
                                "type": "string",
                                "description": "Shipping Name."
                              },
                              "notes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Note's Type"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Note's Value"
                                    }
                                  }
                                }
                              }
                            },
                            "description": "Hazardous information if the item is Hazardous material (IsHazmat = true)"
                          },
                          "htsCode": {
                            "type": "string",
                            "description": "HTS codes are used to classify and define internationally traded goods"
                          },
                          "sku": {
                            "type": "string",
                            "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                          },
                          "purchaseOrderNumber": {
                            "type": "string",
                            "description": "Purchase Order Number."
                          },
                          "isOversized": {
                            "type": "boolean",
                            "description": "Whether item is a oversized or not."
                          },
                          "isStackable": {
                            "type": "boolean",
                            "description": "Whether item is stackable or not."
                          },
                          "itemNotes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Note's type."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Note's value."
                                }
                              }
                            },
                            "description": "Notes for this item as array values."
                          },
                          "itemServices": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "itemReferenceNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "Custom reference code."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type values such as CLIENT_REFERENCE , CP, CS etc.",
                                  "enum": [
                                    "CP",
                                    "CS",
                                    "NON_OTM_USER_EMAIL",
                                    "INCO_TERM",
                                    "SHIPPING_SERVICE",
                                    "SHIPPING_SERVICE",
                                    "PUBLIC_CG",
                                    "CG",
                                    "NAMED_LOCATION",
                                    "SHIPPER_PICKUP_NUM",
                                    "CLIENT_REFERENCE",
                                    "NON_MANAGED",
                                    "ZWF_REPORTED",
                                    "ZWF_STD_REASON",
                                    "ZWF_XPD_REASON",
                                    "ZWF_XPD",
                                    "BUS_UNIT",
                                    "PRO",
                                    "SHIPPER_BOL",
                                    "HOUSE_BOL",
                                    "SEAL_NUMBER",
                                    "OVERSIZE"
                                  ]
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Actual value of reference code."
                                }
                              }
                            },
                            "description": "This object holds the collection of reference numbers associated with this items."
                          },
                          "barcode": {
                            "type": "string",
                            "description": "Barcode"
                          },
                          "barcodeCreationOption": {
                            "type": "string",
                            "description": "Barcode creation option"
                          },
                          "itemType": {
                            "type": "integer",
                            "description": "Item's Type"
                          },
                          "sequenceNo": {
                            "type": "integer",
                            "description": "Sequence No"
                          },
                          "isPassengerAircraftForbidden": {
                            "type": "boolean",
                            "description": "Whether passenger aircraft is forbidden or not."
                          }
                        }
                      }
                    }
                  }
                },
                "description": "ship units"
              }
            }
          }
        ]
      }
    }
  }
}